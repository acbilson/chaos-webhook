{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105","program":"/Users/alexbilson/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","syn","--edition=2018","/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"clone-impls\"","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"parsing\"","--cfg","feature=\"printing\"","--cfg","feature=\"proc-macro\"","--cfg","feature=\"quote\"","-C","metadata=e5e5ddc6a64aea19","-C","extra-filename=-e5e5ddc6a64aea19","--out-dir","/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps","-L","dependency=/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps","--extern","proc_macro2=/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps/libproc_macro2-4fb1f52e4c23ca32.rmeta","--extern","quote=/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps/libquote-ec5a9b5febc75f8a.rmeta","--extern","unicode_ident=/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps/libunicode_ident-d8a7c243c7f42836.rmeta","--cap-lints","allow","--cfg","syn_disable_nightly_tests","--error-format=json","--sysroot","/Users/alexbilson/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps/libsyn-e5e5ddc6a64aea19.rmeta"},"prelude":{"crate_id":{"name":"syn","disambiguator":[14581969253206896920,0]},"crate_root":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src","external_crates":[{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12487381855063813090,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13467426375328407781,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8659080599643642399,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1796284392260788893,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6983393744351521083,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3250764090425844219,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18067812386044263164,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6811782277583973308,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[17503089037827845404,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15332210557822847131,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[9019949222091243314,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17527021512170473469,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[9435842560075755921,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4270248722430337885,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[17099984453502544643,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[9380643280414578943,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15215801742335923154,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[2627650859626512514,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12189808815098789143,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":20,"id":{"name":"proc_macro","disambiguator":[990417664438859422,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":21,"id":{"name":"proc_macro2","disambiguator":[10478170001060036718,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","num":22,"id":{"name":"unicode_ident","disambiguator":[17309831925098195259,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","num":23,"id":{"name":"quote","disambiguator":[5854933300777243767,0]}}],"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":0,"byte_end":32375,"line_start":1,"line_end":984,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":21,"index":1070},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":79592,"byte_end":79597,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":276}},{"kind":"Use","ref_id":{"krate":21,"index":1070},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11094,"byte_end":11099,"line_start":314,"line_end":314,"column_start":23,"column_end":28},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11094,"byte_end":11099,"line_start":314,"line_end":314,"column_start":23,"column_end":28},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5465},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11239,"byte_end":11248,"line_start":320,"line_end":320,"column_start":5,"column_end":14},"alias_span":null,"name":"AttrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5459},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11250,"byte_end":11259,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11261,"byte_end":11274,"line_start":320,"line_end":320,"column_start":27,"column_end":40},"alias_span":null,"name":"AttributeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5471},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11276,"byte_end":11280,"line_start":320,"line_end":320,"column_start":42,"column_end":46},"alias_span":null,"name":"Meta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5489},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11282,"byte_end":11290,"line_start":320,"line_end":320,"column_start":48,"column_end":56},"alias_span":null,"name":"MetaList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5493},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11292,"byte_end":11305,"line_start":320,"line_end":320,"column_start":58,"column_end":71},"alias_span":null,"name":"MetaNameValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5497},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11307,"byte_end":11317,"line_start":320,"line_end":320,"column_start":73,"column_end":83},"alias_span":null,"name":"NestedMeta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5536},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11473,"byte_end":11478,"line_start":329,"line_end":329,"column_start":5,"column_end":10},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5515},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11480,"byte_end":11486,"line_start":329,"line_end":329,"column_start":12,"column_end":18},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5530},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11488,"byte_end":11499,"line_start":329,"line_end":329,"column_start":20,"column_end":31},"alias_span":null,"name":"FieldsNamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5533},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11501,"byte_end":11514,"line_start":329,"line_end":329,"column_start":33,"column_end":46},"alias_span":null,"name":"FieldsUnnamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5510},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11516,"byte_end":11523,"line_start":329,"line_end":329,"column_start":48,"column_end":55},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5564},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11525,"byte_end":11533,"line_start":329,"line_end":329,"column_start":57,"column_end":65},"alias_span":null,"name":"VisCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5562},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11535,"byte_end":11544,"line_start":329,"line_end":329,"column_start":67,"column_end":76},"alias_span":null,"name":"VisPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5566},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11546,"byte_end":11559,"line_start":329,"line_end":329,"column_start":78,"column_end":91},"alias_span":null,"name":"VisRestricted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5542},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11565,"byte_end":11575,"line_start":330,"line_end":330,"column_start":5,"column_end":15},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5571},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11850,"byte_end":11854,"line_start":341,"line_end":341,"column_start":5,"column_end":9},"alias_span":null,"name":"Expr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5772},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11856,"byte_end":11865,"line_start":341,"line_end":341,"column_start":11,"column_end":20},"alias_span":null,"name":"ExprArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5776},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11867,"byte_end":11877,"line_start":341,"line_end":341,"column_start":22,"column_end":32},"alias_span":null,"name":"ExprAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5780},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11879,"byte_end":11891,"line_start":341,"line_end":341,"column_start":34,"column_end":46},"alias_span":null,"name":"ExprAssignOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5784},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11893,"byte_end":11902,"line_start":341,"line_end":341,"column_start":48,"column_end":57},"alias_span":null,"name":"ExprAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5788},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11904,"byte_end":11913,"line_start":341,"line_end":341,"column_start":59,"column_end":68},"alias_span":null,"name":"ExprAwait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5792},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11915,"byte_end":11925,"line_start":341,"line_end":341,"column_start":70,"column_end":80},"alias_span":null,"name":"ExprBinary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5797},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11927,"byte_end":11936,"line_start":341,"line_end":341,"column_start":82,"column_end":91},"alias_span":null,"name":"ExprBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5801},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11942,"byte_end":11949,"line_start":342,"line_end":342,"column_start":5,"column_end":12},"alias_span":null,"name":"ExprBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5805},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11951,"byte_end":11960,"line_start":342,"line_end":342,"column_start":14,"column_end":23},"alias_span":null,"name":"ExprBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5809},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11962,"byte_end":11970,"line_start":342,"line_end":342,"column_start":25,"column_end":33},"alias_span":null,"name":"ExprCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5814},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11972,"byte_end":11980,"line_start":342,"line_end":342,"column_start":35,"column_end":43},"alias_span":null,"name":"ExprCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5819},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11982,"byte_end":11993,"line_start":342,"line_end":342,"column_start":45,"column_end":56},"alias_span":null,"name":"ExprClosure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5823},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11995,"byte_end":12007,"line_start":342,"line_end":342,"column_start":58,"column_end":70},"alias_span":null,"name":"ExprContinue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5827},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12009,"byte_end":12018,"line_start":342,"line_end":342,"column_start":72,"column_end":81},"alias_span":null,"name":"ExprField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5832},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12020,"byte_end":12031,"line_start":342,"line_end":342,"column_start":83,"column_end":94},"alias_span":null,"name":"ExprForLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5836},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12037,"byte_end":12046,"line_start":343,"line_end":343,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5840},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12048,"byte_end":12054,"line_start":343,"line_end":343,"column_start":16,"column_end":22},"alias_span":null,"name":"ExprIf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5844},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12056,"byte_end":12065,"line_start":343,"line_end":343,"column_start":24,"column_end":33},"alias_span":null,"name":"ExprIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5849},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12067,"byte_end":12074,"line_start":343,"line_end":343,"column_start":35,"column_end":42},"alias_span":null,"name":"ExprLet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5853},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12076,"byte_end":12083,"line_start":343,"line_end":343,"column_start":44,"column_end":51},"alias_span":null,"name":"ExprLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5856},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12085,"byte_end":12093,"line_start":343,"line_end":343,"column_start":53,"column_end":61},"alias_span":null,"name":"ExprLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5860},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12095,"byte_end":12104,"line_start":343,"line_end":343,"column_start":63,"column_end":72},"alias_span":null,"name":"ExprMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5864},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12106,"byte_end":12115,"line_start":343,"line_end":343,"column_start":74,"column_end":83},"alias_span":null,"name":"ExprMatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5868},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12117,"byte_end":12131,"line_start":343,"line_end":343,"column_start":85,"column_end":99},"alias_span":null,"name":"ExprMethodCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5872},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12137,"byte_end":12146,"line_start":344,"line_end":344,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5876},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12148,"byte_end":12156,"line_start":344,"line_end":344,"column_start":16,"column_end":24},"alias_span":null,"name":"ExprPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5880},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12158,"byte_end":12167,"line_start":344,"line_end":344,"column_start":26,"column_end":35},"alias_span":null,"name":"ExprRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5884},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12169,"byte_end":12182,"line_start":344,"line_end":344,"column_start":37,"column_end":50},"alias_span":null,"name":"ExprReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5888},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12184,"byte_end":12194,"line_start":344,"line_end":344,"column_start":52,"column_end":62},"alias_span":null,"name":"ExprRepeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5892},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12196,"byte_end":12206,"line_start":344,"line_end":344,"column_start":64,"column_end":74},"alias_span":null,"name":"ExprReturn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5896},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12208,"byte_end":12218,"line_start":344,"line_end":344,"column_start":76,"column_end":86},"alias_span":null,"name":"ExprStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5900},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12220,"byte_end":12227,"line_start":344,"line_end":344,"column_start":88,"column_end":95},"alias_span":null,"name":"ExprTry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5904},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12233,"byte_end":12245,"line_start":345,"line_end":345,"column_start":5,"column_end":17},"alias_span":null,"name":"ExprTryBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5908},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12247,"byte_end":12256,"line_start":345,"line_end":345,"column_start":19,"column_end":28},"alias_span":null,"name":"ExprTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5912},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12258,"byte_end":12266,"line_start":345,"line_end":345,"column_start":30,"column_end":38},"alias_span":null,"name":"ExprType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5916},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12268,"byte_end":12277,"line_start":345,"line_end":345,"column_start":40,"column_end":49},"alias_span":null,"name":"ExprUnary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5920},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12279,"byte_end":12289,"line_start":345,"line_end":345,"column_start":51,"column_end":61},"alias_span":null,"name":"ExprUnsafe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5924},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12291,"byte_end":12300,"line_start":345,"line_end":345,"column_start":63,"column_end":72},"alias_span":null,"name":"ExprWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5928},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12302,"byte_end":12311,"line_start":345,"line_end":345,"column_start":74,"column_end":83},"alias_span":null,"name":"ExprYield","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5939},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12313,"byte_end":12318,"line_start":345,"line_end":345,"column_start":85,"column_end":90},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5932},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12320,"byte_end":12326,"line_start":345,"line_end":345,"column_start":92,"column_end":98},"alias_span":null,"name":"Member","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6012},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12477,"byte_end":12491,"line_start":352,"line_end":352,"column_start":5,"column_end":19},"alias_span":null,"name":"BoundLifetimes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12493,"byte_end":12503,"line_start":352,"line_end":352,"column_start":21,"column_end":31},"alias_span":null,"name":"ConstParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5965},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12505,"byte_end":12517,"line_start":352,"line_end":352,"column_start":33,"column_end":45},"alias_span":null,"name":"GenericParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5960},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12519,"byte_end":12527,"line_start":352,"line_end":352,"column_start":47,"column_end":55},"alias_span":null,"name":"Generics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5990},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12529,"byte_end":12540,"line_start":352,"line_end":352,"column_start":57,"column_end":68},"alias_span":null,"name":"LifetimeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6071},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12542,"byte_end":12553,"line_start":352,"line_end":352,"column_start":70,"column_end":81},"alias_span":null,"name":"PredicateEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6067},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12559,"byte_end":12576,"line_start":353,"line_end":353,"column_start":5,"column_end":22},"alias_span":null,"name":"PredicateLifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6062},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12578,"byte_end":12591,"line_start":353,"line_end":353,"column_start":24,"column_end":37},"alias_span":null,"name":"PredicateType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6030},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12593,"byte_end":12603,"line_start":353,"line_end":353,"column_start":39,"column_end":49},"alias_span":null,"name":"TraitBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6035},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12605,"byte_end":12623,"line_start":353,"line_end":353,"column_start":51,"column_end":69},"alias_span":null,"name":"TraitBoundModifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5983},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12625,"byte_end":12634,"line_start":353,"line_end":353,"column_start":71,"column_end":80},"alias_span":null,"name":"TypeParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6017},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12636,"byte_end":12650,"line_start":353,"line_end":353,"column_start":82,"column_end":96},"alias_span":null,"name":"TypeParamBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6041},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12656,"byte_end":12667,"line_start":354,"line_end":354,"column_start":5,"column_end":16},"alias_span":null,"name":"WhereClause","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6044},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12669,"byte_end":12683,"line_start":354,"line_end":354,"column_start":18,"column_end":32},"alias_span":null,"name":"WherePredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12791,"byte_end":12803,"line_start":357,"line_end":357,"column_start":27,"column_end":39},"alias_span":null,"name":"ImplGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12805,"byte_end":12814,"line_start":357,"line_end":357,"column_start":41,"column_end":50},"alias_span":null,"name":"Turbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":12816,"byte_end":12828,"line_start":357,"line_end":357,"column_start":52,"column_end":64},"alias_span":null,"name":"TypeGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13573,"byte_end":13581,"line_start":377,"line_end":377,"column_start":26,"column_end":34},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13573,"byte_end":13581,"line_start":377,"line_end":377,"column_start":26,"column_end":34},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6075},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13619,"byte_end":13622,"line_start":381,"line_end":381,"column_start":5,"column_end":8},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13619,"byte_end":13622,"line_start":381,"line_end":381,"column_start":5,"column_end":8},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6128},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13624,"byte_end":13631,"line_start":381,"line_end":381,"column_start":10,"column_end":17},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13624,"byte_end":13631,"line_start":381,"line_end":381,"column_start":10,"column_end":17},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6120},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13633,"byte_end":13640,"line_start":381,"line_end":381,"column_start":19,"column_end":26},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6139},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13633,"byte_end":13640,"line_start":381,"line_end":381,"column_start":19,"column_end":26},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6118},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13642,"byte_end":13652,"line_start":381,"line_end":381,"column_start":28,"column_end":38},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6136},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13642,"byte_end":13652,"line_start":381,"line_end":381,"column_start":28,"column_end":38},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6122},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13654,"byte_end":13661,"line_start":381,"line_end":381,"column_start":40,"column_end":47},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6142},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13654,"byte_end":13661,"line_start":381,"line_end":381,"column_start":40,"column_end":47},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6126},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13663,"byte_end":13671,"line_start":381,"line_end":381,"column_start":49,"column_end":57},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6148},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13663,"byte_end":13671,"line_start":381,"line_end":381,"column_start":49,"column_end":57},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6124},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13673,"byte_end":13679,"line_start":381,"line_end":381,"column_start":59,"column_end":65},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6145},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13673,"byte_end":13679,"line_start":381,"line_end":381,"column_start":59,"column_end":65},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6116},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13681,"byte_end":13687,"line_start":381,"line_end":381,"column_start":67,"column_end":73},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6133},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13681,"byte_end":13687,"line_start":381,"line_end":381,"column_start":67,"column_end":73},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6149},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13689,"byte_end":13697,"line_start":381,"line_end":381,"column_start":75,"column_end":83},"alias_span":null,"name":"StrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6155},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13833,"byte_end":13838,"line_start":387,"line_end":387,"column_start":22,"column_end":27},"alias_span":null,"name":"Macro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6160},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13840,"byte_end":13854,"line_start":387,"line_end":387,"column_start":29,"column_end":43},"alias_span":null,"name":"MacroDelimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6176},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13971,"byte_end":13975,"line_start":392,"line_end":392,"column_start":25,"column_end":29},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6196},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13977,"byte_end":13985,"line_start":392,"line_end":392,"column_start":31,"column_end":39},"alias_span":null,"name":"DataEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6192},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13987,"byte_end":13997,"line_start":392,"line_end":392,"column_start":41,"column_end":51},"alias_span":null,"name":"DataStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6200},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":13999,"byte_end":14008,"line_start":392,"line_end":392,"column_start":53,"column_end":62},"alias_span":null,"name":"DataUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6170},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14010,"byte_end":14021,"line_start":392,"line_end":392,"column_start":64,"column_end":75},"alias_span":null,"name":"DeriveInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6203},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14153,"byte_end":14158,"line_start":397,"line_end":397,"column_start":21,"column_end":26},"alias_span":null,"name":"BinOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6288},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14160,"byte_end":14164,"line_start":397,"line_end":397,"column_start":28,"column_end":32},"alias_span":null,"name":"UnOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6425},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14405,"byte_end":14408,"line_start":408,"line_end":408,"column_start":5,"column_end":8},"alias_span":null,"name":"Abi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6428},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14410,"byte_end":14419,"line_start":408,"line_end":408,"column_start":10,"column_end":19},"alias_span":null,"name":"BareFnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6435},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14421,"byte_end":14431,"line_start":408,"line_end":408,"column_start":21,"column_end":31},"alias_span":null,"name":"ReturnType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6298},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14433,"byte_end":14437,"line_start":408,"line_end":408,"column_start":33,"column_end":37},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6374},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14439,"byte_end":14448,"line_start":408,"line_end":408,"column_start":39,"column_end":48},"alias_span":null,"name":"TypeArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6379},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14450,"byte_end":14460,"line_start":408,"line_end":408,"column_start":50,"column_end":60},"alias_span":null,"name":"TypeBareFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6388},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14462,"byte_end":14471,"line_start":408,"line_end":408,"column_start":62,"column_end":71},"alias_span":null,"name":"TypeGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6391},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14473,"byte_end":14486,"line_start":408,"line_end":408,"column_start":73,"column_end":86},"alias_span":null,"name":"TypeImplTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6394},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14488,"byte_end":14497,"line_start":408,"line_end":408,"column_start":88,"column_end":97},"alias_span":null,"name":"TypeInfer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6396},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14503,"byte_end":14512,"line_start":409,"line_end":409,"column_start":5,"column_end":14},"alias_span":null,"name":"TypeMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6398},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14514,"byte_end":14523,"line_start":409,"line_end":409,"column_start":16,"column_end":25},"alias_span":null,"name":"TypeNever","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6400},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14525,"byte_end":14534,"line_start":409,"line_end":409,"column_start":27,"column_end":36},"alias_span":null,"name":"TypeParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6403},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14536,"byte_end":14544,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"alias_span":null,"name":"TypePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6406},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14546,"byte_end":14553,"line_start":409,"line_end":409,"column_start":48,"column_end":55},"alias_span":null,"name":"TypePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6411},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14555,"byte_end":14568,"line_start":409,"line_end":409,"column_start":57,"column_end":70},"alias_span":null,"name":"TypeReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6416},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14570,"byte_end":14579,"line_start":409,"line_end":409,"column_start":72,"column_end":81},"alias_span":null,"name":"TypeSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6419},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14581,"byte_end":14596,"line_start":409,"line_end":409,"column_start":83,"column_end":98},"alias_span":null,"name":"TypeTraitObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6422},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14602,"byte_end":14611,"line_start":410,"line_end":410,"column_start":5,"column_end":14},"alias_span":null,"name":"TypeTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6432},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":14613,"byte_end":14621,"line_start":410,"line_end":410,"column_start":16,"column_end":24},"alias_span":null,"name":"Variadic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6473},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15022,"byte_end":15052,"line_start":425,"line_end":425,"column_start":5,"column_end":35},"alias_span":null,"name":"AngleBracketedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6478},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15054,"byte_end":15061,"line_start":425,"line_end":425,"column_start":37,"column_end":44},"alias_span":null,"name":"Binding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6482},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15063,"byte_end":15073,"line_start":425,"line_end":425,"column_start":46,"column_end":56},"alias_span":null,"name":"Constraint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6457},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15075,"byte_end":15090,"line_start":425,"line_end":425,"column_start":58,"column_end":73},"alias_span":null,"name":"GenericArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6486},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15096,"byte_end":15125,"line_start":426,"line_end":426,"column_start":5,"column_end":34},"alias_span":null,"name":"ParenthesizedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6442},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15127,"byte_end":15131,"line_start":426,"line_end":426,"column_start":36,"column_end":40},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6448},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15133,"byte_end":15146,"line_start":426,"line_end":426,"column_start":42,"column_end":55},"alias_span":null,"name":"PathArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6445},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15148,"byte_end":15159,"line_start":426,"line_end":426,"column_start":57,"column_end":68},"alias_span":null,"name":"PathSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6490},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15161,"byte_end":15166,"line_start":426,"line_end":426,"column_start":70,"column_end":75},"alias_span":null,"name":"QSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":26452,"byte_end":26453,"line_start":787,"line_end":787,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2801},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507649,"byte_end":507654,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":2804},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507649,"byte_end":507654,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":2836},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507675,"byte_end":507677,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":2838},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507675,"byte_end":507677,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":2831},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507679,"byte_end":507688,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":2835},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507679,"byte_end":507688,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":3157},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507713,"byte_end":507720,"line_start":3,"line_end":3,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":3161},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507713,"byte_end":507720,"line_start":3,"line_end":3,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":5,"index":5077},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507735,"byte_end":507738,"line_start":4,"line_end":4,"column_start":14,"column_end":17},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":10117},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507747,"byte_end":507752,"line_start":4,"line_end":4,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":10120},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507747,"byte_end":507752,"line_start":4,"line_end":4,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":10077},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507754,"byte_end":507763,"line_start":4,"line_end":4,"column_start":33,"column_end":42},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":10331},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507786,"byte_end":507790,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":10337},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507786,"byte_end":507790,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":10341},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507792,"byte_end":507798,"line_start":5,"line_end":5,"column_start":27,"column_end":33},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":3189},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507822,"byte_end":507826,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":3190},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507822,"byte_end":507826,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40564},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507858,"byte_end":507862,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40565},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507858,"byte_end":507862,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40566},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507864,"byte_end":507868,"line_start":7,"line_end":7,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40567},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507864,"byte_end":507868,"line_start":7,"line_end":7,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40695},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507901,"byte_end":507904,"line_start":8,"line_end":8,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40696},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507901,"byte_end":507904,"line_start":8,"line_end":8,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40692},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507906,"byte_end":507908,"line_start":8,"line_end":8,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":2,"index":40693},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507906,"byte_end":507908,"line_start":8,"line_end":8,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":21,"index":1003},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507988,"byte_end":507992,"line_start":13,"line_end":13,"column_start":23,"column_end":27},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":21,"index":998},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":507994,"byte_end":508005,"line_start":13,"line_end":13,"column_start":29,"column_end":40},"alias_span":null,"name":"TokenStream2","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508076,"byte_end":508088,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"alias_span":null,"name":"parse_braces","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508090,"byte_end":508104,"line_start":16,"line_end":16,"column_start":38,"column_end":52},"alias_span":null,"name":"parse_brackets","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508106,"byte_end":508118,"line_start":16,"line_end":16,"column_start":54,"column_end":66},"alias_span":null,"name":"parse_parens","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":0,"index":2812},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508143,"byte_end":508152,"line_start":18,"line_end":18,"column_start":22,"column_end":31},"alias_span":null,"name":"IntoSpans","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":20,"index":3201},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508303,"byte_end":508314,"line_start":24,"line_end":24,"column_start":21,"column_end":32},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":23,"index":117},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508362,"byte_end":508370,"line_start":27,"line_end":27,"column_start":17,"column_end":25},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":23,"index":18},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508372,"byte_end":508386,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"alias_span":null,"name":"TokenStreamExt","value":"","parent":{"krate":0,"index":2703}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539602,"byte_end":539607,"line_start":210,"line_end":210,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2939}},{"kind":"Use","ref_id":{"krate":0,"index":3273},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539609,"byte_end":539615,"line_start":210,"line_end":210,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2939}},{"kind":"Use","ref_id":{"krate":0,"index":2913},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539645,"byte_end":539655,"line_start":211,"line_end":211,"column_start":28,"column_end":38},"alias_span":null,"name":"Lookahead1","value":"","parent":{"krate":0,"index":2939}},{"kind":"Use","ref_id":{"krate":0,"index":2925},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539657,"byte_end":539661,"line_start":211,"line_end":211,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":2939}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27087,"byte_end":27092,"line_start":819,"line_end":819,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3273},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27094,"byte_end":27100,"line_start":819,"line_end":819,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":0,"byte_end":32375,"line_start":1,"line_end":984,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":15},{"krate":0,"index":66},{"krate":0,"index":276},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":464},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1668},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1996},{"krate":0,"index":2106},{"krate":0,"index":2155},{"krate":0,"index":2205},{"krate":0,"index":2616},{"krate":0,"index":2658},{"krate":0,"index":2688},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2790},{"krate":0,"index":2796},{"krate":0,"index":2805},{"krate":0,"index":2808},{"krate":0,"index":2853},{"krate":0,"index":2883},{"krate":0,"index":2939},{"krate":0,"index":3174},{"krate":0,"index":3197},{"krate":0,"index":3213},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3350}],"decl_id":null,"docs":" [![github]](https://github.com/dtolnay/syn)&ensp;[![crates-io]](https://crates.io/crates/syn)&ensp;[![docs-rs]](crate)","sig":null,"attributes":[{"value":"/ [![github]](https://github.com/dtolnay/syn)&ensp;[![crates-io]](https://crates.io/crates/syn)&ensp;[![docs-rs]](crate)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":0,"byte_end":122,"line_start":1,"line_end":1,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":123,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":127,"byte_end":233,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ [crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":234,"byte_end":344,"line_start":4,"line_end":4,"column_start":1,"column_end":111}},{"value":"/ [docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":345,"byte_end":454,"line_start":5,"line_end":5,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":455,"byte_end":458,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":459,"byte_end":467,"line_start":7,"line_end":7,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":468,"byte_end":471,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Syn is a parsing library for parsing a stream of Rust tokens into a syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":472,"byte_end":550,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ tree of Rust source code.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":551,"byte_end":580,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":581,"byte_end":584,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Currently this library is geared toward use in Rust procedural macros, but","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":585,"byte_end":663,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ contains some APIs that may be useful more generally.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":664,"byte_end":721,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":722,"byte_end":725,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - **Data structures** — Syn provides a complete syntax tree that can","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":726,"byte_end":800,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/   represent any valid Rust source code. The syntax tree is rooted at","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":801,"byte_end":873,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   [`syn::File`] which represents a full source file, but there are other","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":874,"byte_end":950,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   entry points that may be useful to procedural macros including","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":951,"byte_end":1019,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   [`syn::Item`], [`syn::Expr`] and [`syn::Type`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1020,"byte_end":1073,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1074,"byte_end":1077,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - **Derives** — Of particular interest to derive macros is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1078,"byte_end":1142,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/   [`syn::DeriveInput`] which is any of the three legal input items to a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1143,"byte_end":1218,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/   derive macro. An example below shows using this type in a library that can","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1219,"byte_end":1299,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/   derive implementations of a user-defined trait.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1300,"byte_end":1353,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1354,"byte_end":1357,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - **Parsing** — Parsing in Syn is built around [parser functions] with the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1358,"byte_end":1438,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/   signature `fn(ParseStream) -> Result<T>`. Every syntax tree node defined","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1439,"byte_end":1517,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/   by Syn is individually parsable and may be used as a building block for","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1518,"byte_end":1595,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/   custom syntaxes, or you may dream up your own brand new syntax without","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1596,"byte_end":1672,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/   involving any of our syntax tree types.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1673,"byte_end":1718,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1719,"byte_end":1722,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - **Location information** — Every token parsed by Syn is associated with a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1723,"byte_end":1804,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/   `Span` that tracks line and column information back to the source of that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1805,"byte_end":1884,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   token. These spans allow a procedural macro to display detailed error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1885,"byte_end":1960,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/   messages pointing to all the right places in the user's code. There is an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":1961,"byte_end":2040,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/   example of this below.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2041,"byte_end":2069,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2070,"byte_end":2073,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - **Feature flags** — Functionality is aggressively feature gated so your","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2074,"byte_end":2153,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/   procedural macros enable only what they need, and do not pay in compile","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2154,"byte_end":2231,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/   time for all the rest.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2232,"byte_end":2260,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2261,"byte_end":2264,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`syn::File`]: File","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2265,"byte_end":2288,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ [`syn::Item`]: Item","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2289,"byte_end":2312,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ [`syn::Expr`]: Expr","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2313,"byte_end":2336,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ [`syn::Type`]: Type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2337,"byte_end":2360,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ [`syn::DeriveInput`]: DeriveInput","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2361,"byte_end":2398,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/ [parser functions]: mod@parse","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2399,"byte_end":2432,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2433,"byte_end":2436,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2437,"byte_end":2445,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2446,"byte_end":2449,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example of a derive macro","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2450,"byte_end":2481,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2482,"byte_end":2485,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The canonical derive macro using Syn looks like this. We write an ordinary","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2486,"byte_end":2564,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ Rust function tagged with a `proc_macro_derive` attribute and the name of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2565,"byte_end":2642,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ the trait we are deriving. Any time that derive appears in the user's code,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2643,"byte_end":2722,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ the Rust compiler passes their data structure as tokens into our macro. We","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2723,"byte_end":2801,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ get to execute arbitrary Rust code to figure out what to do with those","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2802,"byte_end":2876,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ tokens, then hand some tokens back to the compiler to compile into the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2877,"byte_end":2951,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ user's crate.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2952,"byte_end":2969,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2970,"byte_end":2973,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`TokenStream`]: proc_macro::TokenStream","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":2974,"byte_end":3018,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3019,"byte_end":3022,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3023,"byte_end":3034,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3035,"byte_end":3053,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ syn = \"1.0\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3054,"byte_end":3069,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/ quote = \"1.0\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3070,"byte_end":3087,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3088,"byte_end":3091,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [lib]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3092,"byte_end":3101,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ proc-macro = true","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3102,"byte_end":3123,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3124,"byte_end":3131,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3132,"byte_end":3135,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3136,"byte_end":3143,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3144,"byte_end":3174,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3175,"byte_end":3180,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3181,"byte_end":3213,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/ use quote::quote;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3214,"byte_end":3235,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/ use syn::{parse_macro_input, DeriveInput};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3236,"byte_end":3282,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3283,"byte_end":3286,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3287,"byte_end":3333,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3334,"byte_end":3367,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3368,"byte_end":3376,"line_start":81,"line_end":81,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3377,"byte_end":3433,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/     // Parse the input tokens into a syntax tree","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3434,"byte_end":3486,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3487,"byte_end":3548,"line_start":84,"line_end":84,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3549,"byte_end":3552,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3553,"byte_end":3612,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3613,"byte_end":3644,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         // ...","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3645,"byte_end":3663,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3664,"byte_end":3674,"line_start":89,"line_end":89,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3675,"byte_end":3678,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     // Hand the output tokens back to the compiler","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3679,"byte_end":3733,"line_start":91,"line_end":91,"column_start":1,"column_end":55}},{"value":"/     TokenStream::from(expanded)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3734,"byte_end":3769,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3770,"byte_end":3775,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3776,"byte_end":3783,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3784,"byte_end":3787,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The [`heapsize`] example directory shows a complete working implementation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3788,"byte_end":3866,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ of a derive macro. It works on any Rust compiler 1.31+. The example derives","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3867,"byte_end":3946,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ a `HeapSize` trait which computes an estimate of the amount of heap memory","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":3947,"byte_end":4025,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ owned by a value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4026,"byte_end":4047,"line_start":99,"line_end":99,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4048,"byte_end":4051,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ [`heapsize`]: https://github.com/dtolnay/syn/tree/master/examples/heapsize","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4052,"byte_end":4130,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4131,"byte_end":4134,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4135,"byte_end":4142,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ pub trait HeapSize {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4143,"byte_end":4167,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/     /// Total number of bytes of heap memory owned by `self`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4168,"byte_end":4233,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/     fn heap_size_of_children(&self) -> usize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4234,"byte_end":4283,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4284,"byte_end":4289,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4290,"byte_end":4297,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4298,"byte_end":4301,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The derive macro allows users to write `#[derive(HeapSize)]` on data","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4302,"byte_end":4374,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/ structures in their program.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4375,"byte_end":4407,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4408,"byte_end":4411,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4412,"byte_end":4419,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4420,"byte_end":4466,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4467,"byte_end":4490,"line_start":115,"line_end":115,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4491,"byte_end":4499,"line_start":116,"line_end":116,"column_start":1,"column_end":9}},{"value":"/ struct Demo<'a, T: ?Sized> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4500,"byte_end":4532,"line_start":117,"line_end":117,"column_start":1,"column_end":33}},{"value":"/     a: Box<T>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4533,"byte_end":4551,"line_start":118,"line_end":118,"column_start":1,"column_end":19}},{"value":"/     b: u8,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4552,"byte_end":4566,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/     c: &'a str,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4567,"byte_end":4586,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/     d: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4587,"byte_end":4605,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4606,"byte_end":4611,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4612,"byte_end":4619,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4620,"byte_end":4623,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ <p><br></p>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4624,"byte_end":4639,"line_start":125,"line_end":125,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4640,"byte_end":4643,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Spans and error reporting","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4644,"byte_end":4675,"line_start":127,"line_end":127,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4676,"byte_end":4679,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The token-based procedural macro API provides great control over where the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4680,"byte_end":4758,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ compiler's error messages are displayed in user code. Consider the error the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4759,"byte_end":4839,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ user sees if one of their field types does not implement `HeapSize`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4840,"byte_end":4912,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4913,"byte_end":4916,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4917,"byte_end":4924,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4925,"byte_end":4971,"line_start":134,"line_end":134,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4972,"byte_end":4995,"line_start":135,"line_end":135,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":4996,"byte_end":5004,"line_start":136,"line_end":136,"column_start":1,"column_end":9}},{"value":"/ struct Broken {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5005,"byte_end":5024,"line_start":137,"line_end":137,"column_start":1,"column_end":20}},{"value":"/     ok: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5025,"byte_end":5044,"line_start":138,"line_end":138,"column_start":1,"column_end":20}},{"value":"/     bad: std::thread::Thread,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5045,"byte_end":5078,"line_start":139,"line_end":139,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5079,"byte_end":5084,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5085,"byte_end":5092,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5093,"byte_end":5096,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ By tracking span information all the way through the expansion of a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5097,"byte_end":5168,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/ procedural macro as shown in the `heapsize` example, token-based macros in","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5169,"byte_end":5247,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ Syn are able to trigger errors that directly pinpoint the source of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5248,"byte_end":5323,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ problem.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5324,"byte_end":5336,"line_start":146,"line_end":146,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5337,"byte_end":5340,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5341,"byte_end":5352,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `std::thread::Thread: HeapSize` is not satisfied","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5353,"byte_end":5435,"line_start":149,"line_end":149,"column_start":1,"column_end":83}},{"value":"/  --> src/main.rs:7:5","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5436,"byte_end":5460,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/   |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5461,"byte_end":5468,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ 7 |     bad: std::thread::Thread,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5469,"byte_end":5506,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/   |     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HeapSize` is not implemented for `Thread`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5507,"byte_end":5596,"line_start":153,"line_end":153,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5597,"byte_end":5604,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5605,"byte_end":5608,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5609,"byte_end":5617,"line_start":156,"line_end":156,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5618,"byte_end":5621,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Parsing a custom syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5622,"byte_end":5651,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5652,"byte_end":5655,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The [`lazy-static`] example directory shows the implementation of a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5656,"byte_end":5727,"line_start":160,"line_end":160,"column_start":1,"column_end":72}},{"value":"/ `functionlike!(...)` procedural macro in which the input tokens are parsed","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5728,"byte_end":5806,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ using Syn's parsing API.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5807,"byte_end":5835,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5836,"byte_end":5839,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [`lazy-static`]: https://github.com/dtolnay/syn/tree/master/examples/lazy-static","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5840,"byte_end":5924,"line_start":164,"line_end":164,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5925,"byte_end":5928,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The example reimplements the popular `lazy_static` crate from crates.io as a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":5929,"byte_end":6009,"line_start":166,"line_end":166,"column_start":1,"column_end":81}},{"value":"/ procedural macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6010,"byte_end":6031,"line_start":167,"line_end":167,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6032,"byte_end":6035,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6036,"byte_end":6043,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # macro_rules! lazy_static {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6044,"byte_end":6076,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/ #     ($($tt:tt)*) => {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6077,"byte_end":6105,"line_start":171,"line_end":171,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6106,"byte_end":6113,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6114,"byte_end":6119,"line_start":173,"line_end":173,"column_start":1,"column_end":6}},{"value":"/ lazy_static! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6120,"byte_end":6138,"line_start":174,"line_end":174,"column_start":1,"column_end":19}},{"value":"/     static ref USERNAME: Regex = Regex::new(\"^[a-z0-9_-]{3,16}$\").unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6139,"byte_end":6218,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6219,"byte_end":6224,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6225,"byte_end":6232,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6233,"byte_end":6236,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ The implementation shows how to trigger custom warnings and error messages","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6237,"byte_end":6315,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/ on the macro input.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6316,"byte_end":6339,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6340,"byte_end":6343,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6344,"byte_end":6355,"line_start":182,"line_end":182,"column_start":1,"column_end":12}},{"value":"/ warning: come on, pick a more creative name","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6356,"byte_end":6403,"line_start":183,"line_end":183,"column_start":1,"column_end":48}},{"value":"/   --> src/main.rs:10:16","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6404,"byte_end":6431,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6432,"byte_end":6440,"line_start":185,"line_end":185,"column_start":1,"column_end":9}},{"value":"/ 10 |     static ref FOO: String = \"lazy_static\".to_owned();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6441,"byte_end":6504,"line_start":186,"line_end":186,"column_start":1,"column_end":64}},{"value":"/    |                ^^^","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6505,"byte_end":6532,"line_start":187,"line_end":187,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6533,"byte_end":6540,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6541,"byte_end":6544,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6545,"byte_end":6553,"line_start":190,"line_end":190,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6554,"byte_end":6557,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Testing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6558,"byte_end":6571,"line_start":192,"line_end":192,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6572,"byte_end":6575,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ When testing macros, we often care not just that the macro can be used","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6576,"byte_end":6650,"line_start":194,"line_end":194,"column_start":1,"column_end":75}},{"value":"/ successfully but also that when the macro is provided with invalid input it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6651,"byte_end":6730,"line_start":195,"line_end":195,"column_start":1,"column_end":80}},{"value":"/ produces maximally helpful error messages. Consider using the [`trybuild`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6731,"byte_end":6809,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ crate to write tests for errors that are emitted by your macro or errors","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6810,"byte_end":6886,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ detected by the Rust compiler in the expanded code following misuse of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6887,"byte_end":6965,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ macro. Such tests help avoid regressions from later refactors that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":6966,"byte_end":7036,"line_start":199,"line_end":199,"column_start":1,"column_end":71}},{"value":"/ mistakenly make an error no longer trigger or be less helpful than it used","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7037,"byte_end":7115,"line_start":200,"line_end":200,"column_start":1,"column_end":79}},{"value":"/ to be.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7116,"byte_end":7126,"line_start":201,"line_end":201,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7127,"byte_end":7130,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ [`trybuild`]: https://github.com/dtolnay/trybuild","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7131,"byte_end":7184,"line_start":203,"line_end":203,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7185,"byte_end":7188,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7189,"byte_end":7197,"line_start":205,"line_end":205,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7198,"byte_end":7201,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Debugging","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7202,"byte_end":7217,"line_start":207,"line_end":207,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7218,"byte_end":7221,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ When developing a procedural macro it can be helpful to look at what the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7222,"byte_end":7298,"line_start":209,"line_end":209,"column_start":1,"column_end":77}},{"value":"/ generated code looks like. Use `cargo rustc -- -Zunstable-options","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7299,"byte_end":7368,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ --pretty=expanded` or the [`cargo expand`] subcommand.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7369,"byte_end":7427,"line_start":211,"line_end":211,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7428,"byte_end":7431,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ [`cargo expand`]: https://github.com/dtolnay/cargo-expand","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7432,"byte_end":7493,"line_start":213,"line_end":213,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7494,"byte_end":7497,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ To show the expanded code for some crate that uses your procedural macro,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7498,"byte_end":7575,"line_start":215,"line_end":215,"column_start":1,"column_end":78}},{"value":"/ run `cargo expand` from that crate. To show the expanded code for one of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7576,"byte_end":7652,"line_start":216,"line_end":216,"column_start":1,"column_end":77}},{"value":"/ your own test cases, run `cargo expand --test the_test_case` where the last","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7653,"byte_end":7732,"line_start":217,"line_end":217,"column_start":1,"column_end":80}},{"value":"/ argument is the name of the test file without the `.rs` extension.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7733,"byte_end":7803,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7804,"byte_end":7807,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This write-up by Brandon W Maister discusses debugging in more detail:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7808,"byte_end":7882,"line_start":220,"line_end":220,"column_start":1,"column_end":75}},{"value":"/ [Debugging Rust's new Custom Derive system][debugging].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7883,"byte_end":7942,"line_start":221,"line_end":221,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7943,"byte_end":7946,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [debugging]: https://quodlibetor.github.io/posts/debugging-rusts-new-custom-derive-system/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":7947,"byte_end":8041,"line_start":223,"line_end":223,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8042,"byte_end":8045,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8046,"byte_end":8054,"line_start":225,"line_end":225,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8055,"byte_end":8058,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8059,"byte_end":8082,"line_start":227,"line_end":227,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8083,"byte_end":8086,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Syn puts a lot of functionality behind optional features in order to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8087,"byte_end":8159,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"/ optimize compile time for the most common use cases. The following features","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8160,"byte_end":8239,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ are available.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8240,"byte_end":8258,"line_start":231,"line_end":231,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8259,"byte_end":8262,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ - **`derive`** *(enabled by default)* — Data structures for representing the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8263,"byte_end":8345,"line_start":233,"line_end":233,"column_start":1,"column_end":81}},{"value":"/   possible input to a derive macro, including structs and enums and types.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8346,"byte_end":8424,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ - **`full`** — Data structures for representing the syntax tree of all valid","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8425,"byte_end":8507,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/   Rust source code, including items and expressions.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8508,"byte_end":8564,"line_start":236,"line_end":236,"column_start":1,"column_end":57}},{"value":"/ - **`parsing`** *(enabled by default)* — Ability to parse input tokens into","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8565,"byte_end":8646,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/   a syntax tree node of a chosen type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8647,"byte_end":8689,"line_start":238,"line_end":238,"column_start":1,"column_end":43}},{"value":"/ - **`printing`** *(enabled by default)* — Ability to print a syntax tree","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8690,"byte_end":8768,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/   node as tokens of Rust source code.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8769,"byte_end":8810,"line_start":240,"line_end":240,"column_start":1,"column_end":42}},{"value":"/ - **`visit`** — Trait for traversing a syntax tree.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8811,"byte_end":8868,"line_start":241,"line_end":241,"column_start":1,"column_end":56}},{"value":"/ - **`visit-mut`** — Trait for traversing and mutating in place a syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8869,"byte_end":8946,"line_start":242,"line_end":242,"column_start":1,"column_end":76}},{"value":"/   tree.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8947,"byte_end":8958,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"/ - **`fold`** — Trait for transforming an owned syntax tree.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":8959,"byte_end":9024,"line_start":244,"line_end":244,"column_start":1,"column_end":64}},{"value":"/ - **`clone-impls`** *(enabled by default)* — Clone impls for all syntax tree","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9025,"byte_end":9107,"line_start":245,"line_end":245,"column_start":1,"column_end":81}},{"value":"/   types.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9108,"byte_end":9120,"line_start":246,"line_end":246,"column_start":1,"column_end":13}},{"value":"/ - **`extra-traits`** — Debug, Eq, PartialEq, Hash impls for all syntax tree","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9121,"byte_end":9202,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/   types.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9203,"byte_end":9215,"line_start":248,"line_end":248,"column_start":1,"column_end":13}},{"value":"/ - **`proc-macro`** *(enabled by default)* — Runtime dependency on the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9216,"byte_end":9291,"line_start":249,"line_end":249,"column_start":1,"column_end":74}},{"value":"/   dynamic library libproc_macro from rustc toolchain.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9292,"byte_end":9349,"line_start":250,"line_end":250,"column_start":1,"column_end":58}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9506,"byte_end":9537,"line_start":255,"line_end":255,"column_start":1,"column_end":32}},{"value":"allow(clippy :: bool_to_int_with_if, clippy :: cast_lossless, clippy ::\ncast_possible_truncation, clippy :: cast_possible_wrap, clippy ::\ncast_ptr_alignment, clippy :: default_trait_access, clippy :: doc_markdown,\nclippy :: expl_impl_clone_on_copy, clippy :: explicit_auto_deref, clippy ::\nif_not_else, clippy :: inherent_to_string, clippy :: items_after_statements,\nclippy :: large_enum_variant, clippy :: manual_assert, clippy ::\nmatch_on_vec_items, clippy :: match_same_arms, clippy ::\nmatch_wildcard_for_single_variants, clippy :: missing_errors_doc, clippy ::\nmissing_panics_doc, clippy :: module_name_repetitions, clippy ::\nmust_use_candidate, clippy :: needless_doctest_main, clippy ::\nneedless_pass_by_value, clippy :: never_loop, clippy :: redundant_else, clippy\n:: return_self_not_must_use, clippy :: similar_names, clippy ::\nsingle_match_else, clippy :: too_many_arguments, clippy :: too_many_lines,\nclippy :: trivially_copy_pass_by_ref, clippy :: unnecessary_unwrap, clippy ::\nused_underscore_binding, clippy :: wildcard_imports)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":9538,"byte_end":10721,"line_start":256,"line_end":291,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37008,"byte_end":37014,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Parens","qualname":"::group::Parens","value":"Parens { token, content }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37029,"byte_end":37034,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Parens::token","value":"token::Paren","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37058,"byte_end":37065,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Parens::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37132,"byte_end":37138,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Braces","qualname":"::group::Braces","value":"Braces { token, content }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":38},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37153,"byte_end":37158,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Braces::token","value":"token::Brace","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":39},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37182,"byte_end":37189,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Braces::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37256,"byte_end":37264,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"Brackets","qualname":"::group::Brackets","value":"Brackets { token, content }","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":42},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37279,"byte_end":37284,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Brackets::token","value":"token::Bracket","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":43},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37310,"byte_end":37317,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Brackets::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37553,"byte_end":37565,"line_start":37,"line_end":37,"column_start":8,"column_end":20},"name":"parse_parens","qualname":"::group::parse_parens","value":"fn parse_parens<'a>(&ParseBuffer) -> Result<Parens>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":37804,"byte_end":37816,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"parse_braces","qualname":"::group::parse_braces","value":"fn parse_braces<'a>(&ParseBuffer) -> Result<Braces>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/group.rs","byte_start":38049,"byte_end":38063,"line_start":55,"line_end":55,"column_start":8,"column_end":22},"name":"parse_brackets","qualname":"::group::parse_brackets","value":"fn parse_brackets<'a>(&ParseBuffer) -> Result<Brackets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::token","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":174},{"krate":0,"index":3352},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3401},{"krate":0,"index":175},{"krate":0,"index":3402},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3420},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3429},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3577},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3587},{"krate":0,"index":3589},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3613},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3621},{"krate":0,"index":3623},{"krate":0,"index":3625},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3661},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3675},{"krate":0,"index":3677},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3693},{"krate":0,"index":3695},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3715},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3721},{"krate":0,"index":3724},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3739},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3747},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3767},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3783},{"krate":0,"index":3785},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3855},{"krate":0,"index":3857},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3873},{"krate":0,"index":3875},{"krate":0,"index":3877},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3909},{"krate":0,"index":3911},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3927},{"krate":0,"index":3929},{"krate":0,"index":3931},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3937},{"krate":0,"index":3940},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3947},{"krate":0,"index":3949},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3963},{"krate":0,"index":3965},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3976},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3981},{"krate":0,"index":3983},{"krate":0,"index":3985},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3991},{"krate":0,"index":3994},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3999},{"krate":0,"index":4001},{"krate":0,"index":4003},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4009},{"krate":0,"index":4012},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4035},{"krate":0,"index":4037},{"krate":0,"index":4039},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4053},{"krate":0,"index":4055},{"krate":0,"index":4057},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4063},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4071},{"krate":0,"index":4073},{"krate":0,"index":4075},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4089},{"krate":0,"index":4091},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4099},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4107},{"krate":0,"index":4109},{"krate":0,"index":4111},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":4127},{"krate":0,"index":4129},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4135},{"krate":0,"index":4138},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4163},{"krate":0,"index":4165},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4177},{"krate":0,"index":4179},{"krate":0,"index":4181},{"krate":0,"index":4183},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4189},{"krate":0,"index":4192},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4197},{"krate":0,"index":4199},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4215},{"krate":0,"index":4217},{"krate":0,"index":4219},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4225},{"krate":0,"index":4228},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4233},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4243},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4259},{"krate":0,"index":4261},{"krate":0,"index":4264},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4269},{"krate":0,"index":4271},{"krate":0,"index":4273},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4279},{"krate":0,"index":4282},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4287},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4297},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4325},{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4341},{"krate":0,"index":4343},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4359},{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4735},{"krate":0,"index":4738},{"krate":0,"index":4741},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4750},{"krate":0,"index":4367},{"krate":0,"index":4369},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4752},{"krate":0,"index":4755},{"krate":0,"index":4758},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4764},{"krate":0,"index":4767},{"krate":0,"index":4770},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4776},{"krate":0,"index":4779},{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4781},{"krate":0,"index":4784},{"krate":0,"index":4787},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4793},{"krate":0,"index":4796},{"krate":0,"index":4799},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4805},{"krate":0,"index":4808},{"krate":0,"index":4811},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4820},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4822},{"krate":0,"index":4825},{"krate":0,"index":4828},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4834},{"krate":0,"index":4837},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4422},{"krate":0,"index":4839},{"krate":0,"index":4842},{"krate":0,"index":4845},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4854},{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4430},{"krate":0,"index":4856},{"krate":0,"index":4859},{"krate":0,"index":4862},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4438},{"krate":0,"index":4868},{"krate":0,"index":4871},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4446},{"krate":0,"index":4885},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4894},{"krate":0,"index":4895},{"krate":0,"index":4447},{"krate":0,"index":4449},{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4455},{"krate":0,"index":4457},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4914},{"krate":0,"index":4917},{"krate":0,"index":4920},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":4463},{"krate":0,"index":4465},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4937},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4471},{"krate":0,"index":4473},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4953},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4960},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":4975},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":4977},{"krate":0,"index":4980},{"krate":0,"index":4983},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4989},{"krate":0,"index":4992},{"krate":0,"index":4995},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4510},{"krate":0,"index":5001},{"krate":0,"index":5004},{"krate":0,"index":5007},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":5013},{"krate":0,"index":5016},{"krate":0,"index":5019},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5025},{"krate":0,"index":5028},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":5030},{"krate":0,"index":5033},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":5042},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":4535},{"krate":0,"index":4537},{"krate":0,"index":4539},{"krate":0,"index":4542},{"krate":0,"index":5054},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5066},{"krate":0,"index":5069},{"krate":0,"index":4543},{"krate":0,"index":4545},{"krate":0,"index":4547},{"krate":0,"index":4550},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5077},{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4555},{"krate":0,"index":4558},{"krate":0,"index":5083},{"krate":0,"index":5086},{"krate":0,"index":5089},{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5095},{"krate":0,"index":5098},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4566},{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5106},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4574},{"krate":0,"index":5112},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4582},{"krate":0,"index":5124},{"krate":0,"index":5127},{"krate":0,"index":5130},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5139},{"krate":0,"index":4583},{"krate":0,"index":4585},{"krate":0,"index":4587},{"krate":0,"index":4590},{"krate":0,"index":5141},{"krate":0,"index":5144},{"krate":0,"index":5147},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4598},{"krate":0,"index":5153},{"krate":0,"index":5156},{"krate":0,"index":5159},{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4606},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":5171},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5177},{"krate":0,"index":5180},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4611},{"krate":0,"index":4614},{"krate":0,"index":5182},{"krate":0,"index":5185},{"krate":0,"index":5188},{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":4615},{"krate":0,"index":4617},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":5199},{"krate":0,"index":5202},{"krate":0,"index":5205},{"krate":0,"index":5208},{"krate":0,"index":5209},{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":5211},{"krate":0,"index":5214},{"krate":0,"index":5217},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":5223},{"krate":0,"index":5226},{"krate":0,"index":5229},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5235},{"krate":0,"index":5238},{"krate":0,"index":4639},{"krate":0,"index":4641},{"krate":0,"index":4643},{"krate":0,"index":4646},{"krate":0,"index":5240},{"krate":0,"index":5243},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":4647},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4654},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":5258},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":4655},{"krate":0,"index":4657},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":5264},{"krate":0,"index":5267},{"krate":0,"index":5270},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5276},{"krate":0,"index":5279},{"krate":0,"index":4663},{"krate":0,"index":4665},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":5281},{"krate":0,"index":5284},{"krate":0,"index":5287},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":4671},{"krate":0,"index":4673},{"krate":0,"index":4675},{"krate":0,"index":4678},{"krate":0,"index":5293},{"krate":0,"index":5296},{"krate":0,"index":5299},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":4679},{"krate":0,"index":4681},{"krate":0,"index":4683},{"krate":0,"index":4686},{"krate":0,"index":5305},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":4687},{"krate":0,"index":4689},{"krate":0,"index":4691},{"krate":0,"index":4694},{"krate":0,"index":5317},{"krate":0,"index":5320},{"krate":0,"index":5323},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4702},{"krate":0,"index":5329},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5341},{"krate":0,"index":5344},{"krate":0,"index":4703},{"krate":0,"index":4705},{"krate":0,"index":4707},{"krate":0,"index":4710},{"krate":0,"index":5346},{"krate":0,"index":5349},{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5358},{"krate":0,"index":5361},{"krate":0,"index":4711},{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4718},{"krate":0,"index":5363},{"krate":0,"index":5366},{"krate":0,"index":5369},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4723},{"krate":0,"index":4726},{"krate":0,"index":5375},{"krate":0,"index":5378},{"krate":0,"index":5381},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5387},{"krate":0,"index":5390},{"krate":0,"index":4727},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4734},{"krate":0,"index":5392},{"krate":0,"index":5394},{"krate":0,"index":5397},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5402},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5408},{"krate":0,"index":5411},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5416},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5422},{"krate":0,"index":5425},{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5436},{"krate":0,"index":5439},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5444},{"krate":0,"index":5447},{"krate":0,"index":211},{"krate":0,"index":5448},{"krate":0,"index":212},{"krate":0,"index":246}],"decl_id":null,"docs":" Tokens representing Rust punctuation, keywords, and delimiters.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11032,"byte_end":11044,"line_start":310,"line_end":310,"column_start":1,"column_end":13}},{"value":"/ Tokens representing Rust punctuation, keywords, and delimiters.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44561,"byte_end":44628,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44629,"byte_end":44632,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The type names in this module can be difficult to keep straight, so we","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44633,"byte_end":44707,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ prefer to use the [`Token!`] macro instead. This is a type-macro that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44708,"byte_end":44781,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ expands to the token type of the given token.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44782,"byte_end":44831,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44832,"byte_end":44835,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Token!`]: crate::Token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44836,"byte_end":44864,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44865,"byte_end":44868,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44869,"byte_end":44882,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44883,"byte_end":44886,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The [`ItemStatic`] syntax tree node is defined like this.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44887,"byte_end":44948,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44949,"byte_end":44952,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`ItemStatic`]: crate::ItemStatic","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44953,"byte_end":44990,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44991,"byte_end":44994,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":44995,"byte_end":45002,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use syn::{Attribute, Expr, Ident, Token, Type, Visibility};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45003,"byte_end":45068,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45069,"byte_end":45074,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ pub struct ItemStatic {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45075,"byte_end":45102,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/     pub attrs: Vec<Attribute>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45103,"byte_end":45137,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/     pub vis: Visibility,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45138,"byte_end":45166,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/     pub static_token: Token![static],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45167,"byte_end":45208,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/     pub mutability: Option<Token![mut]>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45209,"byte_end":45253,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/     pub ident: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45254,"byte_end":45279,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/     pub colon_token: Token![:],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45280,"byte_end":45315,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/     pub ty: Box<Type>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45316,"byte_end":45342,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/     pub eq_token: Token![=],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45343,"byte_end":45375,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     pub expr: Box<Expr>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45376,"byte_end":45404,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/     pub semi_token: Token![;],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45405,"byte_end":45439,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45440,"byte_end":45445,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45446,"byte_end":45453,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45454,"byte_end":45457,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Parsing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45458,"byte_end":45471,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45472,"byte_end":45475,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Keywords and punctuation can be parsed through the [`ParseStream::parse`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45476,"byte_end":45553,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ method. Delimiter tokens are parsed using the [`parenthesized!`],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45554,"byte_end":45623,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ [`bracketed!`] and [`braced!`] macros.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45624,"byte_end":45666,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45667,"byte_end":45670,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::parse`]: crate::parse::ParseBuffer::parse()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45671,"byte_end":45733,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/ [`parenthesized!`]: crate::parenthesized!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45734,"byte_end":45779,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ [`bracketed!`]: crate::bracketed!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45780,"byte_end":45817,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ [`braced!`]: crate::braced!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45818,"byte_end":45849,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45850,"byte_end":45853,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45854,"byte_end":45861,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use syn::{Attribute, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45862,"byte_end":45895,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45896,"byte_end":45937,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45938,"byte_end":45943,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # enum ItemStatic {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45944,"byte_end":45968,"line_start":47,"line_end":47,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45969,"byte_end":45972,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Parse the ItemStatic struct shown above.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":45973,"byte_end":46020,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ impl Parse for ItemStatic {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46021,"byte_end":46052,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46053,"byte_end":46107,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/         # use syn::ItemStatic;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46108,"byte_end":46142,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/         # fn parse(input: ParseStream) -> Result<ItemStatic> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46143,"byte_end":46209,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/         Ok(ItemStatic {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46210,"byte_end":46237,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/             attrs: input.call(Attribute::parse_outer)?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46238,"byte_end":46297,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/             vis: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46298,"byte_end":46334,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/             static_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46335,"byte_end":46380,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/             mutability: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46381,"byte_end":46424,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/             ident: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46425,"byte_end":46463,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/             colon_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46464,"byte_end":46508,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/             ty: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46509,"byte_end":46544,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/             eq_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46545,"byte_end":46586,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/             expr: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46587,"byte_end":46624,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46625,"byte_end":46668,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46669,"byte_end":46683,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/         # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46684,"byte_end":46699,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/         # unimplemented!()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46700,"byte_end":46730,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46731,"byte_end":46740,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46741,"byte_end":46746,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46747,"byte_end":46754,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46755,"byte_end":46758,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Other operations","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46759,"byte_end":46781,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46782,"byte_end":46785,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Every keyword and punctuation token supports the following operations.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46786,"byte_end":46860,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46861,"byte_end":46864,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - [Peeking] — `input.peek(Token![...])`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46865,"byte_end":46910,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46911,"byte_end":46914,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - [Parsing] — `input.parse::<Token![...]>()?`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46915,"byte_end":46966,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46967,"byte_end":46970,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - [Printing] — `quote!( ... #the_token ... )`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":46971,"byte_end":47022,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47023,"byte_end":47026,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - Construction from a [`Span`] — `let the_token = Token![...](sp)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47027,"byte_end":47099,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47100,"byte_end":47103,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - Field access to its span — `let sp = the_token.span`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47104,"byte_end":47164,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47165,"byte_end":47168,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [Peeking]: crate::parse::ParseBuffer::peek()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47169,"byte_end":47217,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/ [Parsing]: crate::parse::ParseBuffer::parse()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47218,"byte_end":47267,"line_start":87,"line_end":87,"column_start":1,"column_end":50}},{"value":"/ [Printing]: https://docs.rs/quote/1.0/quote/trait.ToTokens.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47268,"byte_end":47335,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ [`Span`]: https://docs.rs/proc-macro2/1.0/proc_macro2/struct.Span.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":47336,"byte_end":47410,"line_start":89,"line_end":89,"column_start":1,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":153},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48568,"byte_end":48573,"line_start":126,"line_end":126,"column_start":11,"column_end":16},"name":"Token","qualname":"::token::Token","value":"Token: private::Sealed","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" Marker trait for types that represent single tokens.","sig":null,"attributes":[{"value":"/ Marker trait for types that represent single tokens.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48392,"byte_end":48448,"line_start":122,"line_end":122,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48449,"byte_end":48452,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48453,"byte_end":48529,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48530,"byte_end":48557,"line_start":125,"line_end":125,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48642,"byte_end":48646,"line_start":129,"line_end":129,"column_start":8,"column_end":12},"name":"peek","qualname":"::token::Token::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48722,"byte_end":48729,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"display","qualname":"::token::Token::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48840,"byte_end":48846,"line_start":140,"line_end":140,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::token::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48798,"byte_end":48825,"line_start":139,"line_end":139,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48990,"byte_end":48998,"line_start":145,"line_end":145,"column_start":16,"column_end":24},"name":"WithSpan","qualname":"::token::private::WithSpan","value":"WithSpan { span }","parent":null,"children":[{"krate":0,"index":162}],"decl_id":null,"docs":" Support writing `token.span` rather than `token.spans[0]` on tokens that\n hold a single span.\n","sig":null,"attributes":[{"value":"/ Support writing `token.span` rather than `token.spans[0]` on tokens that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48855,"byte_end":48931,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ hold a single span.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48936,"byte_end":48959,"line_start":143,"line_end":143,"column_start":5,"column_end":28}},{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48964,"byte_end":48974,"line_start":144,"line_end":144,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":49013,"byte_end":49017,"line_start":146,"line_end":146,"column_start":13,"column_end":17},"name":"span","qualname":"::token::private::WithSpan::span","value":"proc_macro2::Span","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":176},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51063,"byte_end":51074,"line_start":222,"line_end":222,"column_start":11,"column_end":22},"name":"CustomToken","qualname":"::token::CustomToken","value":"CustomToken","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51025,"byte_end":51052,"line_start":221,"line_end":221,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51084,"byte_end":51088,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"peek","qualname":"::token::CustomToken::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51121,"byte_end":51128,"line_start":224,"line_end":224,"column_start":8,"column_end":15},"name":"display","qualname":"::token::CustomToken::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51296,"byte_end":51300,"line_start":232,"line_end":232,"column_start":8,"column_end":12},"name":"peek","qualname":"<T as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51385,"byte_end":51392,"line_start":236,"line_end":236,"column_start":8,"column_end":15},"name":"display","qualname":"<T as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61399,"byte_end":61409,"line_start":557,"line_end":557,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"Underscore { spans }","parent":null,"children":[{"krate":0,"index":3415}],"decl_id":null,"docs":" `_`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61399,"byte_end":61409,"line_start":557,"line_end":557,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"fn Underscore<S>(S) -> Underscore where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61543,"byte_end":61552,"line_start":563,"line_end":563,"column_start":8,"column_end":17},"name":"to_tokens","qualname":"<Underscore as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61763,"byte_end":61768,"line_start":571,"line_end":571,"column_start":8,"column_end":13},"name":"parse","qualname":"<Underscore as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62354,"byte_end":62358,"line_start":590,"line_end":590,"column_start":8,"column_end":12},"name":"peek","qualname":"<Underscore as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62619,"byte_end":62626,"line_start":600,"line_end":600,"column_start":8,"column_end":15},"name":"display","qualname":"<Underscore as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62796,"byte_end":62800,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"peek","qualname":"<Paren as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62905,"byte_end":62912,"line_start":614,"line_end":614,"column_start":8,"column_end":15},"name":"display","qualname":"<Paren as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63022,"byte_end":63026,"line_start":621,"line_end":621,"column_start":8,"column_end":12},"name":"peek","qualname":"<Brace as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63125,"byte_end":63132,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"display","qualname":"<Brace as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63245,"byte_end":63249,"line_start":632,"line_end":632,"column_start":8,"column_end":12},"name":"peek","qualname":"<Bracket as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63350,"byte_end":63357,"line_start":636,"line_end":636,"column_start":8,"column_end":15},"name":"display","qualname":"<Bracket as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63471,"byte_end":63475,"line_start":643,"line_end":643,"column_start":8,"column_end":12},"name":"peek","qualname":"<Group as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63573,"byte_end":63580,"line_start":647,"line_end":647,"column_start":8,"column_end":15},"name":"display","qualname":"<Group as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63684,"byte_end":63692,"line_start":653,"line_end":653,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"Abstract { span }","parent":null,"children":[{"krate":0,"index":3432}],"decl_id":null,"docs":" `abstract`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63684,"byte_end":63692,"line_start":653,"line_end":653,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"fn Abstract<S>(S) -> Abstract where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63741,"byte_end":63743,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"As { span }","parent":null,"children":[{"krate":0,"index":3450}],"decl_id":null,"docs":" `as`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63741,"byte_end":63743,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"fn As<S>(S) -> As where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63792,"byte_end":63797,"line_start":655,"line_end":655,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"Async { span }","parent":null,"children":[{"krate":0,"index":3468}],"decl_id":null,"docs":" `async`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63792,"byte_end":63797,"line_start":655,"line_end":655,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"fn Async<S>(S) -> Async where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63846,"byte_end":63850,"line_start":656,"line_end":656,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"Auto { span }","parent":null,"children":[{"krate":0,"index":3486}],"decl_id":null,"docs":" `auto`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63846,"byte_end":63850,"line_start":656,"line_end":656,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"fn Auto<S>(S) -> Auto where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63899,"byte_end":63904,"line_start":657,"line_end":657,"column_start":30,"column_end":35},"name":"Await","qualname":"::token::Await","value":"Await { span }","parent":null,"children":[{"krate":0,"index":3504}],"decl_id":null,"docs":" `await`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63899,"byte_end":63904,"line_start":657,"line_end":657,"column_start":30,"column_end":35},"name":"Await","qualname":"::token::Await","value":"fn Await<S>(S) -> Await where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3521},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63953,"byte_end":63959,"line_start":658,"line_end":658,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"Become { span }","parent":null,"children":[{"krate":0,"index":3522}],"decl_id":null,"docs":" `become`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63953,"byte_end":63959,"line_start":658,"line_end":658,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"fn Become<S>(S) -> Become where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64008,"byte_end":64011,"line_start":659,"line_end":659,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"Box { span }","parent":null,"children":[{"krate":0,"index":3540}],"decl_id":null,"docs":" `box`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64008,"byte_end":64011,"line_start":659,"line_end":659,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"fn Box<S>(S) -> Box where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3557},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64060,"byte_end":64065,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"Break { span }","parent":null,"children":[{"krate":0,"index":3558}],"decl_id":null,"docs":" `break`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3559},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64060,"byte_end":64065,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"fn Break<S>(S) -> Break where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64114,"byte_end":64119,"line_start":661,"line_end":661,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"Const { span }","parent":null,"children":[{"krate":0,"index":3576}],"decl_id":null,"docs":" `const`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64114,"byte_end":64119,"line_start":661,"line_end":661,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"fn Const<S>(S) -> Const where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64168,"byte_end":64176,"line_start":662,"line_end":662,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"Continue { span }","parent":null,"children":[{"krate":0,"index":3594}],"decl_id":null,"docs":" `continue`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64168,"byte_end":64176,"line_start":662,"line_end":662,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"fn Continue<S>(S) -> Continue where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64225,"byte_end":64230,"line_start":663,"line_end":663,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"Crate { span }","parent":null,"children":[{"krate":0,"index":3612}],"decl_id":null,"docs":" `crate`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64225,"byte_end":64230,"line_start":663,"line_end":663,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"fn Crate<S>(S) -> Crate where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64279,"byte_end":64286,"line_start":664,"line_end":664,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"Default { span }","parent":null,"children":[{"krate":0,"index":3630}],"decl_id":null,"docs":" `default`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64279,"byte_end":64286,"line_start":664,"line_end":664,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"fn Default<S>(S) -> Default where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3647},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64335,"byte_end":64337,"line_start":665,"line_end":665,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"Do { span }","parent":null,"children":[{"krate":0,"index":3648}],"decl_id":null,"docs":" `do`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3649},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64335,"byte_end":64337,"line_start":665,"line_end":665,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"fn Do<S>(S) -> Do where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64386,"byte_end":64389,"line_start":666,"line_end":666,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"Dyn { span }","parent":null,"children":[{"krate":0,"index":3666}],"decl_id":null,"docs":" `dyn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64386,"byte_end":64389,"line_start":666,"line_end":666,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"fn Dyn<S>(S) -> Dyn where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64438,"byte_end":64442,"line_start":667,"line_end":667,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"Else { span }","parent":null,"children":[{"krate":0,"index":3684}],"decl_id":null,"docs":" `else`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3685},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64438,"byte_end":64442,"line_start":667,"line_end":667,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"fn Else<S>(S) -> Else where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64491,"byte_end":64495,"line_start":668,"line_end":668,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"Enum { span }","parent":null,"children":[{"krate":0,"index":3702}],"decl_id":null,"docs":" `enum`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64491,"byte_end":64495,"line_start":668,"line_end":668,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"fn Enum<S>(S) -> Enum where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3719},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64544,"byte_end":64550,"line_start":669,"line_end":669,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"Extern { span }","parent":null,"children":[{"krate":0,"index":3720}],"decl_id":null,"docs":" `extern`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3721},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64544,"byte_end":64550,"line_start":669,"line_end":669,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"fn Extern<S>(S) -> Extern where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64599,"byte_end":64604,"line_start":670,"line_end":670,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"Final { span }","parent":null,"children":[{"krate":0,"index":3738}],"decl_id":null,"docs":" `final`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3739},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64599,"byte_end":64604,"line_start":670,"line_end":670,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"fn Final<S>(S) -> Final where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64653,"byte_end":64655,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"Fn { span }","parent":null,"children":[{"krate":0,"index":3756}],"decl_id":null,"docs":" `fn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64653,"byte_end":64655,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"fn Fn<S>(S) -> Fn where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64704,"byte_end":64707,"line_start":672,"line_end":672,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"For { span }","parent":null,"children":[{"krate":0,"index":3774}],"decl_id":null,"docs":" `for`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3775},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64704,"byte_end":64707,"line_start":672,"line_end":672,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"fn For<S>(S) -> For where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64756,"byte_end":64758,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"If { span }","parent":null,"children":[{"krate":0,"index":3792}],"decl_id":null,"docs":" `if`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64756,"byte_end":64758,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"fn If<S>(S) -> If where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64807,"byte_end":64811,"line_start":674,"line_end":674,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"Impl { span }","parent":null,"children":[{"krate":0,"index":3810}],"decl_id":null,"docs":" `impl`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64807,"byte_end":64811,"line_start":674,"line_end":674,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"fn Impl<S>(S) -> Impl where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3827},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64860,"byte_end":64862,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"In { span }","parent":null,"children":[{"krate":0,"index":3828}],"decl_id":null,"docs":" `in`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64860,"byte_end":64862,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"fn In<S>(S) -> In where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64911,"byte_end":64914,"line_start":676,"line_end":676,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"Let { span }","parent":null,"children":[{"krate":0,"index":3846}],"decl_id":null,"docs":" `let`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3847},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64911,"byte_end":64914,"line_start":676,"line_end":676,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"fn Let<S>(S) -> Let where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64963,"byte_end":64967,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"Loop { span }","parent":null,"children":[{"krate":0,"index":3864}],"decl_id":null,"docs":" `loop`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":64963,"byte_end":64967,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"fn Loop<S>(S) -> Loop where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65016,"byte_end":65021,"line_start":678,"line_end":678,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"Macro { span }","parent":null,"children":[{"krate":0,"index":3882}],"decl_id":null,"docs":" `macro`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65016,"byte_end":65021,"line_start":678,"line_end":678,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"fn Macro<S>(S) -> Macro where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65070,"byte_end":65075,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"Match { span }","parent":null,"children":[{"krate":0,"index":3900}],"decl_id":null,"docs":" `match`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3901},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65070,"byte_end":65075,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"fn Match<S>(S) -> Match where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65124,"byte_end":65127,"line_start":680,"line_end":680,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"Mod { span }","parent":null,"children":[{"krate":0,"index":3918}],"decl_id":null,"docs":" `mod`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3919},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65124,"byte_end":65127,"line_start":680,"line_end":680,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"fn Mod<S>(S) -> Mod where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65176,"byte_end":65180,"line_start":681,"line_end":681,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"Move { span }","parent":null,"children":[{"krate":0,"index":3936}],"decl_id":null,"docs":" `move`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3937},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65176,"byte_end":65180,"line_start":681,"line_end":681,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"fn Move<S>(S) -> Move where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3953},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65229,"byte_end":65232,"line_start":682,"line_end":682,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"Mut { span }","parent":null,"children":[{"krate":0,"index":3954}],"decl_id":null,"docs":" `mut`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3955},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65229,"byte_end":65232,"line_start":682,"line_end":682,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"fn Mut<S>(S) -> Mut where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65281,"byte_end":65289,"line_start":683,"line_end":683,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"Override { span }","parent":null,"children":[{"krate":0,"index":3972}],"decl_id":null,"docs":" `override`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65281,"byte_end":65289,"line_start":683,"line_end":683,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"fn Override<S>(S) -> Override where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3989},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65338,"byte_end":65342,"line_start":684,"line_end":684,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"Priv { span }","parent":null,"children":[{"krate":0,"index":3990}],"decl_id":null,"docs":" `priv`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3991},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65338,"byte_end":65342,"line_start":684,"line_end":684,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"fn Priv<S>(S) -> Priv where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4007},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65391,"byte_end":65394,"line_start":685,"line_end":685,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"Pub { span }","parent":null,"children":[{"krate":0,"index":4008}],"decl_id":null,"docs":" `pub`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4009},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65391,"byte_end":65394,"line_start":685,"line_end":685,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"fn Pub<S>(S) -> Pub where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4025},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65443,"byte_end":65446,"line_start":686,"line_end":686,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"Ref { span }","parent":null,"children":[{"krate":0,"index":4026}],"decl_id":null,"docs":" `ref`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65443,"byte_end":65446,"line_start":686,"line_end":686,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"fn Ref<S>(S) -> Ref where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4043},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65495,"byte_end":65501,"line_start":687,"line_end":687,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"Return { span }","parent":null,"children":[{"krate":0,"index":4044}],"decl_id":null,"docs":" `return`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65495,"byte_end":65501,"line_start":687,"line_end":687,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"fn Return<S>(S) -> Return where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4061},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65550,"byte_end":65558,"line_start":688,"line_end":688,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"SelfType { span }","parent":null,"children":[{"krate":0,"index":4062}],"decl_id":null,"docs":" `Self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4063},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65550,"byte_end":65558,"line_start":688,"line_end":688,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"fn SelfType<S>(S) -> SelfType where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4079},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65603,"byte_end":65612,"line_start":689,"line_end":689,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"SelfValue { span }","parent":null,"children":[{"krate":0,"index":4080}],"decl_id":null,"docs":" `self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4081},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65603,"byte_end":65612,"line_start":689,"line_end":689,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"fn SelfValue<S>(S) -> SelfValue where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65656,"byte_end":65662,"line_start":690,"line_end":690,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"Static { span }","parent":null,"children":[{"krate":0,"index":4098}],"decl_id":null,"docs":" `static`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4099},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65656,"byte_end":65662,"line_start":690,"line_end":690,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"fn Static<S>(S) -> Static where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4115},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65711,"byte_end":65717,"line_start":691,"line_end":691,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"Struct { span }","parent":null,"children":[{"krate":0,"index":4116}],"decl_id":null,"docs":" `struct`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4117},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65711,"byte_end":65717,"line_start":691,"line_end":691,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"fn Struct<S>(S) -> Struct where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65766,"byte_end":65771,"line_start":692,"line_end":692,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"Super { span }","parent":null,"children":[{"krate":0,"index":4134}],"decl_id":null,"docs":" `super`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4135},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65766,"byte_end":65771,"line_start":692,"line_end":692,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"fn Super<S>(S) -> Super where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65820,"byte_end":65825,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"Trait { span }","parent":null,"children":[{"krate":0,"index":4152}],"decl_id":null,"docs":" `trait`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4153},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65820,"byte_end":65825,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"fn Trait<S>(S) -> Trait where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4169},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65874,"byte_end":65877,"line_start":694,"line_end":694,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"Try { span }","parent":null,"children":[{"krate":0,"index":4170}],"decl_id":null,"docs":" `try`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65874,"byte_end":65877,"line_start":694,"line_end":694,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"fn Try<S>(S) -> Try where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4187},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65926,"byte_end":65930,"line_start":695,"line_end":695,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"Type { span }","parent":null,"children":[{"krate":0,"index":4188}],"decl_id":null,"docs":" `type`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4189},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65926,"byte_end":65930,"line_start":695,"line_end":695,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"fn Type<S>(S) -> Type where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4205},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65979,"byte_end":65985,"line_start":696,"line_end":696,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"Typeof { span }","parent":null,"children":[{"krate":0,"index":4206}],"decl_id":null,"docs":" `typeof`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":65979,"byte_end":65985,"line_start":696,"line_end":696,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"fn Typeof<S>(S) -> Typeof where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4223},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66034,"byte_end":66039,"line_start":697,"line_end":697,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"Union { span }","parent":null,"children":[{"krate":0,"index":4224}],"decl_id":null,"docs":" `union`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4225},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66034,"byte_end":66039,"line_start":697,"line_end":697,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"fn Union<S>(S) -> Union where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66088,"byte_end":66094,"line_start":698,"line_end":698,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"Unsafe { span }","parent":null,"children":[{"krate":0,"index":4242}],"decl_id":null,"docs":" `unsafe`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4243},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66088,"byte_end":66094,"line_start":698,"line_end":698,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"fn Unsafe<S>(S) -> Unsafe where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4259},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66143,"byte_end":66150,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"Unsized { span }","parent":null,"children":[{"krate":0,"index":4260}],"decl_id":null,"docs":" `unsized`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4261},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66143,"byte_end":66150,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"fn Unsized<S>(S) -> Unsized where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4277},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66199,"byte_end":66202,"line_start":700,"line_end":700,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"Use { span }","parent":null,"children":[{"krate":0,"index":4278}],"decl_id":null,"docs":" `use`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4279},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66199,"byte_end":66202,"line_start":700,"line_end":700,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"fn Use<S>(S) -> Use where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4295},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66251,"byte_end":66258,"line_start":701,"line_end":701,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"Virtual { span }","parent":null,"children":[{"krate":0,"index":4296}],"decl_id":null,"docs":" `virtual`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4297},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66251,"byte_end":66258,"line_start":701,"line_end":701,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"fn Virtual<S>(S) -> Virtual where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4313},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66307,"byte_end":66312,"line_start":702,"line_end":702,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"Where { span }","parent":null,"children":[{"krate":0,"index":4314}],"decl_id":null,"docs":" `where`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4315},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66307,"byte_end":66312,"line_start":702,"line_end":702,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"fn Where<S>(S) -> Where where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4331},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66361,"byte_end":66366,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"While { span }","parent":null,"children":[{"krate":0,"index":4332}],"decl_id":null,"docs":" `while`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4333},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66361,"byte_end":66366,"line_start":703,"line_end":703,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"fn While<S>(S) -> While where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66415,"byte_end":66420,"line_start":704,"line_end":704,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"Yield { span }","parent":null,"children":[{"krate":0,"index":4350}],"decl_id":null,"docs":" `yield`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51598,"byte_end":51601,"line_start":245,"line_end":245,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51614,"byte_end":51677,"line_start":246,"line_end":246,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51690,"byte_end":51719,"line_start":247,"line_end":247,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51732,"byte_end":51735,"line_start":248,"line_end":248,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51748,"byte_end":51776,"line_start":249,"line_end":249,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66415,"byte_end":66420,"line_start":704,"line_end":704,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"fn Yield<S>(S) -> Yield where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51894,"byte_end":51918,"line_start":255,"line_end":255,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4735},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66494,"byte_end":66497,"line_start":708,"line_end":708,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"Add { spans }","parent":null,"children":[{"krate":0,"index":4736}],"decl_id":null,"docs":" `+`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4738},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66494,"byte_end":66497,"line_start":708,"line_end":708,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"fn Add<S>(S) -> Add where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66544,"byte_end":66549,"line_start":709,"line_end":709,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"AddEq { spans }","parent":null,"children":[{"krate":0,"index":4753}],"decl_id":null,"docs":" `+=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4755},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66544,"byte_end":66549,"line_start":709,"line_end":709,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"fn AddEq<S>(S) -> AddEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4764},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66595,"byte_end":66598,"line_start":710,"line_end":710,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"And { spans }","parent":null,"children":[{"krate":0,"index":4765}],"decl_id":null,"docs":" `&`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4767},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66595,"byte_end":66598,"line_start":710,"line_end":710,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"fn And<S>(S) -> And where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66645,"byte_end":66651,"line_start":711,"line_end":711,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"AndAnd { spans }","parent":null,"children":[{"krate":0,"index":4782}],"decl_id":null,"docs":" `&&`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66645,"byte_end":66651,"line_start":711,"line_end":711,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"fn AndAnd<S>(S) -> AndAnd where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4793},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66696,"byte_end":66701,"line_start":712,"line_end":712,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"AndEq { spans }","parent":null,"children":[{"krate":0,"index":4794}],"decl_id":null,"docs":" `&=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4796},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66696,"byte_end":66701,"line_start":712,"line_end":712,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"fn AndEq<S>(S) -> AndEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4805},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66747,"byte_end":66749,"line_start":713,"line_end":713,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"At { spans }","parent":null,"children":[{"krate":0,"index":4806}],"decl_id":null,"docs":" `@`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4808},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66747,"byte_end":66749,"line_start":713,"line_end":713,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"fn At<S>(S) -> At where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66797,"byte_end":66801,"line_start":714,"line_end":714,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"Bang { spans }","parent":null,"children":[{"krate":0,"index":4823}],"decl_id":null,"docs":" `!`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66797,"byte_end":66801,"line_start":714,"line_end":714,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"fn Bang<S>(S) -> Bang where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4839},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66847,"byte_end":66852,"line_start":715,"line_end":715,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"Caret { spans }","parent":null,"children":[{"krate":0,"index":4840}],"decl_id":null,"docs":" `^`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4842},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66847,"byte_end":66852,"line_start":715,"line_end":715,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"fn Caret<S>(S) -> Caret where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4856},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66897,"byte_end":66904,"line_start":716,"line_end":716,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"CaretEq { spans }","parent":null,"children":[{"krate":0,"index":4857}],"decl_id":null,"docs":" `^=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66897,"byte_end":66904,"line_start":716,"line_end":716,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"fn CaretEq<S>(S) -> CaretEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4868},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66948,"byte_end":66953,"line_start":717,"line_end":717,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"Colon { spans }","parent":null,"children":[{"krate":0,"index":4869}],"decl_id":null,"docs":" `:`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4871},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66948,"byte_end":66953,"line_start":717,"line_end":717,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"fn Colon<S>(S) -> Colon where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4885},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66998,"byte_end":67004,"line_start":718,"line_end":718,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"Colon2 { spans }","parent":null,"children":[{"krate":0,"index":4886}],"decl_id":null,"docs":" `::`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":66998,"byte_end":67004,"line_start":718,"line_end":718,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"fn Colon2<S>(S) -> Colon2 where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4897},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67049,"byte_end":67054,"line_start":719,"line_end":719,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"Comma { spans }","parent":null,"children":[{"krate":0,"index":4898}],"decl_id":null,"docs":" `,`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4900},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67049,"byte_end":67054,"line_start":719,"line_end":719,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"fn Comma<S>(S) -> Comma where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4914},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67099,"byte_end":67102,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"Div { spans }","parent":null,"children":[{"krate":0,"index":4915}],"decl_id":null,"docs":" `/`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4917},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67099,"byte_end":67102,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"fn Div<S>(S) -> Div where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4931},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67149,"byte_end":67154,"line_start":721,"line_end":721,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"DivEq { spans }","parent":null,"children":[{"krate":0,"index":4932}],"decl_id":null,"docs":" `/=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4934},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67149,"byte_end":67154,"line_start":721,"line_end":721,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"fn DivEq<S>(S) -> DivEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4943},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67200,"byte_end":67206,"line_start":722,"line_end":722,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"Dollar { spans }","parent":null,"children":[{"krate":0,"index":4944}],"decl_id":null,"docs":" `$`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4946},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67200,"byte_end":67206,"line_start":722,"line_end":722,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"fn Dollar<S>(S) -> Dollar where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4960},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67250,"byte_end":67253,"line_start":723,"line_end":723,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"Dot { spans }","parent":null,"children":[{"krate":0,"index":4961}],"decl_id":null,"docs":" `.`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4963},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67250,"byte_end":67253,"line_start":723,"line_end":723,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"fn Dot<S>(S) -> Dot where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4977},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67300,"byte_end":67304,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"Dot2 { spans }","parent":null,"children":[{"krate":0,"index":4978}],"decl_id":null,"docs":" `..`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4980},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67300,"byte_end":67304,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"fn Dot2<S>(S) -> Dot2 where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4989},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67351,"byte_end":67355,"line_start":725,"line_end":725,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"Dot3 { spans }","parent":null,"children":[{"krate":0,"index":4990}],"decl_id":null,"docs":" `...`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4992},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67351,"byte_end":67355,"line_start":725,"line_end":725,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"fn Dot3<S>(S) -> Dot3 where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5001},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67403,"byte_end":67411,"line_start":726,"line_end":726,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"DotDotEq { spans }","parent":null,"children":[{"krate":0,"index":5002}],"decl_id":null,"docs":" `..=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5004},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67403,"byte_end":67411,"line_start":726,"line_end":726,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"fn DotDotEq<S>(S) -> DotDotEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67455,"byte_end":67457,"line_start":727,"line_end":727,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"Eq { spans }","parent":null,"children":[{"krate":0,"index":5014}],"decl_id":null,"docs":" `=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5016},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67455,"byte_end":67457,"line_start":727,"line_end":727,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"fn Eq<S>(S) -> Eq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5030},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67505,"byte_end":67509,"line_start":728,"line_end":728,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"EqEq { spans }","parent":null,"children":[{"krate":0,"index":5031}],"decl_id":null,"docs":" `==`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5033},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67505,"byte_end":67509,"line_start":728,"line_end":728,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"fn EqEq<S>(S) -> EqEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5042},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67556,"byte_end":67558,"line_start":729,"line_end":729,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"Ge { spans }","parent":null,"children":[{"krate":0,"index":5043}],"decl_id":null,"docs":" `>=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5045},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67556,"byte_end":67558,"line_start":729,"line_end":729,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"fn Ge<S>(S) -> Ge where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5054},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67607,"byte_end":67609,"line_start":730,"line_end":730,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"Gt { spans }","parent":null,"children":[{"krate":0,"index":5055}],"decl_id":null,"docs":" `>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5057},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67607,"byte_end":67609,"line_start":730,"line_end":730,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"fn Gt<S>(S) -> Gt where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5071},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67657,"byte_end":67659,"line_start":731,"line_end":731,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"Le { spans }","parent":null,"children":[{"krate":0,"index":5072}],"decl_id":null,"docs":" `<=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5074},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67657,"byte_end":67659,"line_start":731,"line_end":731,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"fn Le<S>(S) -> Le where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5083},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67708,"byte_end":67710,"line_start":732,"line_end":732,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"Lt { spans }","parent":null,"children":[{"krate":0,"index":5084}],"decl_id":null,"docs":" `<`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5086},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67708,"byte_end":67710,"line_start":732,"line_end":732,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"fn Lt<S>(S) -> Lt where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5100},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67758,"byte_end":67763,"line_start":733,"line_end":733,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"MulEq { spans }","parent":null,"children":[{"krate":0,"index":5101}],"decl_id":null,"docs":" `*=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5103},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67758,"byte_end":67763,"line_start":733,"line_end":733,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"fn MulEq<S>(S) -> MulEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5112},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67809,"byte_end":67811,"line_start":734,"line_end":734,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"Ne { spans }","parent":null,"children":[{"krate":0,"index":5113}],"decl_id":null,"docs":" `!=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5115},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67809,"byte_end":67811,"line_start":734,"line_end":734,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"fn Ne<S>(S) -> Ne where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5124},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67860,"byte_end":67862,"line_start":735,"line_end":735,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"Or { spans }","parent":null,"children":[{"krate":0,"index":5125}],"decl_id":null,"docs":" `|`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5127},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67860,"byte_end":67862,"line_start":735,"line_end":735,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"fn Or<S>(S) -> Or where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5141},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67910,"byte_end":67914,"line_start":736,"line_end":736,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"OrEq { spans }","parent":null,"children":[{"krate":0,"index":5142}],"decl_id":null,"docs":" `|=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5144},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67910,"byte_end":67914,"line_start":736,"line_end":736,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"fn OrEq<S>(S) -> OrEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67961,"byte_end":67965,"line_start":737,"line_end":737,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"OrOr { spans }","parent":null,"children":[{"krate":0,"index":5154}],"decl_id":null,"docs":" `||`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5156},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":67961,"byte_end":67965,"line_start":737,"line_end":737,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"fn OrOr<S>(S) -> OrOr where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5165},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68012,"byte_end":68017,"line_start":738,"line_end":738,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"Pound { spans }","parent":null,"children":[{"krate":0,"index":5166}],"decl_id":null,"docs":" `#`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5168},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68012,"byte_end":68017,"line_start":738,"line_end":738,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"fn Pound<S>(S) -> Pound where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5182},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68062,"byte_end":68070,"line_start":739,"line_end":739,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"Question { spans }","parent":null,"children":[{"krate":0,"index":5183}],"decl_id":null,"docs":" `?`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5185},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68062,"byte_end":68070,"line_start":739,"line_end":739,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"fn Question<S>(S) -> Question where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5199},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68112,"byte_end":68118,"line_start":740,"line_end":740,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"RArrow { spans }","parent":null,"children":[{"krate":0,"index":5200}],"decl_id":null,"docs":" `->`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5202},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68112,"byte_end":68118,"line_start":740,"line_end":740,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"fn RArrow<S>(S) -> RArrow where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5211},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68163,"byte_end":68169,"line_start":741,"line_end":741,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"LArrow { spans }","parent":null,"children":[{"krate":0,"index":5212}],"decl_id":null,"docs":" `<-`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5214},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68163,"byte_end":68169,"line_start":741,"line_end":741,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"fn LArrow<S>(S) -> LArrow where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5223},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68214,"byte_end":68217,"line_start":742,"line_end":742,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"Rem { spans }","parent":null,"children":[{"krate":0,"index":5224}],"decl_id":null,"docs":" `%`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68214,"byte_end":68217,"line_start":742,"line_end":742,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"fn Rem<S>(S) -> Rem where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5240},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68264,"byte_end":68269,"line_start":743,"line_end":743,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"RemEq { spans }","parent":null,"children":[{"krate":0,"index":5241}],"decl_id":null,"docs":" `%=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5243},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68264,"byte_end":68269,"line_start":743,"line_end":743,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"fn RemEq<S>(S) -> RemEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5252},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68315,"byte_end":68323,"line_start":744,"line_end":744,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"FatArrow { spans }","parent":null,"children":[{"krate":0,"index":5253}],"decl_id":null,"docs":" `=>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68315,"byte_end":68323,"line_start":744,"line_end":744,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"fn FatArrow<S>(S) -> FatArrow where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5264},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68366,"byte_end":68370,"line_start":745,"line_end":745,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"Semi { spans }","parent":null,"children":[{"krate":0,"index":5265}],"decl_id":null,"docs":" `;`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5267},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68366,"byte_end":68370,"line_start":745,"line_end":745,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"fn Semi<S>(S) -> Semi where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5281},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68416,"byte_end":68419,"line_start":746,"line_end":746,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"Shl { spans }","parent":null,"children":[{"krate":0,"index":5282}],"decl_id":null,"docs":" `<<`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5284},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68416,"byte_end":68419,"line_start":746,"line_end":746,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"fn Shl<S>(S) -> Shl where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5293},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68467,"byte_end":68472,"line_start":747,"line_end":747,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"ShlEq { spans }","parent":null,"children":[{"krate":0,"index":5294}],"decl_id":null,"docs":" `<<=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5296},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68467,"byte_end":68472,"line_start":747,"line_end":747,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"fn ShlEq<S>(S) -> ShlEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5305},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68519,"byte_end":68522,"line_start":748,"line_end":748,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"Shr { spans }","parent":null,"children":[{"krate":0,"index":5306}],"decl_id":null,"docs":" `>>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5308},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68519,"byte_end":68522,"line_start":748,"line_end":748,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"fn Shr<S>(S) -> Shr where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5317},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68570,"byte_end":68575,"line_start":749,"line_end":749,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"ShrEq { spans }","parent":null,"children":[{"krate":0,"index":5318}],"decl_id":null,"docs":" `>>=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5320},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68570,"byte_end":68575,"line_start":749,"line_end":749,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"fn ShrEq<S>(S) -> ShrEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5329},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68622,"byte_end":68626,"line_start":750,"line_end":750,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"Star { spans }","parent":null,"children":[{"krate":0,"index":5330}],"decl_id":null,"docs":" `*`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5332},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68622,"byte_end":68626,"line_start":750,"line_end":750,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"fn Star<S>(S) -> Star where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68672,"byte_end":68675,"line_start":751,"line_end":751,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"Sub { spans }","parent":null,"children":[{"krate":0,"index":5347}],"decl_id":null,"docs":" `-`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5349},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68672,"byte_end":68675,"line_start":751,"line_end":751,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"fn Sub<S>(S) -> Sub where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5363},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68722,"byte_end":68727,"line_start":752,"line_end":752,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"SubEq { spans }","parent":null,"children":[{"krate":0,"index":5364}],"decl_id":null,"docs":" `-=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5366},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68722,"byte_end":68727,"line_start":752,"line_end":752,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"fn SubEq<S>(S) -> SubEq where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5375},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68773,"byte_end":68778,"line_start":753,"line_end":753,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"Tilde { spans }","parent":null,"children":[{"krate":0,"index":5376}],"decl_id":null,"docs":" `~`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55392,"byte_end":55402,"line_start":366,"line_end":366,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55435,"byte_end":55438,"line_start":368,"line_end":368,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type &mdash; use the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55451,"byte_end":55514,"line_start":369,"line_end":369,"column_start":13,"column_end":76}},{"value":"/ [`Token!`] macro instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55527,"byte_end":55556,"line_start":370,"line_end":370,"column_start":13,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55569,"byte_end":55572,"line_start":371,"line_end":371,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55585,"byte_end":55613,"line_start":372,"line_end":372,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68773,"byte_end":68778,"line_start":753,"line_end":753,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"fn Tilde<S>(S) -> Tilde where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":55740,"byte_end":55764,"line_start":378,"line_end":378,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5392},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68847,"byte_end":68852,"line_start":757,"line_end":757,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"Brace { span }","parent":null,"children":[{"krate":0,"index":5393}],"decl_id":null,"docs":" `{...}`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5394},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68847,"byte_end":68852,"line_start":757,"line_end":757,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"fn Brace<S>(S) -> Brace where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":59145,"byte_end":59169,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5406},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68901,"byte_end":68908,"line_start":758,"line_end":758,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"Bracket { span }","parent":null,"children":[{"krate":0,"index":5407}],"decl_id":null,"docs":" `[...]`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5408},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68901,"byte_end":68908,"line_start":758,"line_end":758,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"fn Bracket<S>(S) -> Bracket where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":59145,"byte_end":59169,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5420},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68955,"byte_end":68960,"line_start":759,"line_end":759,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"Paren { span }","parent":null,"children":[{"krate":0,"index":5421}],"decl_id":null,"docs":" `(...)`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5422},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":68955,"byte_end":68960,"line_start":759,"line_end":759,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"fn Paren<S>(S) -> Paren where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":59145,"byte_end":59169,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5434},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":69009,"byte_end":69014,"line_start":760,"line_end":760,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"Group { span }","parent":null,"children":[{"krate":0,"index":5435}],"decl_id":null,"docs":" None-delimited group\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5436},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":69009,"byte_end":69014,"line_start":760,"line_end":760,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"fn Group<S>(S) -> Group where S: IntoSpans<[Span; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":59145,"byte_end":59169,"line_start":487,"line_end":487,"column_start":13,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":212},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":75396,"byte_end":75403,"line_start":889,"line_end":889,"column_start":9,"column_end":16},"name":"parsing","qualname":"::token::parsing","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":75360,"byte_end":75387,"line_start":888,"line_end":888,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":75593,"byte_end":75600,"line_start":896,"line_end":896,"column_start":12,"column_end":19},"name":"keyword","qualname":"::token::parsing::keyword","value":"fn keyword(ParseStream, &str) -> Result<Span>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":75953,"byte_end":75965,"line_start":907,"line_end":907,"column_start":12,"column_end":24},"name":"peek_keyword","qualname":"::token::parsing::peek_keyword","value":"fn peek_keyword(Cursor, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":239},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":76150,"byte_end":76155,"line_start":915,"line_end":915,"column_start":12,"column_end":17},"name":"punct","qualname":"::token::parsing::punct","value":"fn punct<S>(ParseStream, &str) -> Result<S> where S: FromSpans","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":77303,"byte_end":77313,"line_start":947,"line_end":947,"column_start":12,"column_end":22},"name":"peek_punct","qualname":"::token::parsing::peek_punct","value":"fn peek_punct(Cursor, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":77973,"byte_end":77981,"line_start":970,"line_end":970,"column_start":9,"column_end":17},"name":"printing","qualname":"::token::printing","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":77936,"byte_end":77964,"line_start":969,"line_end":969,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":78110,"byte_end":78115,"line_start":974,"line_end":974,"column_start":12,"column_end":17},"name":"punct","qualname":"::token::printing::punct","value":"fn punct(&str, &[Span], &mut TokenStream)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":273},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":78679,"byte_end":78686,"line_start":992,"line_end":992,"column_start":12,"column_end":19},"name":"keyword","qualname":"::token::printing::keyword","value":"fn keyword(&str, Span, &mut TokenStream)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":78798,"byte_end":78803,"line_start":996,"line_end":996,"column_start":12,"column_end":17},"name":"delim","qualname":"::token::printing::delim","value":"fn delim<F>(&str, Span, &mut TokenStream, F) where\nF: for<'_> FnOnce(&'_ mut TokenStream) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":299},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":79675,"byte_end":79680,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"Ident","qualname":"::ident::Ident","value":"fn Ident(lookahead::TokenMarker) -> Ident","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":79600,"byte_end":79627,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":79643,"byte_end":79667,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":80774,"byte_end":80779,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"parse","qualname":"<Ident as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81160,"byte_end":81164,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"peek","qualname":"<Ident as token::Token>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81341,"byte_end":81348,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"display","qualname":"<Ident as token::Token>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":153},"children":[],"decl_id":{"krate":0,"index":155},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81818,"byte_end":81822,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"from","qualname":"<Ident as std::convert::From>::from","value":"fn from(crate::token::Underscore) -> Ident","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5459},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87733,"byte_end":87742,"line_start":149,"line_end":149,"column_start":16,"column_end":25},"name":"Attribute","qualname":"::attr::Attribute","value":"Attribute { pound_token, style, bracket_token, path, tokens }","parent":null,"children":[{"krate":0,"index":5460},{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464}],"decl_id":null,"docs":" An attribute like `#[repr(transparent)]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5460},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87757,"byte_end":87768,"line_start":150,"line_end":150,"column_start":13,"column_end":24},"name":"pound_token","qualname":"::attr::Attribute::pound_token","value":"token::Pound","parent":{"krate":0,"index":5459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5461},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87793,"byte_end":87798,"line_start":151,"line_end":151,"column_start":13,"column_end":18},"name":"style","qualname":"::attr::Attribute::style","value":"attr::AttrStyle","parent":{"krate":0,"index":5459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5462},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87823,"byte_end":87836,"line_start":152,"line_end":152,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::attr::Attribute::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5463},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87866,"byte_end":87870,"line_start":153,"line_end":153,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::Attribute::path","value":"path::Path","parent":{"krate":0,"index":5459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5464},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87890,"byte_end":87896,"line_start":154,"line_end":154,"column_start":13,"column_end":19},"name":"tokens","qualname":"::attr::Attribute::tokens","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":5459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":88255,"byte_end":88265,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"parse_meta","qualname":"<Attribute>::parse_meta","value":"fn parse_meta(&Self) -> Result<Meta>","parent":null,"children":[],"decl_id":null,"docs":" Parses the content of the attribute, consisting of the path and tokens,\n as a [`Meta`] if possible.","sig":null,"attributes":[{"value":"/ Parses the content of the attribute, consisting of the path and tokens,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87941,"byte_end":88016,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ as a [`Meta`] if possible.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":88021,"byte_end":88051,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":88056,"byte_end":88059,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":88064,"byte_end":88137,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":88142,"byte_end":88155,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":88160,"byte_end":88187,"line_start":164,"line_end":164,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89933,"byte_end":89943,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"parse_args","qualname":"<Attribute>::parse_args","value":"fn parse_args<T>(&Self) -> Result<T> where T: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parse the arguments to the attribute as a syntax tree.","sig":null,"attributes":[{"value":"/ Parse the arguments to the attribute as a syntax tree.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89299,"byte_end":89357,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89362,"byte_end":89365,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This is similar to `syn::parse2::<T>(attr.tokens)` except that:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89370,"byte_end":89437,"line_start":199,"line_end":199,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89442,"byte_end":89445,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ - the surrounding delimiters are *not* included in the input to the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89450,"byte_end":89521,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/   parser; and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89526,"byte_end":89543,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ - the error message has a more useful span when `tokens` is empty.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89548,"byte_end":89618,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89623,"byte_end":89626,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89631,"byte_end":89642,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ #[my_attr(value < 5)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89647,"byte_end":89672,"line_start":206,"line_end":206,"column_start":5,"column_end":30}},{"value":"/           ^^^^^^^^^ what gets parsed","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89677,"byte_end":89717,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89722,"byte_end":89729,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89734,"byte_end":89737,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89742,"byte_end":89815,"line_start":210,"line_end":210,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89820,"byte_end":89833,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":89838,"byte_end":89865,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90294,"byte_end":90309,"line_start":224,"line_end":224,"column_start":12,"column_end":27},"name":"parse_args_with","qualname":"<Attribute>::parse_args_with","value":"fn parse_args_with<F>(&Self, F) -> Result<F::Output> where F: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parse the arguments to the attribute using the given parser.","sig":null,"attributes":[{"value":"/ Parse the arguments to the attribute using the given parser.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90026,"byte_end":90090,"line_start":218,"line_end":218,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90095,"byte_end":90098,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90103,"byte_end":90176,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90181,"byte_end":90194,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90199,"byte_end":90226,"line_start":222,"line_end":222,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90828,"byte_end":90839,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"parse_outer","qualname":"<Attribute>::parse_outer","value":"fn parse_outer(ParseStream) -> Result<Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more outer attributes from the stream.","sig":null,"attributes":[{"value":"/ Parses zero or more outer attributes from the stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90567,"byte_end":90624,"line_start":232,"line_end":232,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90629,"byte_end":90632,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90637,"byte_end":90710,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90715,"byte_end":90728,"line_start":235,"line_end":235,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":90733,"byte_end":90760,"line_start":236,"line_end":236,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":91323,"byte_end":91334,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"parse_inner","qualname":"<Attribute>::parse_inner","value":"fn parse_inner(ParseStream) -> Result<Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more inner attributes from the stream.","sig":null,"attributes":[{"value":"/ Parses zero or more inner attributes from the stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":91062,"byte_end":91119,"line_start":246,"line_end":246,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":91124,"byte_end":91127,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":91132,"byte_end":91205,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":91210,"byte_end":91223,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":91228,"byte_end":91255,"line_start":250,"line_end":250,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5466},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":93704,"byte_end":93709,"line_start":331,"line_end":331,"column_start":9,"column_end":14},"name":"Outer","qualname":"::attr::AttrStyle::Outer","value":"AttrStyle::Outer","parent":{"krate":0,"index":5465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5468},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":93719,"byte_end":93724,"line_start":332,"line_end":332,"column_start":9,"column_end":14},"name":"Inner","qualname":"::attr::AttrStyle::Inner","value":"AttrStyle::Inner(crate::token::Bang)","parent":{"krate":0,"index":5465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5470},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":93725,"byte_end":93734,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"name":"0","qualname":"::attr::AttrStyle::Inner::0","value":"token::Bang","parent":{"krate":0,"index":5468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5465},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":93684,"byte_end":93693,"line_start":330,"line_end":330,"column_start":14,"column_end":23},"name":"AttrStyle","qualname":"::attr::AttrStyle","value":"enum AttrStyle { Outer, Inner(crate::token::Bang), }","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5468}],"decl_id":null,"docs":" Distinguishes between attributes that decorate an item and attributes\n that are contained within an item.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5472},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94504,"byte_end":94508,"line_start":362,"line_end":362,"column_start":9,"column_end":13},"name":"Path","qualname":"::attr::Meta::Path","value":"Meta::Path(Path)","parent":{"krate":0,"index":5471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5474},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94509,"byte_end":94513,"line_start":362,"line_end":362,"column_start":14,"column_end":18},"name":"0","qualname":"::attr::Meta::Path::0","value":"path::Path","parent":{"krate":0,"index":5472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5475},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94604,"byte_end":94608,"line_start":365,"line_end":365,"column_start":9,"column_end":13},"name":"List","qualname":"::attr::Meta::List","value":"Meta::List(MetaList)","parent":{"krate":0,"index":5471},"children":[],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.\n","sig":null,"attributes":[{"value":"/ A structured list within an attribute, like `derive(Copy, Clone)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94525,"byte_end":94595,"line_start":364,"line_end":364,"column_start":9,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5477},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94609,"byte_end":94617,"line_start":365,"line_end":365,"column_start":14,"column_end":22},"name":"0","qualname":"::attr::Meta::List::0","value":"attr::MetaList","parent":{"krate":0,"index":5475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5478},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94708,"byte_end":94717,"line_start":368,"line_end":368,"column_start":9,"column_end":18},"name":"NameValue","qualname":"::attr::Meta::NameValue","value":"Meta::NameValue(MetaNameValue)","parent":{"krate":0,"index":5471},"children":[],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.\n","sig":null,"attributes":[{"value":"/ A name-value pair within an attribute, like `feature = \"nightly\"`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94629,"byte_end":94699,"line_start":367,"line_end":367,"column_start":9,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5480},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94718,"byte_end":94731,"line_start":368,"line_end":368,"column_start":19,"column_end":32},"name":"0","qualname":"::attr::Meta::NameValue::0","value":"attr::MetaNameValue","parent":{"krate":0,"index":5478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5471},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":94489,"byte_end":94493,"line_start":361,"line_end":361,"column_start":14,"column_end":18},"name":"Meta","qualname":"::attr::Meta","value":"enum Meta { Path(Path), List(MetaList), NameValue(MetaNameValue), }","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5475},{"krate":0,"index":5478}],"decl_id":null,"docs":" Content of a compile-time structured attribute.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5489},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95036,"byte_end":95044,"line_start":378,"line_end":378,"column_start":16,"column_end":24},"name":"MetaList","qualname":"::attr::MetaList","value":"MetaList { path, paren_token, nested }","parent":null,"children":[{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492}],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5490},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95059,"byte_end":95063,"line_start":379,"line_end":379,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::MetaList::path","value":"path::Path","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5491},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95083,"byte_end":95094,"line_start":380,"line_end":380,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::attr::MetaList::paren_token","value":"token::Paren","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5492},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95122,"byte_end":95128,"line_start":381,"line_end":381,"column_start":13,"column_end":19},"name":"nested","qualname":"::attr::MetaList::nested","value":"punctuated::Punctuated<attr::NestedMeta, token::Comma>","parent":{"krate":0,"index":5489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5493},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95467,"byte_end":95480,"line_start":391,"line_end":391,"column_start":16,"column_end":29},"name":"MetaNameValue","qualname":"::attr::MetaNameValue","value":"MetaNameValue { path, eq_token, lit }","parent":null,"children":[{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496}],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5494},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95495,"byte_end":95499,"line_start":392,"line_end":392,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::MetaNameValue::path","value":"path::Path","parent":{"krate":0,"index":5493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5495},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95519,"byte_end":95527,"line_start":393,"line_end":393,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::attr::MetaNameValue::eq_token","value":"token::Eq","parent":{"krate":0,"index":5493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5496},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95552,"byte_end":95555,"line_start":394,"line_end":394,"column_start":13,"column_end":16},"name":"lit","qualname":"::attr::MetaNameValue::lit","value":"lit::Lit","parent":{"krate":0,"index":5493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95826,"byte_end":95830,"line_start":403,"line_end":403,"column_start":12,"column_end":16},"name":"path","qualname":"<Meta>::path","value":"fn path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the identifier that begins this structured meta item.","sig":null,"attributes":[{"value":"/ Returns the identifier that begins this structured meta item.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95587,"byte_end":95652,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95657,"byte_end":95660,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ For example this would return the `test` in `#[test]`, the `derive` in","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95665,"byte_end":95739,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ `#[derive(Copy)]`, and the `path` in `#[path = \"sys/windows.rs\"]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95744,"byte_end":95814,"line_start":402,"line_end":402,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5498},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96439,"byte_end":96443,"line_start":421,"line_end":421,"column_start":9,"column_end":13},"name":"Meta","qualname":"::attr::NestedMeta::Meta","value":"NestedMeta::Meta(Meta)","parent":{"krate":0,"index":5497},"children":[],"decl_id":null,"docs":" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\n would be a nested `Meta::Path`.\n","sig":null,"attributes":[{"value":"/ A structured meta item, like the `Copy` in `#[derive(Copy)]` which","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96316,"byte_end":96386,"line_start":419,"line_end":419,"column_start":9,"column_end":79}},{"value":"/ would be a nested `Meta::Path`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96395,"byte_end":96430,"line_start":420,"line_end":420,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5500},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96444,"byte_end":96448,"line_start":421,"line_end":421,"column_start":14,"column_end":18},"name":"0","qualname":"::attr::NestedMeta::Meta::0","value":"attr::Meta","parent":{"krate":0,"index":5498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5501},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96538,"byte_end":96541,"line_start":424,"line_end":424,"column_start":9,"column_end":12},"name":"Lit","qualname":"::attr::NestedMeta::Lit","value":"NestedMeta::Lit(Lit)","parent":{"krate":0,"index":5497},"children":[],"decl_id":null,"docs":" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\n","sig":null,"attributes":[{"value":"/ A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96460,"byte_end":96529,"line_start":423,"line_end":423,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":5503},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96542,"byte_end":96545,"line_start":424,"line_end":424,"column_start":13,"column_end":16},"name":"0","qualname":"::attr::NestedMeta::Lit::0","value":"lit::Lit","parent":{"krate":0,"index":5501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5497},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96295,"byte_end":96305,"line_start":418,"line_end":418,"column_start":14,"column_end":24},"name":"NestedMeta","qualname":"::attr::NestedMeta","value":"enum NestedMeta { Meta(Meta), Lit(Lit), }","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5501}],"decl_id":null,"docs":" Element of a compile-time attribute list.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":365},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97608,"byte_end":97621,"line_start":464,"line_end":464,"column_start":10,"column_end":23},"name":"AttributeArgs","qualname":"::attr::AttributeArgs","value":"Vec<NestedMeta>","parent":null,"children":[],"decl_id":null,"docs":" Conventional argument type associated with an invocation of an attribute\n macro.","sig":null,"attributes":[{"value":"/ Conventional argument type associated with an invocation of an attribute","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96557,"byte_end":96633,"line_start":428,"line_end":428,"column_start":1,"column_end":77}},{"value":"/ macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96634,"byte_end":96644,"line_start":429,"line_end":429,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96645,"byte_end":96648,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ For example if we are developing an attribute macro that is intended to be","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96649,"byte_end":96727,"line_start":431,"line_end":431,"column_start":1,"column_end":79}},{"value":"/ invoked on function items as follows:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96728,"byte_end":96769,"line_start":432,"line_end":432,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96770,"byte_end":96773,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96774,"byte_end":96781,"line_start":434,"line_end":434,"column_start":1,"column_end":8}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96782,"byte_end":96821,"line_start":435,"line_end":435,"column_start":1,"column_end":40}},{"value":"/ #[my_attribute(path = \"/v1/refresh\")]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96822,"byte_end":96863,"line_start":436,"line_end":436,"column_start":1,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96864,"byte_end":96872,"line_start":437,"line_end":437,"column_start":1,"column_end":9}},{"value":"/ pub fn refresh() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96873,"byte_end":96895,"line_start":438,"line_end":438,"column_start":1,"column_end":23}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96896,"byte_end":96913,"line_start":439,"line_end":439,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96914,"byte_end":96919,"line_start":440,"line_end":440,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96920,"byte_end":96927,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96928,"byte_end":96931,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ The implementation of this macro would want to parse its attribute arguments","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":96932,"byte_end":97012,"line_start":443,"line_end":443,"column_start":1,"column_end":81}},{"value":"/ as type `AttributeArgs`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97013,"byte_end":97041,"line_start":444,"line_end":444,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97042,"byte_end":97045,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97046,"byte_end":97053,"line_start":446,"line_end":446,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97054,"byte_end":97084,"line_start":447,"line_end":447,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97085,"byte_end":97090,"line_start":448,"line_end":448,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97091,"byte_end":97123,"line_start":449,"line_end":449,"column_start":1,"column_end":33}},{"value":"/ use syn::{parse_macro_input, AttributeArgs, ItemFn};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97124,"byte_end":97180,"line_start":450,"line_end":450,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97181,"byte_end":97184,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97185,"byte_end":97224,"line_start":452,"line_end":452,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_attribute]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97225,"byte_end":97252,"line_start":453,"line_end":453,"column_start":1,"column_end":28}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97253,"byte_end":97261,"line_start":454,"line_end":454,"column_start":1,"column_end":9}},{"value":"/ pub fn my_attribute(args: TokenStream, input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97262,"byte_end":97341,"line_start":455,"line_end":455,"column_start":1,"column_end":80}},{"value":"/     let args = parse_macro_input!(args as AttributeArgs);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97342,"byte_end":97403,"line_start":456,"line_end":456,"column_start":1,"column_end":62}},{"value":"/     let input = parse_macro_input!(input as ItemFn);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97404,"byte_end":97460,"line_start":457,"line_end":457,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97461,"byte_end":97464,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97465,"byte_end":97482,"line_start":459,"line_end":459,"column_start":1,"column_end":18}},{"value":"/ #   \"\".parse().unwrap()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97483,"byte_end":97510,"line_start":460,"line_end":460,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97511,"byte_end":97516,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97517,"byte_end":97524,"line_start":462,"line_end":462,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":368},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":97679,"byte_end":97682,"line_start":467,"line_end":467,"column_start":10,"column_end":13},"name":"Ret","qualname":"::attr::FilterAttrs::Ret","value":"type Ret: Iterator<Item = &'a Attribute>;","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":100655,"byte_end":100660,"line_start":559,"line_end":559,"column_start":12,"column_end":17},"name":"parse","qualname":"<Meta as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":100913,"byte_end":100918,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"parse","qualname":"<MetaList as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":101181,"byte_end":101186,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"parse","qualname":"<MetaNameValue as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":101452,"byte_end":101457,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"parse","qualname":"<NestedMeta as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103069,"byte_end":103078,"line_start":632,"line_end":632,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Attribute as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103553,"byte_end":103562,"line_start":646,"line_end":646,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<MetaList as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103882,"byte_end":103891,"line_start":656,"line_end":656,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<MetaNameValue as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5510},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":105955,"byte_end":105962,"line_start":10,"line_end":10,"column_start":16,"column_end":23},"name":"Variant","qualname":"::data::Variant","value":"Variant { attrs, ident, fields, discriminant }","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514}],"decl_id":null,"docs":" An enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5511},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106023,"byte_end":106028,"line_start":12,"line_end":12,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Variant::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5510},"children":[],"decl_id":null,"docs":" Attributes tagged on the variant.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the variant.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":105973,"byte_end":106010,"line_start":11,"line_end":11,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5512},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106092,"byte_end":106097,"line_start":15,"line_end":15,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Variant::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5510},"children":[],"decl_id":null,"docs":" Name of the variant.\n","sig":null,"attributes":[{"value":"/ Name of the variant.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106055,"byte_end":106079,"line_start":14,"line_end":14,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5513},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106162,"byte_end":106168,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"fields","qualname":"::data::Variant::fields","value":"data::Fields","parent":{"krate":0,"index":5510},"children":[],"decl_id":null,"docs":" Content stored in the variant.\n","sig":null,"attributes":[{"value":"/ Content stored in the variant.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106115,"byte_end":106149,"line_start":17,"line_end":17,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5514},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106240,"byte_end":106252,"line_start":21,"line_end":21,"column_start":13,"column_end":25},"name":"discriminant","qualname":"::data::Variant::discriminant","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":5510},"children":[],"decl_id":null,"docs":" Explicit discriminant: `Variant = 1`\n","sig":null,"attributes":[{"value":"/ Explicit discriminant: `Variant = 1`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106187,"byte_end":106227,"line_start":20,"line_end":20,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5516},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106834,"byte_end":106839,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"Named","qualname":"::data::Fields::Named","value":"Fields::Named(FieldsNamed)","parent":{"krate":0,"index":5515},"children":[],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.\n","sig":null,"attributes":[{"value":"/ Named fields of a struct or struct variant such as `Point { x: f64,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106731,"byte_end":106802,"line_start":38,"line_end":38,"column_start":9,"column_end":80}},{"value":"/ y: f64 }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106811,"byte_end":106825,"line_start":39,"line_end":39,"column_start":9,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5518},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106840,"byte_end":106851,"line_start":40,"line_end":40,"column_start":15,"column_end":26},"name":"0","qualname":"::data::Fields::Named::0","value":"data::FieldsNamed","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5519},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106944,"byte_end":106951,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::data::Fields::Unnamed","value":"Fields::Unnamed(FieldsUnnamed)","parent":{"krate":0,"index":5515},"children":[],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.\n","sig":null,"attributes":[{"value":"/ Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106863,"byte_end":106935,"line_start":42,"line_end":42,"column_start":9,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":5521},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106952,"byte_end":106965,"line_start":43,"line_end":43,"column_start":17,"column_end":30},"name":"0","qualname":"::data::Fields::Unnamed::0","value":"data::FieldsUnnamed","parent":{"krate":0,"index":5519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5522},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107033,"byte_end":107037,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"Unit","qualname":"::data::Fields::Unit","value":"Fields::Unit","parent":{"krate":0,"index":5515},"children":[],"decl_id":null,"docs":" Unit struct or unit variant such as `None`.\n","sig":null,"attributes":[{"value":"/ Unit struct or unit variant such as `None`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106977,"byte_end":107024,"line_start":45,"line_end":45,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":5515},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":106714,"byte_end":106720,"line_start":37,"line_end":37,"column_start":14,"column_end":20},"name":"Fields","qualname":"::data::Fields","value":"enum Fields { Named(FieldsNamed), Unnamed(FieldsUnnamed), Unit, }","parent":null,"children":[{"krate":0,"index":5516},{"krate":0,"index":5519},{"krate":0,"index":5522}],"decl_id":null,"docs":" Data stored within an enum variant or struct.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5530},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107361,"byte_end":107372,"line_start":57,"line_end":57,"column_start":16,"column_end":27},"name":"FieldsNamed","qualname":"::data::FieldsNamed","value":"FieldsNamed { brace_token, named }","parent":null,"children":[{"krate":0,"index":5531},{"krate":0,"index":5532}],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5531},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107387,"byte_end":107398,"line_start":58,"line_end":58,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::data::FieldsNamed::brace_token","value":"token::Brace","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5532},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107426,"byte_end":107431,"line_start":59,"line_end":59,"column_start":13,"column_end":18},"name":"named","qualname":"::data::FieldsNamed::named","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":5530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5533},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107767,"byte_end":107780,"line_start":69,"line_end":69,"column_start":16,"column_end":29},"name":"FieldsUnnamed","qualname":"::data::FieldsUnnamed","value":"FieldsUnnamed { paren_token, unnamed }","parent":null,"children":[{"krate":0,"index":5534},{"krate":0,"index":5535}],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5534},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107795,"byte_end":107806,"line_start":70,"line_end":70,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::data::FieldsUnnamed::paren_token","value":"token::Paren","parent":{"krate":0,"index":5533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5535},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107834,"byte_end":107841,"line_start":71,"line_end":71,"column_start":13,"column_end":20},"name":"unnamed","qualname":"::data::FieldsUnnamed::unnamed","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":5533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108096,"byte_end":108100,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"iter","qualname":"<Fields>::iter","value":"fn iter(&Self) -> punctuated::Iter<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the borrowed [`Field`] items in this object. This\n iterator can be used to iterate over a named or unnamed struct or\n variant's fields uniformly.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the borrowed [`Field`] items in this object. This","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107900,"byte_end":107974,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ iterator can be used to iterate over a named or unnamed struct or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107979,"byte_end":108048,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ variant's fields uniformly.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108053,"byte_end":108084,"line_start":78,"line_end":78,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108555,"byte_end":108563,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Fields>::iter_mut","value":"fn iter_mut(&mut Self) -> punctuated::IterMut<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the mutably borrowed [`Field`] items in this\n object. This iterator can be used to iterate over a named or unnamed\n struct or variant's fields uniformly.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the mutably borrowed [`Field`] items in this","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108351,"byte_end":108420,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ object. This iterator can be used to iterate over a named or unnamed","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108425,"byte_end":108497,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ struct or variant's fields uniformly.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108502,"byte_end":108543,"line_start":89,"line_end":89,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108878,"byte_end":108881,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"len","qualname":"<Fields>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":108833,"byte_end":108866,"line_start":98,"line_end":98,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":109127,"byte_end":109135,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Fields>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are zero fields.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are zero fields.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":109071,"byte_end":109115,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":109446,"byte_end":109455,"line_start":121,"line_end":121,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Fields as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":109827,"byte_end":109836,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Fields as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110026,"byte_end":110035,"line_start":143,"line_end":143,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut Fields as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5536},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110358,"byte_end":110363,"line_start":154,"line_end":154,"column_start":16,"column_end":21},"name":"Field","qualname":"::data::Field","value":"Field { attrs, vis, ident, colon_token, ty }","parent":null,"children":[{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541}],"decl_id":null,"docs":" A field of a struct or enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5537},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110422,"byte_end":110427,"line_start":156,"line_end":156,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Field::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the field.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110374,"byte_end":110409,"line_start":155,"line_end":155,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5538},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110495,"byte_end":110498,"line_start":159,"line_end":159,"column_start":13,"column_end":16},"name":"vis","qualname":"::data::Field::vis","value":"data::Visibility","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" Visibility of the field.\n","sig":null,"attributes":[{"value":"/ Visibility of the field.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110454,"byte_end":110482,"line_start":158,"line_end":158,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5539},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110627,"byte_end":110632,"line_start":164,"line_end":164,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Field::ident","value":"std::option::Option<proc_macro2::Ident>","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" Name of the field, if any.","sig":null,"attributes":[{"value":"/ Name of the field, if any.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110521,"byte_end":110551,"line_start":161,"line_end":161,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110560,"byte_end":110563,"line_start":162,"line_end":162,"column_start":9,"column_end":12}},{"value":"/ Fields of tuple structs have no names.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110572,"byte_end":110614,"line_start":163,"line_end":163,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5540},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110662,"byte_end":110673,"line_start":166,"line_end":166,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::data::Field::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5541},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110738,"byte_end":110740,"line_start":169,"line_end":169,"column_start":13,"column_end":15},"name":"ty","qualname":"::data::Field::ty","value":"ty::Type","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":110703,"byte_end":110725,"line_start":168,"line_end":168,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5543},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111284,"byte_end":111290,"line_start":188,"line_end":188,"column_start":9,"column_end":15},"name":"Public","qualname":"::data::Visibility::Public","value":"Visibility::Public(VisPublic)","parent":{"krate":0,"index":5542},"children":[],"decl_id":null,"docs":" A public visibility level: `pub`.\n","sig":null,"attributes":[{"value":"/ A public visibility level: `pub`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111238,"byte_end":111275,"line_start":187,"line_end":187,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5545},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111291,"byte_end":111300,"line_start":188,"line_end":188,"column_start":16,"column_end":25},"name":"0","qualname":"::data::Visibility::Public::0","value":"data::VisPublic","parent":{"krate":0,"index":5543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5546},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111359,"byte_end":111364,"line_start":191,"line_end":191,"column_start":9,"column_end":14},"name":"Crate","qualname":"::data::Visibility::Crate","value":"Visibility::Crate(VisCrate)","parent":{"krate":0,"index":5542},"children":[],"decl_id":null,"docs":" A crate-level visibility: `crate`.\n","sig":null,"attributes":[{"value":"/ A crate-level visibility: `crate`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111312,"byte_end":111350,"line_start":190,"line_end":190,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5548},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111365,"byte_end":111373,"line_start":191,"line_end":191,"column_start":15,"column_end":23},"name":"0","qualname":"::data::Visibility::Crate::0","value":"data::VisCrate","parent":{"krate":0,"index":5546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5549},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111524,"byte_end":111534,"line_start":195,"line_end":195,"column_start":9,"column_end":19},"name":"Restricted","qualname":"::data::Visibility::Restricted","value":"Visibility::Restricted(VisRestricted)","parent":{"krate":0,"index":5542},"children":[],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.\n","sig":null,"attributes":[{"value":"/ A visibility level restricted to some path: `pub(self)` or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111385,"byte_end":111447,"line_start":193,"line_end":193,"column_start":9,"column_end":71}},{"value":"/ `pub(super)` or `pub(crate)` or `pub(in some::module)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111456,"byte_end":111515,"line_start":194,"line_end":194,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":5551},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111535,"byte_end":111548,"line_start":195,"line_end":195,"column_start":20,"column_end":33},"name":"0","qualname":"::data::Visibility::Restricted::0","value":"data::VisRestricted","parent":{"krate":0,"index":5549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5552},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111626,"byte_end":111635,"line_start":198,"line_end":198,"column_start":9,"column_end":18},"name":"Inherited","qualname":"::data::Visibility::Inherited","value":"Visibility::Inherited","parent":{"krate":0,"index":5542},"children":[],"decl_id":null,"docs":" An inherited visibility, which usually means private.\n","sig":null,"attributes":[{"value":"/ An inherited visibility, which usually means private.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111560,"byte_end":111617,"line_start":197,"line_end":197,"column_start":9,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":5542},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111217,"byte_end":111227,"line_start":186,"line_end":186,"column_start":14,"column_end":24},"name":"Visibility","qualname":"::data::Visibility","value":"enum Visibility {\n    Public(VisPublic),\n    Crate(VisCrate),\n    Restricted(VisRestricted),\n    Inherited,\n}","parent":null,"children":[{"krate":0,"index":5543},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5552}],"decl_id":null,"docs":" The visibility level of an item: inherited or `pub` or\n `pub(restricted)`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5562},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111906,"byte_end":111915,"line_start":208,"line_end":208,"column_start":16,"column_end":25},"name":"VisPublic","qualname":"::data::VisPublic","value":"VisPublic { pub_token }","parent":null,"children":[{"krate":0,"index":5563}],"decl_id":null,"docs":" A public visibility level: `pub`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5563},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":111930,"byte_end":111939,"line_start":209,"line_end":209,"column_start":13,"column_end":22},"name":"pub_token","qualname":"::data::VisPublic::pub_token","value":"token::Pub","parent":{"krate":0,"index":5562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5564},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112224,"byte_end":112232,"line_start":219,"line_end":219,"column_start":16,"column_end":24},"name":"VisCrate","qualname":"::data::VisCrate","value":"VisCrate { crate_token }","parent":null,"children":[{"krate":0,"index":5565}],"decl_id":null,"docs":" A crate-level visibility: `crate`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5565},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112247,"byte_end":112258,"line_start":220,"line_end":220,"column_start":13,"column_end":24},"name":"crate_token","qualname":"::data::VisCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":5564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112633,"byte_end":112646,"line_start":231,"line_end":231,"column_start":16,"column_end":29},"name":"VisRestricted","qualname":"::data::VisRestricted","value":"VisRestricted { pub_token, paren_token, in_token, path }","parent":null,"children":[{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570}],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5567},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112661,"byte_end":112670,"line_start":232,"line_end":232,"column_start":13,"column_end":22},"name":"pub_token","qualname":"::data::VisRestricted::pub_token","value":"token::Pub","parent":{"krate":0,"index":5566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5568},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112697,"byte_end":112708,"line_start":233,"line_end":233,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::data::VisRestricted::paren_token","value":"token::Paren","parent":{"krate":0,"index":5566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5569},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112736,"byte_end":112744,"line_start":234,"line_end":234,"column_start":13,"column_end":21},"name":"in_token","qualname":"::data::VisRestricted::in_token","value":"std::option::Option<token::In>","parent":{"krate":0,"index":5566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5570},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":112778,"byte_end":112782,"line_start":235,"line_end":235,"column_start":13,"column_end":17},"name":"path","qualname":"::data::VisRestricted::path","value":"std::boxed::Box<path::Path>","parent":{"krate":0,"index":5566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":113095,"byte_end":113100,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"parse","qualname":"<Variant as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114102,"byte_end":114107,"line_start":277,"line_end":277,"column_start":12,"column_end":17},"name":"parse","qualname":"<FieldsNamed as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114460,"byte_end":114465,"line_start":288,"line_end":288,"column_start":12,"column_end":17},"name":"parse","qualname":"<FieldsUnnamed as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114871,"byte_end":114882,"line_start":300,"line_end":300,"column_start":16,"column_end":27},"name":"parse_named","qualname":"<Field>::parse_named","value":"fn parse_named(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses a named (braced struct) field.\n","sig":null,"attributes":[{"value":"/ Parses a named (braced struct) field.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114754,"byte_end":114795,"line_start":298,"line_end":298,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":115465,"byte_end":115478,"line_start":316,"line_end":316,"column_start":16,"column_end":29},"name":"parse_unnamed","qualname":"<Field>::parse_unnamed","value":"fn parse_unnamed(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses an unnamed (tuple struct) field.\n","sig":null,"attributes":[{"value":"/ Parses an unnamed (tuple struct) field.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":115346,"byte_end":115389,"line_start":314,"line_end":314,"column_start":9,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":115868,"byte_end":115873,"line_start":329,"line_end":329,"column_start":12,"column_end":17},"name":"parse","qualname":"<Visibility as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":119295,"byte_end":119304,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Variant as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":119753,"byte_end":119762,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<FieldsNamed as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120040,"byte_end":120049,"line_start":447,"line_end":447,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<FieldsUnnamed as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120321,"byte_end":120330,"line_start":456,"line_end":456,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Field as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120780,"byte_end":120789,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<VisPublic as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120989,"byte_end":120998,"line_start":476,"line_end":476,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<VisCrate as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":121205,"byte_end":121214,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<VisRestricted as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5572},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124787,"byte_end":124792,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"Array","qualname":"::expr::Expr::Array","value":"Expr::Array(ExprArray)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.\n","sig":null,"attributes":[{"value":"/ A slice literal expression: `[a, b, c, d]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124731,"byte_end":124778,"line_start":92,"line_end":92,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5574},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124793,"byte_end":124802,"line_start":93,"line_end":93,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Array::0","value":"expr::ExprArray","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5575},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124869,"byte_end":124875,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"Assign","qualname":"::expr::Expr::Assign","value":"Expr::Assign(ExprAssign)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An assignment expression: `a = compute()`.\n","sig":null,"attributes":[{"value":"/ An assignment expression: `a = compute()`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124814,"byte_end":124860,"line_start":95,"line_end":95,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5577},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124876,"byte_end":124886,"line_start":96,"line_end":96,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Assign::0","value":"expr::ExprAssign","parent":{"krate":0,"index":5575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5578},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124960,"byte_end":124968,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"name":"AssignOp","qualname":"::expr::Expr::AssignOp","value":"Expr::AssignOp(ExprAssignOp)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.\n","sig":null,"attributes":[{"value":"/ A compound assignment expression: `counter += 1`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124898,"byte_end":124951,"line_start":98,"line_end":98,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5580},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124969,"byte_end":124981,"line_start":99,"line_end":99,"column_start":18,"column_end":30},"name":"0","qualname":"::expr::Expr::AssignOp::0","value":"expr::ExprAssignOp","parent":{"krate":0,"index":5578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5581},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125038,"byte_end":125043,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"Async","qualname":"::expr::Expr::Async","value":"Expr::Async(ExprAsync)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An async block: `async { ... }`.\n","sig":null,"attributes":[{"value":"/ An async block: `async { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124993,"byte_end":125029,"line_start":101,"line_end":101,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5583},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125044,"byte_end":125053,"line_start":102,"line_end":102,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Async::0","value":"expr::ExprAsync","parent":{"krate":0,"index":5581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5584},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125111,"byte_end":125116,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"Await","qualname":"::expr::Expr::Await","value":"Expr::Await(ExprAwait)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An await expression: `fut.await`.\n","sig":null,"attributes":[{"value":"/ An await expression: `fut.await`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125065,"byte_end":125102,"line_start":104,"line_end":104,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5586},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125117,"byte_end":125126,"line_start":105,"line_end":105,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Await::0","value":"expr::ExprAwait","parent":{"krate":0,"index":5584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5587},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125188,"byte_end":125194,"line_start":108,"line_end":108,"column_start":9,"column_end":15},"name":"Binary","qualname":"::expr::Expr::Binary","value":"Expr::Binary(ExprBinary)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.\n","sig":null,"attributes":[{"value":"/ A binary operation: `a + b`, `a * b`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125138,"byte_end":125179,"line_start":107,"line_end":107,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5589},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125195,"byte_end":125205,"line_start":108,"line_end":108,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Binary::0","value":"expr::ExprBinary","parent":{"krate":0,"index":5587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5590},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125257,"byte_end":125262,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"Block","qualname":"::expr::Expr::Block","value":"Expr::Block(ExprBlock)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A blocked scope: `{ ... }`.\n","sig":null,"attributes":[{"value":"/ A blocked scope: `{ ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125217,"byte_end":125248,"line_start":110,"line_end":110,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5592},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125263,"byte_end":125272,"line_start":111,"line_end":111,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Block::0","value":"expr::ExprBlock","parent":{"krate":0,"index":5590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5593},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125323,"byte_end":125326,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"Box","qualname":"::expr::Expr::Box","value":"Expr::Box(ExprBox)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A box expression: `box f`.\n","sig":null,"attributes":[{"value":"/ A box expression: `box f`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125284,"byte_end":125314,"line_start":113,"line_end":113,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5595},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125327,"byte_end":125334,"line_start":114,"line_end":114,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Box::0","value":"expr::ExprBox","parent":{"krate":0,"index":5593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5596},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125441,"byte_end":125446,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"name":"Break","qualname":"::expr::Expr::Break","value":"Expr::Break(ExprBreak)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.\n","sig":null,"attributes":[{"value":"/ A `break`, with an optional label to break and an optional","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125346,"byte_end":125408,"line_start":116,"line_end":116,"column_start":9,"column_end":71}},{"value":"/ expression.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125417,"byte_end":125432,"line_start":117,"line_end":117,"column_start":9,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":5598},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125447,"byte_end":125456,"line_start":118,"line_end":118,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Break::0","value":"expr::ExprBreak","parent":{"krate":0,"index":5596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5599},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125524,"byte_end":125528,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"Call","qualname":"::expr::Expr::Call","value":"Expr::Call(ExprCall)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.\n","sig":null,"attributes":[{"value":"/ A function call expression: `invoke(a, b)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125468,"byte_end":125515,"line_start":120,"line_end":120,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5601},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125529,"byte_end":125537,"line_start":121,"line_end":121,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Call::0","value":"expr::ExprCall","parent":{"krate":0,"index":5599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5602},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125594,"byte_end":125598,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"Cast","qualname":"::expr::Expr::Cast","value":"Expr::Cast(ExprCast)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A cast expression: `foo as f64`.\n","sig":null,"attributes":[{"value":"/ A cast expression: `foo as f64`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125549,"byte_end":125585,"line_start":123,"line_end":123,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5604},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125599,"byte_end":125607,"line_start":124,"line_end":124,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Cast::0","value":"expr::ExprCast","parent":{"krate":0,"index":5602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5605},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125669,"byte_end":125676,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"name":"Closure","qualname":"::expr::Expr::Closure","value":"Expr::Closure(ExprClosure)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.\n","sig":null,"attributes":[{"value":"/ A closure expression: `|a, b| a + b`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125619,"byte_end":125660,"line_start":126,"line_end":126,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5607},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125677,"byte_end":125688,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"name":"0","qualname":"::expr::Expr::Closure::0","value":"expr::ExprClosure","parent":{"krate":0,"index":5605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5608},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125750,"byte_end":125758,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"Continue","qualname":"::expr::Expr::Continue","value":"Expr::Continue(ExprContinue)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A `continue`, with an optional label.\n","sig":null,"attributes":[{"value":"/ A `continue`, with an optional label.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125700,"byte_end":125741,"line_start":129,"line_end":129,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5610},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125759,"byte_end":125771,"line_start":130,"line_end":130,"column_start":18,"column_end":30},"name":"0","qualname":"::expr::Expr::Continue::0","value":"expr::ExprContinue","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5611},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125889,"byte_end":125894,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"Field","qualname":"::expr::Expr::Field","value":"Expr::Field(ExprField)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).\n","sig":null,"attributes":[{"value":"/ Access of a named struct field (`obj.k`) or unnamed tuple struct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125783,"byte_end":125851,"line_start":132,"line_end":132,"column_start":9,"column_end":77}},{"value":"/ field (`obj.0`).","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125860,"byte_end":125880,"line_start":133,"line_end":133,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5613},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125895,"byte_end":125904,"line_start":134,"line_end":134,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Field::0","value":"expr::ExprField","parent":{"krate":0,"index":5611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5614},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125967,"byte_end":125974,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ForLoop","qualname":"::expr::Expr::ForLoop","value":"Expr::ForLoop(ExprForLoop)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.\n","sig":null,"attributes":[{"value":"/ A for loop: `for pat in expr { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125916,"byte_end":125958,"line_start":136,"line_end":136,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5616},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125975,"byte_end":125986,"line_start":137,"line_end":137,"column_start":17,"column_end":28},"name":"0","qualname":"::expr::Expr::ForLoop::0","value":"expr::ExprForLoop","parent":{"krate":0,"index":5614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5617},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126256,"byte_end":126261,"line_start":144,"line_end":144,"column_start":9,"column_end":14},"name":"Group","qualname":"::expr::Expr::Group","value":"Expr::Group(ExprGroup)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[{"value":"/ An expression contained within invisible delimiters.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":125998,"byte_end":126054,"line_start":139,"line_end":139,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126063,"byte_end":126066,"line_start":140,"line_end":140,"column_start":9,"column_end":12}},{"value":"/ This variant is important for faithfully representing the precedence","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126075,"byte_end":126147,"line_start":141,"line_end":141,"column_start":9,"column_end":81}},{"value":"/ of expressions and is related to `None`-delimited spans in a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126156,"byte_end":126220,"line_start":142,"line_end":142,"column_start":9,"column_end":73}},{"value":"/ `TokenStream`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126229,"byte_end":126247,"line_start":143,"line_end":143,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126262,"byte_end":126271,"line_start":144,"line_end":144,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Group::0","value":"expr::ExprGroup","parent":{"krate":0,"index":5617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5620},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126539,"byte_end":126541,"line_start":151,"line_end":151,"column_start":9,"column_end":11},"name":"If","qualname":"::expr::Expr::If","value":"Expr::If(ExprIf)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[{"value":"/ An `if` expression with an optional `else` block: `if expr { ... }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126283,"byte_end":126353,"line_start":146,"line_end":146,"column_start":9,"column_end":79}},{"value":"/ else { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126362,"byte_end":126380,"line_start":147,"line_end":147,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126389,"byte_end":126392,"line_start":148,"line_end":148,"column_start":9,"column_end":12}},{"value":"/ The `else` branch expression may only be an `If` or `Block`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126401,"byte_end":126464,"line_start":149,"line_end":149,"column_start":9,"column_end":72}},{"value":"/ expression, not any of the other types of expression.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126473,"byte_end":126530,"line_start":150,"line_end":150,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":5622},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126542,"byte_end":126548,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"0","qualname":"::expr::Expr::If::0","value":"expr::ExprIf","parent":{"krate":0,"index":5620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5623},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126625,"byte_end":126630,"line_start":154,"line_end":154,"column_start":9,"column_end":14},"name":"Index","qualname":"::expr::Expr::Index","value":"Expr::Index(ExprIndex)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.\n","sig":null,"attributes":[{"value":"/ A square bracketed indexing expression: `vector[2]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126560,"byte_end":126616,"line_start":153,"line_end":153,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126631,"byte_end":126640,"line_start":154,"line_end":154,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Index::0","value":"expr::ExprIndex","parent":{"krate":0,"index":5623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5626},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126700,"byte_end":126703,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"name":"Let","qualname":"::expr::Expr::Let","value":"Expr::Let(ExprLet)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.\n","sig":null,"attributes":[{"value":"/ A `let` guard: `let Some(x) = opt`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126652,"byte_end":126691,"line_start":156,"line_end":156,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5628},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126704,"byte_end":126711,"line_start":157,"line_end":157,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Let::0","value":"expr::ExprLet","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5629},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126786,"byte_end":126789,"line_start":160,"line_end":160,"column_start":9,"column_end":12},"name":"Lit","qualname":"::expr::Expr::Lit","value":"Expr::Lit(ExprLit)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.\n","sig":null,"attributes":[{"value":"/ A literal in place of an expression: `1`, `\"foo\"`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126723,"byte_end":126777,"line_start":159,"line_end":159,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5631},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126790,"byte_end":126797,"line_start":160,"line_end":160,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Lit::0","value":"expr::ExprLit","parent":{"krate":0,"index":5629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5632},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126857,"byte_end":126861,"line_start":163,"line_end":163,"column_start":9,"column_end":13},"name":"Loop","qualname":"::expr::Expr::Loop","value":"Expr::Loop(ExprLoop)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.\n","sig":null,"attributes":[{"value":"/ Conditionless loop: `loop { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126809,"byte_end":126848,"line_start":162,"line_end":162,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5634},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126862,"byte_end":126870,"line_start":163,"line_end":163,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Loop::0","value":"expr::ExprLoop","parent":{"krate":0,"index":5632},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5635},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126945,"byte_end":126950,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"name":"Macro","qualname":"::expr::Expr::Macro","value":"Expr::Macro(ExprMacro)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.\n","sig":null,"attributes":[{"value":"/ A macro invocation expression: `format!(\"{}\", q)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126882,"byte_end":126936,"line_start":165,"line_end":165,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5637},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126951,"byte_end":126960,"line_start":166,"line_end":166,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Macro::0","value":"expr::ExprMacro","parent":{"krate":0,"index":5635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5638},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127047,"byte_end":127052,"line_start":169,"line_end":169,"column_start":9,"column_end":14},"name":"Match","qualname":"::expr::Expr::Match","value":"Expr::Match(ExprMatch)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.\n","sig":null,"attributes":[{"value":"/ A `match` expression: `match n { Some(n) => {}, None => {} }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":126972,"byte_end":127038,"line_start":168,"line_end":168,"column_start":9,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":5640},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127053,"byte_end":127062,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Match::0","value":"expr::ExprMatch","parent":{"krate":0,"index":5638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5641},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127132,"byte_end":127142,"line_start":172,"line_end":172,"column_start":9,"column_end":19},"name":"MethodCall","qualname":"::expr::Expr::MethodCall","value":"Expr::MethodCall(ExprMethodCall)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.\n","sig":null,"attributes":[{"value":"/ A method call expression: `x.foo::<T>(a, b)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127074,"byte_end":127123,"line_start":171,"line_end":171,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5643},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127143,"byte_end":127157,"line_start":172,"line_end":172,"column_start":20,"column_end":34},"name":"0","qualname":"::expr::Expr::MethodCall::0","value":"expr::ExprMethodCall","parent":{"krate":0,"index":5641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5644},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127220,"byte_end":127225,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"name":"Paren","qualname":"::expr::Expr::Paren","value":"Expr::Paren(ExprParen)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.\n","sig":null,"attributes":[{"value":"/ A parenthesized expression: `(a + b)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127169,"byte_end":127211,"line_start":174,"line_end":174,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5646},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127226,"byte_end":127235,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Paren::0","value":"expr::ExprParen","parent":{"krate":0,"index":5644},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5647},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127444,"byte_end":127448,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"Path","qualname":"::expr::Expr::Path","value":"Expr::Path(ExprPath)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[{"value":"/ A path like `std::mem::replace` possibly containing generic","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127247,"byte_end":127310,"line_start":177,"line_end":177,"column_start":9,"column_end":72}},{"value":"/ parameters and a qualified self-type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127319,"byte_end":127360,"line_start":178,"line_end":178,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127369,"byte_end":127372,"line_start":179,"line_end":179,"column_start":9,"column_end":12}},{"value":"/ A plain identifier like `x` is a path of length 1.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127381,"byte_end":127435,"line_start":180,"line_end":180,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5649},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127449,"byte_end":127457,"line_start":181,"line_end":181,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Path::0","value":"expr::ExprPath","parent":{"krate":0,"index":5647},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5650},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127540,"byte_end":127545,"line_start":184,"line_end":184,"column_start":9,"column_end":14},"name":"Range","qualname":"::expr::Expr::Range","value":"Expr::Range(ExprRange)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.\n","sig":null,"attributes":[{"value":"/ A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127469,"byte_end":127531,"line_start":183,"line_end":183,"column_start":9,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5652},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127546,"byte_end":127555,"line_start":184,"line_end":184,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Range::0","value":"expr::ExprRange","parent":{"krate":0,"index":5650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5653},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127622,"byte_end":127631,"line_start":187,"line_end":187,"column_start":9,"column_end":18},"name":"Reference","qualname":"::expr::Expr::Reference","value":"Expr::Reference(ExprReference)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.\n","sig":null,"attributes":[{"value":"/ A referencing operation: `&a` or `&mut a`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127567,"byte_end":127613,"line_start":186,"line_end":186,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5655},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127632,"byte_end":127645,"line_start":187,"line_end":187,"column_start":19,"column_end":32},"name":"0","qualname":"::expr::Expr::Reference::0","value":"expr::ExprReference","parent":{"krate":0,"index":5653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5656},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127737,"byte_end":127743,"line_start":190,"line_end":190,"column_start":9,"column_end":15},"name":"Repeat","qualname":"::expr::Expr::Repeat","value":"Expr::Repeat(ExprRepeat)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.\n","sig":null,"attributes":[{"value":"/ An array literal constructed from one repeated element: `[0u8; N]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127657,"byte_end":127728,"line_start":189,"line_end":189,"column_start":9,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5658},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127744,"byte_end":127754,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Repeat::0","value":"expr::ExprRepeat","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5659},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127829,"byte_end":127835,"line_start":193,"line_end":193,"column_start":9,"column_end":15},"name":"Return","qualname":"::expr::Expr::Return","value":"Expr::Return(ExprReturn)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A `return`, with an optional value to be returned.\n","sig":null,"attributes":[{"value":"/ A `return`, with an optional value to be returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127766,"byte_end":127820,"line_start":192,"line_end":192,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5661},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127836,"byte_end":127846,"line_start":193,"line_end":193,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Return::0","value":"expr::ExprReturn","parent":{"krate":0,"index":5659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5662},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128047,"byte_end":128053,"line_start":199,"line_end":199,"column_start":9,"column_end":15},"name":"Struct","qualname":"::expr::Expr::Struct","value":"Expr::Struct(ExprStruct)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[{"value":"/ A struct literal expression: `Point { x: 1, y: 1 }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127858,"byte_end":127914,"line_start":195,"line_end":195,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127923,"byte_end":127926,"line_start":196,"line_end":196,"column_start":9,"column_end":12}},{"value":"/ The `rest` provides the value of the remaining fields as in `S { a:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":127935,"byte_end":128006,"line_start":197,"line_end":197,"column_start":9,"column_end":80}},{"value":"/ 1, b: 1, ..rest }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128015,"byte_end":128038,"line_start":198,"line_end":198,"column_start":9,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5664},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128054,"byte_end":128064,"line_start":199,"line_end":199,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Struct::0","value":"expr::ExprStruct","parent":{"krate":0,"index":5662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5665},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128115,"byte_end":128118,"line_start":202,"line_end":202,"column_start":9,"column_end":12},"name":"Try","qualname":"::expr::Expr::Try","value":"Expr::Try(ExprTry)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A try-expression: `expr?`.\n","sig":null,"attributes":[{"value":"/ A try-expression: `expr?`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128076,"byte_end":128106,"line_start":201,"line_end":201,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5667},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128119,"byte_end":128126,"line_start":202,"line_end":202,"column_start":13,"column_end":20},"name":"0","qualname":"::expr::Expr::Try::0","value":"expr::ExprTry","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5668},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128178,"byte_end":128186,"line_start":205,"line_end":205,"column_start":9,"column_end":17},"name":"TryBlock","qualname":"::expr::Expr::TryBlock","value":"Expr::TryBlock(ExprTryBlock)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A try block: `try { ... }`.\n","sig":null,"attributes":[{"value":"/ A try block: `try { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128138,"byte_end":128169,"line_start":204,"line_end":204,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5670},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128187,"byte_end":128199,"line_start":205,"line_end":205,"column_start":18,"column_end":30},"name":"0","qualname":"::expr::Expr::TryBlock::0","value":"expr::ExprTryBlock","parent":{"krate":0,"index":5668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5671},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128259,"byte_end":128264,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"name":"Tuple","qualname":"::expr::Expr::Tuple","value":"Expr::Tuple(ExprTuple)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.\n","sig":null,"attributes":[{"value":"/ A tuple expression: `(a, b, c, d)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128211,"byte_end":128250,"line_start":207,"line_end":207,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5673},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128265,"byte_end":128274,"line_start":208,"line_end":208,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Tuple::0","value":"expr::ExprTuple","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128340,"byte_end":128344,"line_start":211,"line_end":211,"column_start":9,"column_end":13},"name":"Type","qualname":"::expr::Expr::Type","value":"Expr::Type(ExprType)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.\n","sig":null,"attributes":[{"value":"/ A type ascription expression: `foo: f64`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128286,"byte_end":128331,"line_start":210,"line_end":210,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5676},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128345,"byte_end":128353,"line_start":211,"line_end":211,"column_start":14,"column_end":22},"name":"0","qualname":"::expr::Expr::Type::0","value":"expr::ExprType","parent":{"krate":0,"index":5674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5677},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128408,"byte_end":128413,"line_start":214,"line_end":214,"column_start":9,"column_end":14},"name":"Unary","qualname":"::expr::Expr::Unary","value":"Expr::Unary(ExprUnary)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.\n","sig":null,"attributes":[{"value":"/ A unary operation: `!x`, `*x`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128365,"byte_end":128399,"line_start":213,"line_end":213,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5679},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128414,"byte_end":128423,"line_start":214,"line_end":214,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Unary::0","value":"expr::ExprUnary","parent":{"krate":0,"index":5677},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128482,"byte_end":128488,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"Unsafe","qualname":"::expr::Expr::Unsafe","value":"Expr::Unsafe(ExprUnsafe)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.\n","sig":null,"attributes":[{"value":"/ An unsafe block: `unsafe { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128435,"byte_end":128473,"line_start":216,"line_end":216,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5682},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128489,"byte_end":128499,"line_start":217,"line_end":217,"column_start":16,"column_end":26},"name":"0","qualname":"::expr::Expr::Unsafe::0","value":"expr::ExprUnsafe","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5683},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128577,"byte_end":128585,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::expr::Expr::Verbatim","value":"Expr::Verbatim(TokenStream)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens in expression position not interpreted by Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128511,"byte_end":128568,"line_start":219,"line_end":219,"column_start":9,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":5685},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128586,"byte_end":128597,"line_start":220,"line_end":220,"column_start":18,"column_end":29},"name":"0","qualname":"::expr::Expr::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":5683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128657,"byte_end":128662,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"name":"While","qualname":"::expr::Expr::While","value":"Expr::While(ExprWhile)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A while loop: `while expr { ... }`.\n","sig":null,"attributes":[{"value":"/ A while loop: `while expr { ... }`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128609,"byte_end":128648,"line_start":222,"line_end":222,"column_start":9,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5688},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128663,"byte_end":128672,"line_start":223,"line_end":223,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::While::0","value":"expr::ExprWhile","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128730,"byte_end":128735,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"Yield","qualname":"::expr::Expr::Yield","value":"Expr::Yield(ExprYield)","parent":{"krate":0,"index":5571},"children":[],"decl_id":null,"docs":" A yield expression: `yield expr`.\n","sig":null,"attributes":[{"value":"/ A yield expression: `yield expr`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128684,"byte_end":128721,"line_start":225,"line_end":225,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5691},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":128736,"byte_end":128745,"line_start":226,"line_end":226,"column_start":15,"column_end":24},"name":"0","qualname":"::expr::Expr::Yield::0","value":"expr::ExprYield","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5571},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124716,"byte_end":124720,"line_start":91,"line_end":91,"column_start":14,"column_end":18},"name":"Expr","qualname":"::expr::Expr","value":"enum Expr {\n    Array(ExprArray),\n    Assign(ExprAssign),\n    AssignOp(ExprAssignOp),\n    Async(ExprAsync),\n    Await(ExprAwait),\n    Binary(ExprBinary),\n    Block(ExprBlock),\n    Box(ExprBox),\n    Break(ExprBreak),\n    Call(ExprCall),\n    Cast(ExprCast),\n    Closure(ExprClosure),\n    Continue(ExprContinue),\n    Field(ExprField),\n    ForLoop(ExprForLoop),\n    Group(ExprGroup),\n    If(ExprIf),\n    Index(ExprIndex),\n    Let(ExprLet),\n    Lit(ExprLit),\n    Loop(ExprLoop),\n    Macro(ExprMacro),\n    Match(ExprMatch),\n    MethodCall(ExprMethodCall),\n    Paren(ExprParen),\n    Path(ExprPath),\n    Range(ExprRange),\n    Reference(ExprReference),\n    Repeat(ExprRepeat),\n    Return(ExprReturn),\n    Struct(ExprStruct),\n    Try(ExprTry),\n    TryBlock(ExprTryBlock),\n    Tuple(ExprTuple),\n    Type(ExprType),\n    Unary(ExprUnary),\n    Unsafe(ExprUnsafe),\n    Verbatim(TokenStream),\n    While(ExprWhile),\n    Yield(ExprYield),\n}","parent":null,"children":[{"krate":0,"index":5572},{"krate":0,"index":5575},{"krate":0,"index":5578},{"krate":0,"index":5581},{"krate":0,"index":5584},{"krate":0,"index":5587},{"krate":0,"index":5590},{"krate":0,"index":5593},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5608},{"krate":0,"index":5611},{"krate":0,"index":5614},{"krate":0,"index":5617},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5641},{"krate":0,"index":5644},{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5659},{"krate":0,"index":5662},{"krate":0,"index":5665},{"krate":0,"index":5668},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5689}],"decl_id":null,"docs":" A Rust expression.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":124686,"byte_end":124700,"line_start":90,"line_end":90,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5772},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":129872,"byte_end":129881,"line_start":257,"line_end":257,"column_start":16,"column_end":25},"name":"ExprArray","qualname":"::expr::ExprArray","value":"ExprArray {  }","parent":null,"children":[{"krate":0,"index":5773}],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5776},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":130247,"byte_end":130257,"line_start":269,"line_end":269,"column_start":16,"column_end":26},"name":"ExprAssign","qualname":"::expr::ExprAssign","value":"ExprAssign {  }","parent":null,"children":[{"krate":0,"index":5777}],"decl_id":null,"docs":" An assignment expression: `a = compute()`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5780},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":130631,"byte_end":130643,"line_start":282,"line_end":282,"column_start":16,"column_end":28},"name":"ExprAssignOp","qualname":"::expr::ExprAssignOp","value":"ExprAssignOp {  }","parent":null,"children":[{"krate":0,"index":5781}],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5784},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":130990,"byte_end":130999,"line_start":295,"line_end":295,"column_start":16,"column_end":25},"name":"ExprAsync","qualname":"::expr::ExprAsync","value":"ExprAsync {  }","parent":null,"children":[{"krate":0,"index":5785}],"decl_id":null,"docs":" An async block: `async { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5788},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":131374,"byte_end":131383,"line_start":308,"line_end":308,"column_start":16,"column_end":25},"name":"ExprAwait","qualname":"::expr::ExprAwait","value":"ExprAwait {  }","parent":null,"children":[{"krate":0,"index":5789}],"decl_id":null,"docs":" An await expression: `fut.await`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5792},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":131802,"byte_end":131812,"line_start":322,"line_end":322,"column_start":16,"column_end":26},"name":"ExprBinary","qualname":"::expr::ExprBinary","value":"ExprBinary { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5795},{"krate":0,"index":5796}],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5793},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":131827,"byte_end":131832,"line_start":323,"line_end":323,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprBinary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5794},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":131862,"byte_end":131866,"line_start":324,"line_end":324,"column_start":13,"column_end":17},"name":"left","qualname":"::expr::ExprBinary::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5795},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":131891,"byte_end":131893,"line_start":325,"line_end":325,"column_start":13,"column_end":15},"name":"op","qualname":"::expr::ExprBinary::op","value":"op::BinOp","parent":{"krate":0,"index":5792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5796},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":131914,"byte_end":131919,"line_start":326,"line_end":326,"column_start":13,"column_end":18},"name":"right","qualname":"::expr::ExprBinary::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5797},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":132148,"byte_end":132157,"line_start":335,"line_end":335,"column_start":16,"column_end":25},"name":"ExprBlock","qualname":"::expr::ExprBlock","value":"ExprBlock {  }","parent":null,"children":[{"krate":0,"index":5798}],"decl_id":null,"docs":" A blocked scope: `{ ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5801},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":132476,"byte_end":132483,"line_start":347,"line_end":347,"column_start":16,"column_end":23},"name":"ExprBox","qualname":"::expr::ExprBox","value":"ExprBox {  }","parent":null,"children":[{"krate":0,"index":5802}],"decl_id":null,"docs":" A box expression: `box f`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5805},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":132859,"byte_end":132868,"line_start":360,"line_end":360,"column_start":16,"column_end":25},"name":"ExprBreak","qualname":"::expr::ExprBreak","value":"ExprBreak {  }","parent":null,"children":[{"krate":0,"index":5806}],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5809},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133305,"byte_end":133313,"line_start":374,"line_end":374,"column_start":16,"column_end":24},"name":"ExprCall","qualname":"::expr::ExprCall","value":"ExprCall { attrs, func, paren_token, args }","parent":null,"children":[{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5813}],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5810},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133328,"byte_end":133333,"line_start":375,"line_end":375,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5811},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133363,"byte_end":133367,"line_start":376,"line_end":376,"column_start":13,"column_end":17},"name":"func","qualname":"::expr::ExprCall::func","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5812},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133392,"byte_end":133403,"line_start":377,"line_end":377,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::expr::ExprCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5813},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133431,"byte_end":133435,"line_start":378,"line_end":378,"column_start":13,"column_end":17},"name":"args","qualname":"::expr::ExprCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5814},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133734,"byte_end":133742,"line_start":388,"line_end":388,"column_start":16,"column_end":24},"name":"ExprCast","qualname":"::expr::ExprCast","value":"ExprCast { attrs, expr, as_token, ty }","parent":null,"children":[{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5818}],"decl_id":null,"docs":" A cast expression: `foo as f64`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5815},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133757,"byte_end":133762,"line_start":389,"line_end":389,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprCast::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5816},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133792,"byte_end":133796,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprCast::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5817},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133821,"byte_end":133829,"line_start":391,"line_end":391,"column_start":13,"column_end":21},"name":"as_token","qualname":"::expr::ExprCast::as_token","value":"token::As","parent":{"krate":0,"index":5814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5818},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":133855,"byte_end":133857,"line_start":392,"line_end":392,"column_start":13,"column_end":15},"name":"ty","qualname":"::expr::ExprCast::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5819},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":134096,"byte_end":134107,"line_start":401,"line_end":401,"column_start":16,"column_end":27},"name":"ExprClosure","qualname":"::expr::ExprClosure","value":"ExprClosure {  }","parent":null,"children":[{"krate":0,"index":5820}],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5823},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":134691,"byte_end":134703,"line_start":419,"line_end":419,"column_start":16,"column_end":28},"name":"ExprContinue","qualname":"::expr::ExprContinue","value":"ExprContinue {  }","parent":null,"children":[{"krate":0,"index":5824}],"decl_id":null,"docs":" A `continue`, with an optional label.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5827},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":135133,"byte_end":135142,"line_start":432,"line_end":432,"column_start":16,"column_end":25},"name":"ExprField","qualname":"::expr::ExprField","value":"ExprField { attrs, base, dot_token, member }","parent":null,"children":[{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831}],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5828},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":135157,"byte_end":135162,"line_start":433,"line_end":433,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprField::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5829},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":135192,"byte_end":135196,"line_start":434,"line_end":434,"column_start":13,"column_end":17},"name":"base","qualname":"::expr::ExprField::base","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5830},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":135221,"byte_end":135230,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"name":"dot_token","qualname":"::expr::ExprField::dot_token","value":"token::Dot","parent":{"krate":0,"index":5827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5831},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":135255,"byte_end":135261,"line_start":436,"line_end":436,"column_start":13,"column_end":19},"name":"member","qualname":"::expr::ExprField::member","value":"expr::Member","parent":{"krate":0,"index":5827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5832},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":135498,"byte_end":135509,"line_start":445,"line_end":445,"column_start":16,"column_end":27},"name":"ExprForLoop","qualname":"::expr::ExprForLoop","value":"ExprForLoop {  }","parent":null,"children":[{"krate":0,"index":5833}],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5836},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":136151,"byte_end":136160,"line_start":465,"line_end":465,"column_start":16,"column_end":25},"name":"ExprGroup","qualname":"::expr::ExprGroup","value":"ExprGroup {  }","parent":null,"children":[{"krate":0,"index":5837}],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5840},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":136688,"byte_end":136694,"line_start":481,"line_end":481,"column_start":16,"column_end":22},"name":"ExprIf","qualname":"::expr::ExprIf","value":"ExprIf {  }","parent":null,"children":[{"krate":0,"index":5841}],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5844},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":137181,"byte_end":137190,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"ExprIndex","qualname":"::expr::ExprIndex","value":"ExprIndex { attrs, expr, bracket_token, index }","parent":null,"children":[{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848}],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5845},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":137205,"byte_end":137210,"line_start":497,"line_end":497,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprIndex::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5846},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":137240,"byte_end":137244,"line_start":498,"line_end":498,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprIndex::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5847},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":137269,"byte_end":137282,"line_start":499,"line_end":499,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::expr::ExprIndex::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5848},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":137312,"byte_end":137317,"line_start":500,"line_end":500,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::ExprIndex::index","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5849},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":137554,"byte_end":137561,"line_start":509,"line_end":509,"column_start":16,"column_end":23},"name":"ExprLet","qualname":"::expr::ExprLet","value":"ExprLet {  }","parent":null,"children":[{"krate":0,"index":5850}],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5853},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":138011,"byte_end":138018,"line_start":524,"line_end":524,"column_start":16,"column_end":23},"name":"ExprLit","qualname":"::expr::ExprLit","value":"ExprLit { attrs, lit }","parent":null,"children":[{"krate":0,"index":5854},{"krate":0,"index":5855}],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5854},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":138033,"byte_end":138038,"line_start":525,"line_end":525,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprLit::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5855},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":138068,"byte_end":138071,"line_start":526,"line_end":526,"column_start":13,"column_end":16},"name":"lit","qualname":"::expr::ExprLit::lit","value":"lit::Lit","parent":{"krate":0,"index":5853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5856},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":138302,"byte_end":138310,"line_start":535,"line_end":535,"column_start":16,"column_end":24},"name":"ExprLoop","qualname":"::expr::ExprLoop","value":"ExprLoop {  }","parent":null,"children":[{"krate":0,"index":5857}],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5860},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":138690,"byte_end":138699,"line_start":548,"line_end":548,"column_start":16,"column_end":25},"name":"ExprMacro","qualname":"::expr::ExprMacro","value":"ExprMacro {  }","parent":null,"children":[{"krate":0,"index":5861}],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5864},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":139018,"byte_end":139027,"line_start":559,"line_end":559,"column_start":16,"column_end":25},"name":"ExprMatch","qualname":"::expr::ExprMatch","value":"ExprMatch {  }","parent":null,"children":[{"krate":0,"index":5865}],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5868},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":139441,"byte_end":139455,"line_start":573,"line_end":573,"column_start":16,"column_end":30},"name":"ExprMethodCall","qualname":"::expr::ExprMethodCall","value":"ExprMethodCall {  }","parent":null,"children":[{"krate":0,"index":5869}],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5872},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":139979,"byte_end":139988,"line_start":589,"line_end":589,"column_start":16,"column_end":25},"name":"ExprParen","qualname":"::expr::ExprParen","value":"ExprParen { attrs, paren_token, expr }","parent":null,"children":[{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875}],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5873},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140003,"byte_end":140008,"line_start":590,"line_end":590,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprParen::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5874},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140038,"byte_end":140049,"line_start":591,"line_end":591,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::expr::ExprParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":5872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5875},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140077,"byte_end":140081,"line_start":592,"line_end":592,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprParen::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5872},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5876},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140502,"byte_end":140510,"line_start":605,"line_end":605,"column_start":16,"column_end":24},"name":"ExprPath","qualname":"::expr::ExprPath","value":"ExprPath { attrs, qself, path }","parent":null,"children":[{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879}],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5877},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140525,"byte_end":140530,"line_start":606,"line_end":606,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprPath::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5878},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140560,"byte_end":140565,"line_start":607,"line_end":607,"column_start":13,"column_end":18},"name":"qself","qualname":"::expr::ExprPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":5876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5879},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140594,"byte_end":140598,"line_start":608,"line_end":608,"column_start":13,"column_end":17},"name":"path","qualname":"::expr::ExprPath::path","value":"path::Path","parent":{"krate":0,"index":5876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5880},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":140853,"byte_end":140862,"line_start":617,"line_end":617,"column_start":16,"column_end":25},"name":"ExprRange","qualname":"::expr::ExprRange","value":"ExprRange {  }","parent":null,"children":[{"krate":0,"index":5881}],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5884},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":141242,"byte_end":141255,"line_start":630,"line_end":630,"column_start":16,"column_end":29},"name":"ExprReference","qualname":"::expr::ExprReference","value":"ExprReference {  }","parent":null,"children":[{"krate":0,"index":5885}],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5888},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":141690,"byte_end":141700,"line_start":644,"line_end":644,"column_start":16,"column_end":26},"name":"ExprRepeat","qualname":"::expr::ExprRepeat","value":"ExprRepeat {  }","parent":null,"children":[{"krate":0,"index":5889}],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5892},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":142118,"byte_end":142128,"line_start":658,"line_end":658,"column_start":16,"column_end":26},"name":"ExprReturn","qualname":"::expr::ExprReturn","value":"ExprReturn {  }","parent":null,"children":[{"krate":0,"index":5893}],"decl_id":null,"docs":" A `return`, with an optional value to be returned.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5896},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":142604,"byte_end":142614,"line_start":673,"line_end":673,"column_start":16,"column_end":26},"name":"ExprStruct","qualname":"::expr::ExprStruct","value":"ExprStruct {  }","parent":null,"children":[{"krate":0,"index":5897}],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5900},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":143072,"byte_end":143079,"line_start":688,"line_end":688,"column_start":16,"column_end":23},"name":"ExprTry","qualname":"::expr::ExprTry","value":"ExprTry {  }","parent":null,"children":[{"krate":0,"index":5901}],"decl_id":null,"docs":" A try-expression: `expr?`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5904},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":143407,"byte_end":143419,"line_start":700,"line_end":700,"column_start":16,"column_end":28},"name":"ExprTryBlock","qualname":"::expr::ExprTryBlock","value":"ExprTryBlock {  }","parent":null,"children":[{"krate":0,"index":5905}],"decl_id":null,"docs":" A try block: `try { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5908},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":143749,"byte_end":143758,"line_start":712,"line_end":712,"column_start":16,"column_end":25},"name":"ExprTuple","qualname":"::expr::ExprTuple","value":"ExprTuple {  }","parent":null,"children":[{"krate":0,"index":5909}],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5912},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":144119,"byte_end":144127,"line_start":724,"line_end":724,"column_start":16,"column_end":24},"name":"ExprType","qualname":"::expr::ExprType","value":"ExprType {  }","parent":null,"children":[{"krate":0,"index":5913}],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5916},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":144529,"byte_end":144538,"line_start":738,"line_end":738,"column_start":16,"column_end":25},"name":"ExprUnary","qualname":"::expr::ExprUnary","value":"ExprUnary { attrs, op, expr }","parent":null,"children":[{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5919}],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5917},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":144553,"byte_end":144558,"line_start":739,"line_end":739,"column_start":13,"column_end":18},"name":"attrs","qualname":"::expr::ExprUnary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5918},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":144588,"byte_end":144590,"line_start":740,"line_end":740,"column_start":13,"column_end":15},"name":"op","qualname":"::expr::ExprUnary::op","value":"op::UnOp","parent":{"krate":0,"index":5916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5919},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":144610,"byte_end":144614,"line_start":741,"line_end":741,"column_start":13,"column_end":17},"name":"expr","qualname":"::expr::ExprUnary::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":5916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5920},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":144850,"byte_end":144860,"line_start":750,"line_end":750,"column_start":16,"column_end":26},"name":"ExprUnsafe","qualname":"::expr::ExprUnsafe","value":"ExprUnsafe {  }","parent":null,"children":[{"krate":0,"index":5921}],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":145196,"byte_end":145205,"line_start":762,"line_end":762,"column_start":16,"column_end":25},"name":"ExprWhile","qualname":"::expr::ExprWhile","value":"ExprWhile {  }","parent":null,"children":[{"krate":0,"index":5925}],"decl_id":null,"docs":" A while loop: `while expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5928},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":145599,"byte_end":145608,"line_start":776,"line_end":776,"column_start":16,"column_end":25},"name":"ExprYield","qualname":"::expr::ExprYield","value":"ExprYield {  }","parent":null,"children":[{"krate":0,"index":5929}],"decl_id":null,"docs":" A yield expression: `yield expr`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/macros.rs","byte_start":32694,"byte_end":32723,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5933},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148732,"byte_end":148737,"line_start":853,"line_end":853,"column_start":9,"column_end":14},"name":"Named","qualname":"::expr::Member::Named","value":"Member::Named(Ident)","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" A named field like `self.x`.\n","sig":null,"attributes":[{"value":"/ A named field like `self.x`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148691,"byte_end":148723,"line_start":852,"line_end":852,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5935},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148738,"byte_end":148743,"line_start":853,"line_end":853,"column_start":15,"column_end":20},"name":"0","qualname":"::expr::Member::Named::0","value":"proc_macro2::Ident","parent":{"krate":0,"index":5933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5936},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148798,"byte_end":148805,"line_start":855,"line_end":855,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::expr::Member::Unnamed","value":"Member::Unnamed(Index)","parent":{"krate":0,"index":5932},"children":[],"decl_id":null,"docs":" An unnamed field like `self.0`.\n","sig":null,"attributes":[{"value":"/ An unnamed field like `self.0`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148754,"byte_end":148789,"line_start":854,"line_end":854,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5938},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148806,"byte_end":148811,"line_start":855,"line_end":855,"column_start":17,"column_end":22},"name":"0","qualname":"::expr::Member::Unnamed::0","value":"expr::Index","parent":{"krate":0,"index":5936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5932},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148674,"byte_end":148680,"line_start":851,"line_end":851,"column_start":14,"column_end":20},"name":"Member","qualname":"::expr::Member","value":"enum Member { Named(Ident), Unnamed(Index), }","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5936}],"decl_id":null,"docs":" A struct or tuple struct field accessed in a struct literal or field\n expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148860,"byte_end":148864,"line_start":860,"line_end":860,"column_start":8,"column_end":12},"name":"from","qualname":"<Member as std::convert::From>::from","value":"fn from(Ident) -> Member","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148966,"byte_end":148970,"line_start":866,"line_end":866,"column_start":8,"column_end":12},"name":"from","qualname":"<Member as std::convert::From>::from","value":"fn from(Index) -> Member","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149074,"byte_end":149078,"line_start":872,"line_end":872,"column_start":8,"column_end":12},"name":"from","qualname":"<Member as std::convert::From>::from","value":"fn from(usize) -> Member","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149216,"byte_end":149218,"line_start":880,"line_end":880,"column_start":8,"column_end":10},"name":"eq","qualname":"<Member as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149505,"byte_end":149509,"line_start":890,"line_end":890,"column_start":8,"column_end":12},"name":"hash","qualname":"<Member as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10331},"children":[],"decl_id":{"krate":2,"index":10332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149749,"byte_end":149752,"line_start":900,"line_end":900,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Member as quote::IdentFragment>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":23,"index":63},"children":[],"decl_id":{"krate":23,"index":64},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149983,"byte_end":149987,"line_start":907,"line_end":907,"column_start":8,"column_end":12},"name":"span","qualname":"<Member as quote::IdentFragment>::span","value":"fn span(&Self) -> Option<Span>","parent":{"krate":23,"index":63},"children":[],"decl_id":{"krate":23,"index":65},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5939},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150419,"byte_end":150424,"line_start":921,"line_end":921,"column_start":16,"column_end":21},"name":"Index","qualname":"::expr::Index","value":"Index { index, span }","parent":null,"children":[{"krate":0,"index":5940},{"krate":0,"index":5941}],"decl_id":null,"docs":" The index of an unnamed tuple struct field.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5940},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150439,"byte_end":150444,"line_start":922,"line_end":922,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::Index::index","value":"u32","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5941},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150463,"byte_end":150467,"line_start":923,"line_end":923,"column_start":13,"column_end":17},"name":"span","qualname":"::expr::Index::span","value":"proc_macro2::Span","parent":{"krate":0,"index":5939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150520,"byte_end":150524,"line_start":928,"line_end":928,"column_start":8,"column_end":12},"name":"from","qualname":"<Index as std::convert::From>::from","value":"fn from(usize) -> Index","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150763,"byte_end":150765,"line_start":940,"line_end":940,"column_start":8,"column_end":10},"name":"eq","qualname":"<Index as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150869,"byte_end":150873,"line_start":946,"line_end":946,"column_start":8,"column_end":12},"name":"hash","qualname":"<Index as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10331},"children":[],"decl_id":{"krate":2,"index":10332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":151017,"byte_end":151020,"line_start":953,"line_end":953,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Index as quote::IdentFragment>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":23,"index":63},"children":[],"decl_id":{"krate":23,"index":64},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":151136,"byte_end":151140,"line_start":957,"line_end":957,"column_start":8,"column_end":12},"name":"span","qualname":"<Index as quote::IdentFragment>::span","value":"fn span(&Self) -> Option<Span>","parent":{"krate":23,"index":63},"children":[],"decl_id":{"krate":23,"index":65},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":157074,"byte_end":157079,"line_start":1161,"line_end":1161,"column_start":12,"column_end":17},"name":"parse","qualname":"<Expr as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":190036,"byte_end":190041,"line_start":2065,"line_end":2065,"column_start":12,"column_end":17},"name":"parse","qualname":"<ExprLit as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":215038,"byte_end":215043,"line_start":2820,"line_end":2820,"column_start":12,"column_end":17},"name":"parse","qualname":"<ExprPath as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":215488,"byte_end":215493,"line_start":2834,"line_end":2834,"column_start":12,"column_end":17},"name":"parse","qualname":"<Member as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":217147,"byte_end":217152,"line_start":2881,"line_end":2881,"column_start":12,"column_end":17},"name":"parse","qualname":"<Index as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":221540,"byte_end":221549,"line_start":3010,"line_end":3010,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprCall as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":223895,"byte_end":223904,"line_start":3074,"line_end":3074,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprBinary as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224237,"byte_end":224246,"line_start":3084,"line_end":3084,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprUnary as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224535,"byte_end":224544,"line_start":3093,"line_end":3093,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprLit as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224794,"byte_end":224803,"line_start":3101,"line_end":3101,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprCast as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":233609,"byte_end":233618,"line_start":3340,"line_end":3340,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprField as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":233956,"byte_end":233965,"line_start":3350,"line_end":3350,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Member as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":234287,"byte_end":234296,"line_start":3360,"line_end":3360,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Index as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":234594,"byte_end":234603,"line_start":3369,"line_end":3369,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprIndex as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":235709,"byte_end":235718,"line_start":3402,"line_end":3402,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprPath as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":239277,"byte_end":239286,"line_start":3503,"line_end":3503,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ExprParen as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5960},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":241724,"byte_end":241732,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Generics","qualname":"::generics::Generics","value":"Generics { lt_token, params, gt_token, where_clause }","parent":null,"children":[{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964}],"decl_id":null,"docs":" Lifetimes and type parameters attached to a declaration of a function,\n enum, trait, etc.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5961},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":241747,"byte_end":241755,"line_start":16,"line_end":16,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::Generics::lt_token","value":"std::option::Option<token::Lt>","parent":{"krate":0,"index":5960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5962},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":241788,"byte_end":241794,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"name":"params","qualname":"::generics::Generics::params","value":"punctuated::Punctuated<generics::GenericParam, token::Comma>","parent":{"krate":0,"index":5960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5963},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":241845,"byte_end":241853,"line_start":18,"line_end":18,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::Generics::gt_token","value":"std::option::Option<token::Gt>","parent":{"krate":0,"index":5960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5964},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":241886,"byte_end":241898,"line_start":19,"line_end":19,"column_start":13,"column_end":25},"name":"where_clause","qualname":"::generics::Generics::where_clause","value":"std::option::Option<generics::WhereClause>","parent":{"krate":0,"index":5960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5966},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242499,"byte_end":242503,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"Type","qualname":"::generics::GenericParam::Type","value":"GenericParam::Type(TypeParam)","parent":{"krate":0,"index":5965},"children":[],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.\n","sig":null,"attributes":[{"value":"/ A generic type parameter: `T: Into<String>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242442,"byte_end":242490,"line_start":37,"line_end":37,"column_start":9,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5968},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242504,"byte_end":242513,"line_start":38,"line_end":38,"column_start":14,"column_end":23},"name":"0","qualname":"::generics::GenericParam::Type::0","value":"generics::TypeParam","parent":{"krate":0,"index":5966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5969},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242580,"byte_end":242588,"line_start":41,"line_end":41,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::generics::GenericParam::Lifetime","value":"GenericParam::Lifetime(LifetimeDef)","parent":{"krate":0,"index":5965},"children":[],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.\n","sig":null,"attributes":[{"value":"/ A lifetime definition: `'a: 'b + 'c + 'd`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242525,"byte_end":242571,"line_start":40,"line_end":40,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5971},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242589,"byte_end":242600,"line_start":41,"line_end":41,"column_start":18,"column_end":29},"name":"0","qualname":"::generics::GenericParam::Lifetime::0","value":"generics::LifetimeDef","parent":{"krate":0,"index":5969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5972},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242674,"byte_end":242679,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"Const","qualname":"::generics::GenericParam::Const","value":"GenericParam::Const(ConstParam)","parent":{"krate":0,"index":5965},"children":[],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.\n","sig":null,"attributes":[{"value":"/ A const generic parameter: `const LENGTH: usize`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242612,"byte_end":242665,"line_start":43,"line_end":43,"column_start":9,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5974},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242680,"byte_end":242690,"line_start":44,"line_end":44,"column_start":15,"column_end":25},"name":"0","qualname":"::generics::GenericParam::Const::0","value":"generics::ConstParam","parent":{"krate":0,"index":5972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5965},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242419,"byte_end":242431,"line_start":36,"line_end":36,"column_start":14,"column_end":26},"name":"GenericParam","qualname":"::generics::GenericParam","value":"enum GenericParam {\n    Type(TypeParam),\n    Lifetime(LifetimeDef),\n    Const(ConstParam),\n}","parent":null,"children":[{"krate":0,"index":5966},{"krate":0,"index":5969},{"krate":0,"index":5972}],"decl_id":null,"docs":" A generic type parameter, lifetime, or const generic: `T: Into<String>`,\n `'a: 'b`, `const LEN: usize`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5983},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242973,"byte_end":242982,"line_start":54,"line_end":54,"column_start":16,"column_end":25},"name":"TypeParam","qualname":"::generics::TypeParam","value":"TypeParam { attrs, ident, colon_token, bounds, eq_token, default }","parent":null,"children":[{"krate":0,"index":5984},{"krate":0,"index":5985},{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989}],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5984},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":242997,"byte_end":243002,"line_start":55,"line_end":55,"column_start":13,"column_end":18},"name":"attrs","qualname":"::generics::TypeParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5985},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243032,"byte_end":243037,"line_start":56,"line_end":56,"column_start":13,"column_end":18},"name":"ident","qualname":"::generics::TypeParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5986},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243058,"byte_end":243069,"line_start":57,"line_end":57,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::TypeParam::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5987},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243102,"byte_end":243108,"line_start":58,"line_end":58,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::TypeParam::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5988},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243161,"byte_end":243169,"line_start":59,"line_end":59,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::generics::TypeParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5989},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243202,"byte_end":243209,"line_start":60,"line_end":60,"column_start":13,"column_end":20},"name":"default","qualname":"::generics::TypeParam::default","value":"std::option::Option<ty::Type>","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5990},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243503,"byte_end":243514,"line_start":70,"line_end":70,"column_start":16,"column_end":27},"name":"LifetimeDef","qualname":"::generics::LifetimeDef","value":"LifetimeDef { attrs, lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994}],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5991},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243529,"byte_end":243534,"line_start":71,"line_end":71,"column_start":13,"column_end":18},"name":"attrs","qualname":"::generics::LifetimeDef::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5992},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243564,"byte_end":243572,"line_start":72,"line_end":72,"column_start":13,"column_end":21},"name":"lifetime","qualname":"::generics::LifetimeDef::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5993},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243596,"byte_end":243607,"line_start":73,"line_end":73,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::LifetimeDef::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5994},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243640,"byte_end":243646,"line_start":74,"line_end":74,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::LifetimeDef::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":5990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5995},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243966,"byte_end":243976,"line_start":84,"line_end":84,"column_start":16,"column_end":26},"name":"ConstParam","qualname":"::generics::ConstParam","value":"ConstParam { attrs, const_token, ident, colon_token, ty, eq_token, default }","parent":null,"children":[{"krate":0,"index":5996},{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":5999},{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6002}],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5996},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":243991,"byte_end":243996,"line_start":85,"line_end":85,"column_start":13,"column_end":18},"name":"attrs","qualname":"::generics::ConstParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5997},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244026,"byte_end":244037,"line_start":86,"line_end":86,"column_start":13,"column_end":24},"name":"const_token","qualname":"::generics::ConstParam::const_token","value":"token::Const","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5998},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244066,"byte_end":244071,"line_start":87,"line_end":87,"column_start":13,"column_end":18},"name":"ident","qualname":"::generics::ConstParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5999},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244092,"byte_end":244103,"line_start":88,"line_end":88,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::ConstParam::colon_token","value":"token::Colon","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6000},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244128,"byte_end":244130,"line_start":89,"line_end":89,"column_start":13,"column_end":15},"name":"ty","qualname":"::generics::ConstParam::ty","value":"ty::Type","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6001},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244150,"byte_end":244158,"line_start":90,"line_end":90,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::generics::ConstParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6002},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244191,"byte_end":244198,"line_start":91,"line_end":91,"column_start":13,"column_end":20},"name":"default","qualname":"::generics::ConstParam::default","value":"std::option::Option<expr::Expr>","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244258,"byte_end":244265,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"default","qualname":"<Generics as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244790,"byte_end":244801,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"type_params","qualname":"<Generics>::type_params","value":"fn type_params(&Self) -> TypeParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244463,"byte_end":244477,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244482,"byte_end":244491,"line_start":108,"line_end":108,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244496,"byte_end":244560,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244565,"byte_end":244605,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244610,"byte_end":244681,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244686,"byte_end":244727,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244732,"byte_end":244778,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245206,"byte_end":245221,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"type_params_mut","qualname":"<Generics>::type_params_mut","value":"fn type_params_mut(&mut Self) -> TypeParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244875,"byte_end":244889,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244894,"byte_end":244903,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244908,"byte_end":244976,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244981,"byte_end":245021,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245026,"byte_end":245097,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245102,"byte_end":245143,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245148,"byte_end":245194,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245644,"byte_end":245653,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"lifetimes","qualname":"<Generics>::lifetimes","value":"fn lifetimes(&Self) -> Lifetimes","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245309,"byte_end":245323,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245328,"byte_end":245337,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245342,"byte_end":245406,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245411,"byte_end":245453,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245458,"byte_end":245531,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245536,"byte_end":245577,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245582,"byte_end":245632,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246064,"byte_end":246077,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"lifetimes_mut","qualname":"<Generics>::lifetimes_mut","value":"fn lifetimes_mut(&mut Self) -> LifetimesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245725,"byte_end":245739,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245744,"byte_end":245753,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245758,"byte_end":245826,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245831,"byte_end":245873,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245878,"byte_end":245951,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":245956,"byte_end":245997,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246002,"byte_end":246052,"line_start":146,"line_end":146,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246496,"byte_end":246508,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"const_params","qualname":"<Generics>::const_params","value":"fn const_params(&Self) -> ConstParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246163,"byte_end":246177,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246182,"byte_end":246191,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246196,"byte_end":246260,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246265,"byte_end":246306,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246311,"byte_end":246383,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246388,"byte_end":246429,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246434,"byte_end":246484,"line_start":157,"line_end":157,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246921,"byte_end":246937,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"const_params_mut","qualname":"<Generics>::const_params_mut","value":"fn const_params_mut(&mut Self) -> ConstParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246584,"byte_end":246598,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246603,"byte_end":246612,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246617,"byte_end":246685,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246690,"byte_end":246731,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246736,"byte_end":246808,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246813,"byte_end":246854,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":246859,"byte_end":246909,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247115,"byte_end":247132,"line_start":174,"line_end":174,"column_start":12,"column_end":29},"name":"make_where_clause","qualname":"<Generics>::make_where_clause","value":"fn make_where_clause(&mut Self) -> &mut WhereClause","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty `where`-clause if there is not one present already.\n","sig":null,"attributes":[{"value":"/ Initializes an empty `where`-clause if there is not one present already.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247027,"byte_end":247103,"line_start":173,"line_end":173,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":916},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247355,"byte_end":247365,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"TypeParams","qualname":"::generics::TypeParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247474,"byte_end":247478,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"next","qualname":"<TypeParams as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247786,"byte_end":247799,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"TypeParamsMut","qualname":"::generics::TypeParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247918,"byte_end":247922,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"next","qualname":"<TypeParamsMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":932},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248230,"byte_end":248239,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"Lifetimes","qualname":"::generics::Lifetimes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248349,"byte_end":248353,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"next","qualname":"<Lifetimes as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":940},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248661,"byte_end":248673,"line_start":236,"line_end":236,"column_start":12,"column_end":24},"name":"LifetimesMut","qualname":"::generics::LifetimesMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248793,"byte_end":248797,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"next","qualname":"<LifetimesMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249105,"byte_end":249116,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"ConstParams","qualname":"::generics::ConstParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249227,"byte_end":249231,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"next","qualname":"<ConstParams as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":956},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249542,"byte_end":249556,"line_start":272,"line_end":272,"column_start":12,"column_end":26},"name":"ConstParamsMut","qualname":"::generics::ConstParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249677,"byte_end":249681,"line_start":277,"line_end":277,"column_start":8,"column_end":12},"name":"next","qualname":"<ConstParamsMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":964},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250304,"byte_end":250316,"line_start":299,"line_end":299,"column_start":12,"column_end":24},"name":"ImplGenerics","qualname":"::generics::ImplGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.","sig":null,"attributes":[{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249981,"byte_end":250024,"line_start":290,"line_end":290,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250025,"byte_end":250028,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ *This type is available only if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250029,"byte_end":250109,"line_start":292,"line_end":292,"column_start":1,"column_end":81}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250110,"byte_end":250152,"line_start":293,"line_end":293,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250153,"byte_end":250181,"line_start":294,"line_end":294,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250660,"byte_end":250672,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"TypeGenerics","qualname":"::generics::TypeGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.","sig":null,"attributes":[{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250337,"byte_end":250380,"line_start":301,"line_end":301,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250381,"byte_end":250384,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ *This type is available only if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250385,"byte_end":250465,"line_start":303,"line_end":303,"column_start":1,"column_end":81}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250466,"byte_end":250508,"line_start":304,"line_end":304,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250509,"byte_end":250537,"line_start":305,"line_end":305,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251018,"byte_end":251027,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"Turbofish","qualname":"::generics::Turbofish","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `TypeGenerics::as_turbofish`.","sig":null,"attributes":[{"value":"/ Returned by `TypeGenerics::as_turbofish`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250693,"byte_end":250738,"line_start":312,"line_end":312,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250739,"byte_end":250742,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ *This type is available only if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250743,"byte_end":250823,"line_start":314,"line_end":314,"column_start":1,"column_end":81}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250824,"byte_end":250866,"line_start":315,"line_end":315,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":250867,"byte_end":250895,"line_start":316,"line_end":316,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251957,"byte_end":251971,"line_start":350,"line_end":350,"column_start":12,"column_end":26},"name":"split_for_impl","qualname":"<Generics>::split_for_impl","value":"fn split_for_impl(&Self) -> (ImplGenerics, TypeGenerics, Option<&WhereClause>)","parent":null,"children":[],"decl_id":null,"docs":" Split a type's generics into the pieces required for impl'ing a trait\n for that type.","sig":null,"attributes":[{"value":"/ Split a type's generics into the pieces required for impl'ing a trait","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251097,"byte_end":251170,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ for that type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251175,"byte_end":251193,"line_start":326,"line_end":326,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251198,"byte_end":251201,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251206,"byte_end":251213,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # use proc_macro2::{Span, Ident};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251218,"byte_end":251255,"line_start":329,"line_end":329,"column_start":5,"column_end":42}},{"value":"/ # use quote::quote;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251260,"byte_end":251283,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251288,"byte_end":251293,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/ # let generics: syn::Generics = Default::default();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251298,"byte_end":251353,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ # let name = Ident::new(\"MyType\", Span::call_site());","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251358,"byte_end":251415,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251420,"byte_end":251425,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ let (impl_generics, ty_generics, where_clause) = generics.split_for_impl();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251430,"byte_end":251509,"line_start":335,"line_end":335,"column_start":5,"column_end":84}},{"value":"/ quote! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251514,"byte_end":251526,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/     impl #impl_generics MyTrait for #name #ty_generics #where_clause {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251531,"byte_end":251605,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/         // ...","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251610,"byte_end":251628,"line_start":338,"line_end":338,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251633,"byte_end":251642,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251647,"byte_end":251652,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251657,"byte_end":251664,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251669,"byte_end":251676,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251681,"byte_end":251684,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ *This method is available only if Syn is built with the `\"derive\"` or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251689,"byte_end":251762,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ `\"full\"` feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251767,"byte_end":251818,"line_start":345,"line_end":345,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254027,"byte_end":254039,"line_start":416,"line_end":416,"column_start":12,"column_end":24},"name":"as_turbofish","qualname":"<TypeGenerics>::as_turbofish","value":"fn as_turbofish(&Self) -> Turbofish","parent":null,"children":[],"decl_id":null,"docs":" Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","sig":null,"attributes":[{"value":"/ Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":253799,"byte_end":253873,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":253878,"byte_end":253881,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ *This method is available only if Syn is built with the `\"derive\"` or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":253886,"byte_end":253959,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ `\"full\"` feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":253964,"byte_end":254015,"line_start":415,"line_end":415,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6012},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254368,"byte_end":254382,"line_start":427,"line_end":427,"column_start":16,"column_end":30},"name":"BoundLifetimes","qualname":"::generics::BoundLifetimes","value":"BoundLifetimes { for_token, lt_token, lifetimes, gt_token }","parent":null,"children":[{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":6016}],"decl_id":null,"docs":" A set of bound lifetimes: `for<'a, 'b, 'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6013},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254397,"byte_end":254406,"line_start":428,"line_end":428,"column_start":13,"column_end":22},"name":"for_token","qualname":"::generics::BoundLifetimes::for_token","value":"token::For","parent":{"krate":0,"index":6012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6014},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254433,"byte_end":254441,"line_start":429,"line_end":429,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::BoundLifetimes::lt_token","value":"token::Lt","parent":{"krate":0,"index":6012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6015},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254466,"byte_end":254475,"line_start":430,"line_end":430,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::BoundLifetimes::lifetimes","value":"punctuated::Punctuated<generics::LifetimeDef, token::Comma>","parent":{"krate":0,"index":6012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6016},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254525,"byte_end":254533,"line_start":431,"line_end":431,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::BoundLifetimes::gt_token","value":"token::Gt","parent":{"krate":0,"index":6012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254596,"byte_end":254603,"line_start":436,"line_end":436,"column_start":8,"column_end":15},"name":"default","qualname":"<BoundLifetimes as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254859,"byte_end":254862,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"new","qualname":"<LifetimeDef>::new","value":"fn new(Lifetime) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255097,"byte_end":255101,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"from","qualname":"<TypeParam as std::convert::From>::from","value":"fn from(Ident) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6018},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255651,"byte_end":255656,"line_start":477,"line_end":477,"column_start":9,"column_end":14},"name":"Trait","qualname":"::generics::TypeParamBound::Trait","value":"TypeParamBound::Trait(TraitBound)","parent":{"krate":0,"index":6017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6020},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255657,"byte_end":255667,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"name":"0","qualname":"::generics::TypeParamBound::Trait::0","value":"generics::TraitBound","parent":{"krate":0,"index":6018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6021},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255678,"byte_end":255686,"line_start":478,"line_end":478,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::generics::TypeParamBound::Lifetime","value":"TypeParamBound::Lifetime(Lifetime)","parent":{"krate":0,"index":6017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6023},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255687,"byte_end":255695,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"name":"0","qualname":"::generics::TypeParamBound::Lifetime::0","value":"lifetime::Lifetime","parent":{"krate":0,"index":6021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6017},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255626,"byte_end":255640,"line_start":476,"line_end":476,"column_start":14,"column_end":28},"name":"TypeParamBound","qualname":"::generics::TypeParamBound","value":"enum TypeParamBound { Trait(TraitBound), Lifetime(Lifetime), }","parent":null,"children":[{"krate":0,"index":6018},{"krate":0,"index":6021}],"decl_id":null,"docs":" A trait or lifetime used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6030},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255978,"byte_end":255988,"line_start":488,"line_end":488,"column_start":16,"column_end":26},"name":"TraitBound","qualname":"::generics::TraitBound","value":"TraitBound { paren_token, modifier, lifetimes, path }","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034}],"decl_id":null,"docs":" A trait used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6031},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256003,"byte_end":256014,"line_start":489,"line_end":489,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::generics::TraitBound::paren_token","value":"std::option::Option<token::Paren>","parent":{"krate":0,"index":6030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6032},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256050,"byte_end":256058,"line_start":490,"line_end":490,"column_start":13,"column_end":21},"name":"modifier","qualname":"::generics::TraitBound::modifier","value":"generics::TraitBoundModifier","parent":{"krate":0,"index":6030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6033},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256142,"byte_end":256151,"line_start":492,"line_end":492,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::TraitBound::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":6030},"children":[],"decl_id":null,"docs":" The `for<'a>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `for<'a>` in `for<'a> Foo<&'a T>`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256088,"byte_end":256129,"line_start":491,"line_end":491,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6034},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256242,"byte_end":256246,"line_start":494,"line_end":494,"column_start":13,"column_end":17},"name":"path","qualname":"::generics::TraitBound::path","value":"path::Path","parent":{"krate":0,"index":6030},"children":[],"decl_id":null,"docs":" The `Foo<&'a T>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `Foo<&'a T>` in `for<'a> Foo<&'a T>`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256185,"byte_end":256229,"line_start":493,"line_end":493,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6036},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256596,"byte_end":256600,"line_start":506,"line_end":506,"column_start":9,"column_end":13},"name":"None","qualname":"::generics::TraitBoundModifier::None","value":"TraitBoundModifier::None","parent":{"krate":0,"index":6035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6038},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256610,"byte_end":256615,"line_start":507,"line_end":507,"column_start":9,"column_end":14},"name":"Maybe","qualname":"::generics::TraitBoundModifier::Maybe","value":"TraitBoundModifier::Maybe(crate::token::Question)","parent":{"krate":0,"index":6035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6040},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256616,"byte_end":256625,"line_start":507,"line_end":507,"column_start":15,"column_end":24},"name":"0","qualname":"::generics::TraitBoundModifier::Maybe::0","value":"token::Question","parent":{"krate":0,"index":6038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6035},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256567,"byte_end":256585,"line_start":505,"line_end":505,"column_start":14,"column_end":32},"name":"TraitBoundModifier","qualname":"::generics::TraitBoundModifier","value":"enum TraitBoundModifier { None, Maybe(crate::token::Question), }","parent":null,"children":[{"krate":0,"index":6036},{"krate":0,"index":6038}],"decl_id":null,"docs":" A modifier on a trait bound, currently only used for the `?` in\n `?Sized`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6041},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256946,"byte_end":256957,"line_start":518,"line_end":518,"column_start":16,"column_end":27},"name":"WhereClause","qualname":"::generics::WhereClause","value":"WhereClause { where_token, predicates }","parent":null,"children":[{"krate":0,"index":6042},{"krate":0,"index":6043}],"decl_id":null,"docs":" A `where` clause in a definition: `where T: Deserialize<'de>, D:\n 'static`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6042},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":256972,"byte_end":256983,"line_start":519,"line_end":519,"column_start":13,"column_end":24},"name":"where_token","qualname":"::generics::WhereClause::where_token","value":"token::Where","parent":{"krate":0,"index":6041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6043},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257012,"byte_end":257022,"line_start":520,"line_end":520,"column_start":13,"column_end":23},"name":"predicates","qualname":"::generics::WhereClause::predicates","value":"punctuated::Punctuated<generics::WherePredicate, token::Comma>","parent":{"krate":0,"index":6041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6045},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257618,"byte_end":257622,"line_start":538,"line_end":538,"column_start":9,"column_end":13},"name":"Type","qualname":"::generics::WherePredicate::Type","value":"WherePredicate::Type(PredicateType)","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.\n","sig":null,"attributes":[{"value":"/ A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257538,"byte_end":257609,"line_start":537,"line_end":537,"column_start":9,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6047},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257623,"byte_end":257636,"line_start":538,"line_end":538,"column_start":14,"column_end":27},"name":"0","qualname":"::generics::WherePredicate::Type::0","value":"generics::PredicateType","parent":{"krate":0,"index":6045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6048},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257717,"byte_end":257725,"line_start":541,"line_end":541,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::generics::WherePredicate::Lifetime","value":"WherePredicate::Lifetime(PredicateLifetime)","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.\n","sig":null,"attributes":[{"value":"/ A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257648,"byte_end":257708,"line_start":540,"line_end":540,"column_start":9,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6050},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257726,"byte_end":257743,"line_start":541,"line_end":541,"column_start":18,"column_end":35},"name":"0","qualname":"::generics::WherePredicate::Lifetime::0","value":"generics::PredicateLifetime","parent":{"krate":0,"index":6048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6051},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257824,"byte_end":257826,"line_start":544,"line_end":544,"column_start":9,"column_end":11},"name":"Eq","qualname":"::generics::WherePredicate::Eq","value":"WherePredicate::Eq(PredicateEq)","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).\n","sig":null,"attributes":[{"value":"/ An equality predicate in a `where` clause (unsupported).","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257755,"byte_end":257815,"line_start":543,"line_end":543,"column_start":9,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6053},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257827,"byte_end":257838,"line_start":544,"line_end":544,"column_start":12,"column_end":23},"name":"0","qualname":"::generics::WherePredicate::Eq::0","value":"generics::PredicateEq","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6044},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":257513,"byte_end":257527,"line_start":536,"line_end":536,"column_start":14,"column_end":28},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"enum WherePredicate {\n    Type(PredicateType),\n    Lifetime(PredicateLifetime),\n    Eq(PredicateEq),\n}","parent":null,"children":[{"krate":0,"index":6045},{"krate":0,"index":6048},{"krate":0,"index":6051}],"decl_id":null,"docs":" A single predicate in a `where` clause: `T: Deserialize<'de>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6062},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258144,"byte_end":258157,"line_start":554,"line_end":554,"column_start":16,"column_end":29},"name":"PredicateType","qualname":"::generics::PredicateType","value":"PredicateType { lifetimes, bounded_ty, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":6063},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066}],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6063},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258219,"byte_end":258228,"line_start":556,"line_end":556,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::PredicateType::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":6062},"children":[],"decl_id":null,"docs":" Any lifetimes from a `for` binding\n","sig":null,"attributes":[{"value":"/ Any lifetimes from a `for` binding","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258168,"byte_end":258206,"line_start":555,"line_end":555,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6064},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258301,"byte_end":258311,"line_start":558,"line_end":558,"column_start":13,"column_end":23},"name":"bounded_ty","qualname":"::generics::PredicateType::bounded_ty","value":"ty::Type","parent":{"krate":0,"index":6062},"children":[],"decl_id":null,"docs":" The type being bounded\n","sig":null,"attributes":[{"value":"/ The type being bounded","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258262,"byte_end":258288,"line_start":557,"line_end":557,"column_start":9,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6065},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258331,"byte_end":258342,"line_start":559,"line_end":559,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::PredicateType::colon_token","value":"token::Colon","parent":{"krate":0,"index":6062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6066},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258428,"byte_end":258434,"line_start":561,"line_end":561,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::PredicateType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6062},"children":[],"decl_id":null,"docs":" Trait and lifetime bounds (`Clone+Send+'static`)\n","sig":null,"attributes":[{"value":"/ Trait and lifetime bounds (`Clone+Send+'static`)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258363,"byte_end":258415,"line_start":560,"line_end":560,"column_start":9,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6067},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258767,"byte_end":258784,"line_start":571,"line_end":571,"column_start":16,"column_end":33},"name":"PredicateLifetime","qualname":"::generics::PredicateLifetime","value":"PredicateLifetime { lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070}],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6068},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258799,"byte_end":258807,"line_start":572,"line_end":572,"column_start":13,"column_end":21},"name":"lifetime","qualname":"::generics::PredicateLifetime::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":6067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6069},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258831,"byte_end":258842,"line_start":573,"line_end":573,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::generics::PredicateLifetime::colon_token","value":"token::Colon","parent":{"krate":0,"index":6067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6070},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":258867,"byte_end":258873,"line_start":574,"line_end":574,"column_start":13,"column_end":19},"name":"bounds","qualname":"::generics::PredicateLifetime::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":6067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6071},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259200,"byte_end":259211,"line_start":584,"line_end":584,"column_start":16,"column_end":27},"name":"PredicateEq","qualname":"::generics::PredicateEq","value":"PredicateEq { lhs_ty, eq_token, rhs_ty }","parent":null,"children":[{"krate":0,"index":6072},{"krate":0,"index":6073},{"krate":0,"index":6074}],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6072},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259226,"byte_end":259232,"line_start":585,"line_end":585,"column_start":13,"column_end":19},"name":"lhs_ty","qualname":"::generics::PredicateEq::lhs_ty","value":"ty::Type","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6073},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259252,"byte_end":259260,"line_start":586,"line_end":586,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::generics::PredicateEq::eq_token","value":"token::Eq","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6074},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259285,"byte_end":259291,"line_start":587,"line_end":587,"column_start":13,"column_end":19},"name":"rhs_ty","qualname":"::generics::PredicateEq::rhs_ty","value":"ty::Type","parent":{"krate":0,"index":6071},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259552,"byte_end":259557,"line_start":599,"line_end":599,"column_start":12,"column_end":17},"name":"parse","qualname":"<Generics as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":261739,"byte_end":261744,"line_start":662,"line_end":662,"column_start":12,"column_end":17},"name":"parse","qualname":"<GenericParam as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":262636,"byte_end":262641,"line_start":689,"line_end":689,"column_start":12,"column_end":17},"name":"parse","qualname":"<LifetimeDef as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":264016,"byte_end":264021,"line_start":727,"line_end":727,"column_start":12,"column_end":17},"name":"parse","qualname":"<BoundLifetimes as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":264808,"byte_end":264813,"line_start":749,"line_end":749,"column_start":12,"column_end":17},"name":"parse","qualname":"<Option<BoundLifetimes> as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":265108,"byte_end":265113,"line_start":760,"line_end":760,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeParam as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":267013,"byte_end":267018,"line_start":814,"line_end":814,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeParamBound as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":268476,"byte_end":268481,"line_start":858,"line_end":858,"column_start":12,"column_end":17},"name":"parse","qualname":"<TraitBound as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":270425,"byte_end":270430,"line_start":907,"line_end":907,"column_start":12,"column_end":17},"name":"parse","qualname":"<TraitBoundModifier as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":270765,"byte_end":270770,"line_start":918,"line_end":918,"column_start":12,"column_end":17},"name":"parse","qualname":"<ConstParam as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":271602,"byte_end":271607,"line_start":942,"line_end":942,"column_start":12,"column_end":17},"name":"parse","qualname":"<WhereClause as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":272800,"byte_end":272805,"line_start":973,"line_end":973,"column_start":12,"column_end":17},"name":"parse","qualname":"<Option<WhereClause> as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":273107,"byte_end":273112,"line_start":984,"line_end":984,"column_start":12,"column_end":17},"name":"parse","qualname":"<WherePredicate as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":276094,"byte_end":276103,"line_start":1059,"line_end":1059,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Generics as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":277528,"byte_end":277537,"line_start":1096,"line_end":1096,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ImplGenerics as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":279888,"byte_end":279897,"line_start":1151,"line_end":1151,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeGenerics as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":281849,"byte_end":281858,"line_start":1199,"line_end":1199,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Turbofish as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282190,"byte_end":282199,"line_start":1209,"line_end":1209,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<BoundLifetimes as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282538,"byte_end":282547,"line_start":1219,"line_end":1219,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LifetimeDef as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282970,"byte_end":282979,"line_start":1231,"line_end":1231,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeParam as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":284806,"byte_end":284815,"line_start":1270,"line_end":1270,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TraitBound as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286051,"byte_end":286060,"line_start":1302,"line_end":1302,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TraitBoundModifier as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286371,"byte_end":286380,"line_start":1312,"line_end":1312,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ConstParam as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286940,"byte_end":286949,"line_start":1327,"line_end":1327,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<WhereClause as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287270,"byte_end":287279,"line_start":1337,"line_end":1337,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<PredicateType as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287626,"byte_end":287635,"line_start":1347,"line_end":1347,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<PredicateLifetime as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287928,"byte_end":287937,"line_start":1356,"line_end":1356,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<PredicateEq as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288688,"byte_end":288696,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"Lifetime { apostrophe, ident }","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"decl_id":null,"docs":" A Rust lifetime: `'a`.","sig":null,"attributes":[{"value":"/ A Rust lifetime: `'a`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288293,"byte_end":288319,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288320,"byte_end":288323,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Lifetime names must conform to the following rules:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288324,"byte_end":288379,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288380,"byte_end":288383,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Must start with an apostrophe.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288384,"byte_end":288420,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ - Must not consist of just an apostrophe: `'`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288421,"byte_end":288471,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ - Character after the apostrophe must be `_` or a Unicode code point with","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288472,"byte_end":288549,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   the XID_Start property.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288550,"byte_end":288579,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ - All following characters must be Unicode code points with the XID_Continue","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288580,"byte_end":288660,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   property.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288661,"byte_end":288676,"line_start":18,"line_end":18,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288707,"byte_end":288717,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"apostrophe","qualname":"::lifetime::Lifetime::apostrophe","value":"proc_macro2::Span","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288733,"byte_end":288738,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"ident","qualname":"::lifetime::Lifetime::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289102,"byte_end":289105,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Lifetime>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Panics","sig":null,"attributes":[{"value":"/ # Panics","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288770,"byte_end":288782,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288787,"byte_end":288790,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Panics if the lifetime does not conform to the bulleted rules above.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288795,"byte_end":288867,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288872,"byte_end":288875,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Invocation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288880,"byte_end":288896,"line_start":29,"line_end":29,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288901,"byte_end":288904,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288909,"byte_end":288916,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288921,"byte_end":288949,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ # use syn::Lifetime;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288954,"byte_end":288978,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288983,"byte_end":288988,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ # fn f() -> Lifetime {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288993,"byte_end":289019,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/ Lifetime::new(\"'a\", Span::call_site())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289024,"byte_end":289066,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289071,"byte_end":289078,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289083,"byte_end":289090,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289679,"byte_end":289683,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"span","qualname":"<Lifetime>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289820,"byte_end":289828,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Lifetime>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289965,"byte_end":289968,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Lifetime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290130,"byte_end":290135,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"clone","qualname":"<Lifetime as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290308,"byte_end":290310,"line_start":90,"line_end":90,"column_start":8,"column_end":10},"name":"eq","qualname":"<Lifetime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Lifetime) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290454,"byte_end":290465,"line_start":98,"line_end":98,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Lifetime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Lifetime) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290583,"byte_end":290586,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Lifetime as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Lifetime) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290704,"byte_end":290708,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"hash","qualname":"<Lifetime as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10331},"children":[],"decl_id":{"krate":2,"index":10332},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290852,"byte_end":290860,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"fn Lifetime(lookahead::TokenMarker) -> Lifetime","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290777,"byte_end":290804,"line_start":115,"line_end":115,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290820,"byte_end":290844,"line_start":117,"line_end":117,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":291144,"byte_end":291149,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"parse","qualname":"<Lifetime as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":291640,"byte_end":291649,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Lifetime as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6076},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292592,"byte_end":292595,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"Str","qualname":"::lit::Lit::Str","value":"Lit::Str(LitStr)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.\n","sig":null,"attributes":[{"value":"/ A UTF-8 string literal: `\"foo\"`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292547,"byte_end":292583,"line_start":23,"line_end":23,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6078},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292596,"byte_end":292602,"line_start":24,"line_end":24,"column_start":13,"column_end":19},"name":"0","qualname":"::lit::Lit::Str::0","value":"lit::LitStr","parent":{"krate":0,"index":6076},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6079},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292659,"byte_end":292666,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"ByteStr","qualname":"::lit::Lit::ByteStr","value":"Lit::ByteStr(LitByteStr)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.\n","sig":null,"attributes":[{"value":"/ A byte string literal: `b\"foo\"`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292614,"byte_end":292650,"line_start":26,"line_end":26,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6081},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292667,"byte_end":292677,"line_start":27,"line_end":27,"column_start":17,"column_end":27},"name":"0","qualname":"::lit::Lit::ByteStr::0","value":"lit::LitByteStr","parent":{"krate":0,"index":6079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6082},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292725,"byte_end":292729,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"Byte","qualname":"::lit::Lit::Byte","value":"Lit::Byte(LitByte)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A byte literal: `b'f'`.\n","sig":null,"attributes":[{"value":"/ A byte literal: `b'f'`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292689,"byte_end":292716,"line_start":29,"line_end":29,"column_start":9,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6084},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292730,"byte_end":292737,"line_start":30,"line_end":30,"column_start":14,"column_end":21},"name":"0","qualname":"::lit::Lit::Byte::0","value":"lit::LitByte","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6085},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292789,"byte_end":292793,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"Char","qualname":"::lit::Lit::Char","value":"Lit::Char(LitChar)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A character literal: `'a'`.\n","sig":null,"attributes":[{"value":"/ A character literal: `'a'`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292749,"byte_end":292780,"line_start":32,"line_end":32,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6087},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292794,"byte_end":292801,"line_start":33,"line_end":33,"column_start":14,"column_end":21},"name":"0","qualname":"::lit::Lit::Char::0","value":"lit::LitChar","parent":{"krate":0,"index":6085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6088},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292860,"byte_end":292863,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"Int","qualname":"::lit::Lit::Int","value":"Lit::Int(LitInt)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.\n","sig":null,"attributes":[{"value":"/ An integer literal: `1` or `1u16`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292813,"byte_end":292851,"line_start":35,"line_end":35,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6090},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292864,"byte_end":292870,"line_start":36,"line_end":36,"column_start":13,"column_end":19},"name":"0","qualname":"::lit::Lit::Int::0","value":"lit::LitInt","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6091},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293011,"byte_end":293016,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"name":"Float","qualname":"::lit::Lit::Float","value":"Lit::Float(LitFloat)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[{"value":"/ A floating point literal: `1f64` or `1.0e10f64`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292882,"byte_end":292934,"line_start":38,"line_end":38,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292943,"byte_end":292946,"line_start":39,"line_end":39,"column_start":9,"column_end":12}},{"value":"/ Must be finite. May not be infinite or NaN.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292955,"byte_end":293002,"line_start":40,"line_end":40,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6093},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293017,"byte_end":293025,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"0","qualname":"::lit::Lit::Float::0","value":"lit::LitFloat","parent":{"krate":0,"index":6091},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6094},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293087,"byte_end":293091,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"Bool","qualname":"::lit::Lit::Bool","value":"Lit::Bool(LitBool)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A boolean literal: `true` or `false`.\n","sig":null,"attributes":[{"value":"/ A boolean literal: `true` or `false`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293037,"byte_end":293078,"line_start":43,"line_end":43,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6096},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293092,"byte_end":293099,"line_start":44,"line_end":44,"column_start":14,"column_end":21},"name":"0","qualname":"::lit::Lit::Bool::0","value":"lit::LitBool","parent":{"krate":0,"index":6094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6097},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293167,"byte_end":293175,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::lit::Lit::Verbatim","value":"Lit::Verbatim(Literal)","parent":{"krate":0,"index":6075},"children":[],"decl_id":null,"docs":" A raw token literal not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ A raw token literal not interpreted by Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293111,"byte_end":293158,"line_start":46,"line_end":46,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6099},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293176,"byte_end":293183,"line_start":47,"line_end":47,"column_start":18,"column_end":25},"name":"0","qualname":"::lit::Lit::Verbatim::0","value":"proc_macro2::Literal","parent":{"krate":0,"index":6097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6075},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":292533,"byte_end":292536,"line_start":22,"line_end":22,"column_start":14,"column_end":17},"name":"Lit","qualname":"::lit::Lit","value":"enum Lit {\n    Str(LitStr),\n    ByteStr(LitByteStr),\n    Byte(LitByte),\n    Char(LitChar),\n    Int(LitInt),\n    Float(LitFloat),\n    Bool(LitBool),\n    Verbatim(Literal),\n}","parent":null,"children":[{"krate":0,"index":6076},{"krate":0,"index":6079},{"krate":0,"index":6082},{"krate":0,"index":6085},{"krate":0,"index":6088},{"krate":0,"index":6091},{"krate":0,"index":6094},{"krate":0,"index":6097}],"decl_id":null,"docs":" A Rust literal such as a string or integer or boolean.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6116},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293265,"byte_end":293271,"line_start":53,"line_end":53,"column_start":16,"column_end":22},"name":"LitStr","qualname":"::lit::LitStr","value":"LitStr {  }","parent":null,"children":[{"krate":0,"index":6117}],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6118},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293381,"byte_end":293391,"line_start":60,"line_end":60,"column_start":16,"column_end":26},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"LitByteStr {  }","parent":null,"children":[{"krate":0,"index":6119}],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6120},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293492,"byte_end":293499,"line_start":67,"line_end":67,"column_start":16,"column_end":23},"name":"LitByte","qualname":"::lit::LitByte","value":"LitByte {  }","parent":null,"children":[{"krate":0,"index":6121}],"decl_id":null,"docs":" A byte literal: `b'f'`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6122},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293604,"byte_end":293611,"line_start":74,"line_end":74,"column_start":16,"column_end":23},"name":"LitChar","qualname":"::lit::LitChar","value":"LitChar {  }","parent":null,"children":[{"krate":0,"index":6123}],"decl_id":null,"docs":" A character literal: `'a'`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6124},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":293785,"byte_end":293791,"line_start":86,"line_end":86,"column_start":16,"column_end":22},"name":"LitInt","qualname":"::lit::LitInt","value":"LitInt {  }","parent":null,"children":[{"krate":0,"index":6125}],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6126},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294067,"byte_end":294075,"line_start":101,"line_end":101,"column_start":16,"column_end":24},"name":"LitFloat","qualname":"::lit::LitFloat","value":"LitFloat {  }","parent":null,"children":[{"krate":0,"index":6127}],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6128},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294284,"byte_end":294291,"line_start":114,"line_end":114,"column_start":16,"column_end":23},"name":"LitBool","qualname":"::lit::LitBool","value":"LitBool { value, span }","parent":null,"children":[{"krate":0,"index":6129},{"krate":0,"index":6130}],"decl_id":null,"docs":" A boolean literal: `true` or `false`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6129},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294306,"byte_end":294311,"line_start":115,"line_end":115,"column_start":13,"column_end":18},"name":"value","qualname":"::lit::LitBool::value","value":"bool","parent":{"krate":0,"index":6128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6130},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294331,"byte_end":294335,"line_start":116,"line_end":116,"column_start":13,"column_end":17},"name":"span","qualname":"::lit::LitBool::span","value":"proc_macro2::Span","parent":{"krate":0,"index":6128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294377,"byte_end":294380,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<LitStr>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294662,"byte_end":294667,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"value","qualname":"<LitStr>::value","value":"fn value(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295994,"byte_end":295999,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitStr>::parse","value":"fn parse<T>(&Self) -> Result<T> where T: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parse a syntax tree node from the content of this string literal.","sig":null,"attributes":[{"value":"/ Parse a syntax tree node from the content of this string literal.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294834,"byte_end":294903,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294908,"byte_end":294911,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ All spans in the syntax tree will point to the span of this `LitStr`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294916,"byte_end":294989,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294994,"byte_end":294997,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295002,"byte_end":295015,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295020,"byte_end":295023,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295028,"byte_end":295035,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295040,"byte_end":295066,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/ use syn::{Attribute, Error, Ident, Lit, Meta, MetaNameValue, Path, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295071,"byte_end":295150,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295155,"byte_end":295158,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ // Parses the path from an attribute that looks like:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295163,"byte_end":295220,"line_start":148,"line_end":148,"column_start":5,"column_end":62}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295225,"byte_end":295231,"line_start":149,"line_end":149,"column_start":5,"column_end":11}},{"value":"/ //     #[path = \"a::b::c\"]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295236,"byte_end":295266,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295271,"byte_end":295277,"line_start":151,"line_end":151,"column_start":5,"column_end":11}},{"value":"/ // or returns `None` if the input is some other attribute.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295282,"byte_end":295344,"line_start":152,"line_end":152,"column_start":5,"column_end":67}},{"value":"/ fn get_path(attr: &Attribute) -> Result<Option<Path>> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295349,"byte_end":295408,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/     if !attr.path.is_ident(\"path\") {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295413,"byte_end":295453,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295458,"byte_end":295486,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295491,"byte_end":295500,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295505,"byte_end":295508,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     match attr.parse_meta()? {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295513,"byte_end":295547,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/         Meta::NameValue(MetaNameValue { lit: Lit::Str(lit_str), .. }) => {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295552,"byte_end":295630,"line_start":159,"line_end":159,"column_start":5,"column_end":83}},{"value":"/             lit_str.parse().map(Some)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295635,"byte_end":295676,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295681,"byte_end":295694,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/         _ => {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295699,"byte_end":295717,"line_start":162,"line_end":162,"column_start":5,"column_end":23}},{"value":"/             let message = \"expected #[path = \\\"...\\\"]\";","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295722,"byte_end":295781,"line_start":163,"line_end":163,"column_start":5,"column_end":64}},{"value":"/             Err(Error::new_spanned(attr, message))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295786,"byte_end":295840,"line_start":164,"line_end":164,"column_start":5,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295845,"byte_end":295858,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295863,"byte_end":295872,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295877,"byte_end":295882,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295887,"byte_end":295894,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":295899,"byte_end":295926,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296938,"byte_end":296948,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"parse_with","qualname":"<LitStr>::parse_with","value":"fn parse_with<F>(&Self, F) -> Result<F::Output> where F: Parser","parent":null,"children":[],"decl_id":null,"docs":" Invoke parser on the content of this string literal.","sig":null,"attributes":[{"value":"/ Invoke parser on the content of this string literal.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296077,"byte_end":296133,"line_start":175,"line_end":175,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296138,"byte_end":296141,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ All spans in the syntax tree will point to the span of this `LitStr`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296146,"byte_end":296219,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296224,"byte_end":296227,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296232,"byte_end":296245,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296250,"byte_end":296253,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296258,"byte_end":296265,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296270,"byte_end":296298,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/ # use syn::{LitStr, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296303,"byte_end":296335,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296340,"byte_end":296345,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296350,"byte_end":296381,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/ #     let lit_str = LitStr::new(\"a::b::c\", Span::call_site());","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296386,"byte_end":296452,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296457,"byte_end":296462,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ #     const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296467,"byte_end":296510,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ let lit_str: LitStr = /* ... */;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296515,"byte_end":296551,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/ #     };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296556,"byte_end":296568,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296573,"byte_end":296576,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ // Parse a string literal like \"a::b::c\" into a Path, not allowing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296581,"byte_end":296651,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/ // generic arguments on any of the path segments.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296656,"byte_end":296709,"line_start":193,"line_end":193,"column_start":5,"column_end":58}},{"value":"/ let basic_path = lit_str.parse_with(syn::Path::parse_mod_style)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296714,"byte_end":296783,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296788,"byte_end":296793,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296798,"byte_end":296814,"line_start":196,"line_end":196,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296819,"byte_end":296826,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296831,"byte_end":296838,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":296843,"byte_end":296870,"line_start":199,"line_end":199,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298111,"byte_end":298115,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"span","qualname":"<LitStr>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298182,"byte_end":298190,"line_start":237,"line_end":237,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitStr>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298274,"byte_end":298280,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitStr>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298342,"byte_end":298347,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"token","qualname":"<LitStr>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298438,"byte_end":298441,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByteStr>::new","value":"fn new(&[u8], Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298733,"byte_end":298738,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByteStr>::value","value":"fn value(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298904,"byte_end":298908,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByteStr>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298975,"byte_end":298983,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByteStr>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299067,"byte_end":299073,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitByteStr>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299135,"byte_end":299140,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"token","qualname":"<LitByteStr>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299228,"byte_end":299231,"line_start":286,"line_end":286,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByte>::new","value":"fn new(u8, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299517,"byte_end":299522,"line_start":297,"line_end":297,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByte>::value","value":"fn value(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299679,"byte_end":299683,"line_start":303,"line_end":303,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByte>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299750,"byte_end":299758,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByte>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299842,"byte_end":299848,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitByte>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299910,"byte_end":299915,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"token","qualname":"<LitByte>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300003,"byte_end":300006,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"new","qualname":"<LitChar>::new","value":"fn new(char, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300292,"byte_end":300297,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"value","qualname":"<LitChar>::value","value":"fn value(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300456,"byte_end":300460,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"span","qualname":"<LitChar>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300527,"byte_end":300535,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitChar>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300619,"byte_end":300625,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitChar>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300687,"byte_end":300692,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"token","qualname":"<LitChar>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300779,"byte_end":300782,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"new","qualname":"<LitInt>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301388,"byte_end":301401,"line_start":377,"line_end":377,"column_start":12,"column_end":25},"name":"base10_digits","qualname":"<LitInt>::base10_digits","value":"fn base10_digits(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302149,"byte_end":302161,"line_start":403,"line_end":403,"column_start":12,"column_end":24},"name":"base10_parse","qualname":"<LitInt>::base10_parse","value":"fn base10_parse<N>(&Self) -> Result<N> where N: FromStr, N::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Parses the literal into a selected number type.","sig":null,"attributes":[{"value":"/ Parses the literal into a selected number type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301456,"byte_end":301507,"line_start":381,"line_end":381,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301512,"byte_end":301515,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `lit.base10_digits().parse()` except that the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301520,"byte_end":301591,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"/ resulting errors will be correctly spanned to point to the literal token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301596,"byte_end":301672,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ in the macro input.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301677,"byte_end":301700,"line_start":385,"line_end":385,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301705,"byte_end":301708,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301713,"byte_end":301720,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use syn::LitInt;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301725,"byte_end":301745,"line_start":388,"line_end":388,"column_start":5,"column_end":25}},{"value":"/ use syn::parse::{Parse, ParseStream, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301750,"byte_end":301799,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301804,"byte_end":301807,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ struct Port {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301812,"byte_end":301829,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/     value: u16,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301834,"byte_end":301853,"line_start":392,"line_end":392,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301858,"byte_end":301863,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301868,"byte_end":301871,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ impl Parse for Port {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301876,"byte_end":301901,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301906,"byte_end":301960,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/         let lit: LitInt = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":301965,"byte_end":302010,"line_start":397,"line_end":397,"column_start":5,"column_end":50}},{"value":"/         let value = lit.base10_parse::<u16>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302015,"byte_end":302066,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/         Ok(Port { value })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302071,"byte_end":302101,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302106,"byte_end":302115,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302120,"byte_end":302125,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302130,"byte_end":302137,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302371,"byte_end":302377,"line_start":413,"line_end":413,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitInt>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302439,"byte_end":302443,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"span","qualname":"<LitInt>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302510,"byte_end":302518,"line_start":421,"line_end":421,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitInt>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302602,"byte_end":302607,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"token","qualname":"<LitInt>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302708,"byte_end":302712,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"from","qualname":"<LitInt as std::convert::From>::from","value":"fn from(Literal) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303156,"byte_end":303159,"line_start":448,"line_end":448,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LitInt as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303291,"byte_end":303294,"line_start":454,"line_end":454,"column_start":12,"column_end":15},"name":"new","qualname":"<LitFloat>::new","value":"fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303901,"byte_end":303914,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"base10_digits","qualname":"<LitFloat>::base10_digits","value":"fn base10_digits(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303976,"byte_end":303988,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"base10_parse","qualname":"<LitFloat>::base10_parse","value":"fn base10_parse<N>(&Self) -> Result<N> where N: FromStr, N::Err: Display","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304198,"byte_end":304204,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitFloat>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304266,"byte_end":304270,"line_start":493,"line_end":493,"column_start":12,"column_end":16},"name":"span","qualname":"<LitFloat>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304337,"byte_end":304345,"line_start":497,"line_end":497,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitFloat>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304429,"byte_end":304434,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"name":"token","qualname":"<LitFloat>::token","value":"fn token(&Self) -> Literal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304537,"byte_end":304541,"line_start":507,"line_end":507,"column_start":8,"column_end":12},"name":"from","qualname":"<LitFloat as std::convert::From>::from","value":"fn from(Literal) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304990,"byte_end":304993,"line_start":524,"line_end":524,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LitFloat as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305124,"byte_end":305127,"line_start":530,"line_end":530,"column_start":12,"column_end":15},"name":"new","qualname":"<LitBool>::new","value":"fn new(bool, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305213,"byte_end":305218,"line_start":534,"line_end":534,"column_start":12,"column_end":17},"name":"value","qualname":"<LitBool>::value","value":"fn value(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305273,"byte_end":305277,"line_start":538,"line_end":538,"column_start":12,"column_end":16},"name":"span","qualname":"<LitBool>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305331,"byte_end":305339,"line_start":542,"line_end":542,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitBool>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305409,"byte_end":305414,"line_start":546,"line_end":546,"column_start":12,"column_end":17},"name":"token","qualname":"<LitBool>::token","value":"fn token(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6133},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310016,"byte_end":310022,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"name":"LitStr","qualname":"::lit::LitStr","value":"fn LitStr(lookahead::TokenMarker) -> LitStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309806,"byte_end":309833,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309865,"byte_end":309889,"line_start":696,"line_end":696,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6136},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310043,"byte_end":310053,"line_start":704,"line_end":704,"column_start":19,"column_end":29},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"fn LitByteStr(lookahead::TokenMarker) -> LitByteStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309806,"byte_end":309833,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309865,"byte_end":309889,"line_start":696,"line_end":696,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6139},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310074,"byte_end":310081,"line_start":705,"line_end":705,"column_start":19,"column_end":26},"name":"LitByte","qualname":"::lit::LitByte","value":"fn LitByte(lookahead::TokenMarker) -> LitByte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309806,"byte_end":309833,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309865,"byte_end":309889,"line_start":696,"line_end":696,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6142},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310102,"byte_end":310109,"line_start":706,"line_end":706,"column_start":19,"column_end":26},"name":"LitChar","qualname":"::lit::LitChar","value":"fn LitChar(lookahead::TokenMarker) -> LitChar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309806,"byte_end":309833,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309865,"byte_end":309889,"line_start":696,"line_end":696,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6145},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310130,"byte_end":310136,"line_start":707,"line_end":707,"column_start":19,"column_end":25},"name":"LitInt","qualname":"::lit::LitInt","value":"fn LitInt(lookahead::TokenMarker) -> LitInt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309806,"byte_end":309833,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309865,"byte_end":309889,"line_start":696,"line_end":696,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":6148},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310157,"byte_end":310165,"line_start":708,"line_end":708,"column_start":19,"column_end":27},"name":"LitFloat","qualname":"::lit::LitFloat","value":"fn LitFloat(lookahead::TokenMarker) -> LitFloat","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309806,"byte_end":309833,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":309865,"byte_end":309889,"line_start":696,"line_end":696,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310244,"byte_end":310251,"line_start":713,"line_end":713,"column_start":8,"column_end":15},"name":"LitBool","qualname":"::lit::LitBool","value":"fn LitBool(lookahead::TokenMarker) -> LitBool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310169,"byte_end":310196,"line_start":710,"line_end":710,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310212,"byte_end":310236,"line_start":712,"line_end":712,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6150},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310523,"byte_end":310529,"line_start":722,"line_end":722,"column_start":9,"column_end":15},"name":"Cooked","qualname":"::lit::StrStyle::Cooked","value":"StrStyle::Cooked","parent":{"krate":0,"index":6149},"children":[],"decl_id":null,"docs":" An ordinary string like `\"data\"`.\n","sig":null,"attributes":[{"value":"/ An ordinary string like `\"data\"`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310477,"byte_end":310514,"line_start":721,"line_end":721,"column_start":9,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6152},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310664,"byte_end":310667,"line_start":726,"line_end":726,"column_start":9,"column_end":12},"name":"Raw","qualname":"::lit::StrStyle::Raw","value":"StrStyle::Raw(usize)","parent":{"krate":0,"index":6149},"children":[],"decl_id":null,"docs":" A raw string like `r##\"data\"##`.","sig":null,"attributes":[{"value":"/ A raw string like `r##\"data\"##`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310539,"byte_end":310575,"line_start":723,"line_end":723,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310584,"byte_end":310587,"line_start":724,"line_end":724,"column_start":9,"column_end":12}},{"value":"/ The unsigned integer is the number of `#` symbols used.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310596,"byte_end":310655,"line_start":725,"line_end":725,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":6154},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310668,"byte_end":310673,"line_start":726,"line_end":726,"column_start":13,"column_end":18},"name":"0","qualname":"::lit::StrStyle::Raw::0","value":"usize","parent":{"krate":0,"index":6152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6149},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310448,"byte_end":310456,"line_start":720,"line_end":720,"column_start":14,"column_end":22},"name":"StrStyle","qualname":"::lit::StrStyle","value":"enum StrStyle { Cooked, Raw(usize), }","parent":null,"children":[{"krate":0,"index":6150},{"krate":0,"index":6152}],"decl_id":null,"docs":" The style of a string literal, either plain quoted or a raw string like\n `r##\"data\"##`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310760,"byte_end":310763,"line_start":733,"line_end":733,"column_start":8,"column_end":11},"name":"Lit","qualname":"::lit::Lit","value":"fn Lit(lookahead::TokenMarker) -> Lit","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310685,"byte_end":310712,"line_start":730,"line_end":730,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":310728,"byte_end":310752,"line_start":732,"line_end":732,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":311096,"byte_end":311101,"line_start":746,"line_end":746,"column_start":12,"column_end":17},"name":"parse","qualname":"<Lit as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":313469,"byte_end":313474,"line_start":818,"line_end":818,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitStr as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":313825,"byte_end":313830,"line_start":829,"line_end":829,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitByteStr as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314187,"byte_end":314192,"line_start":840,"line_end":840,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitByte as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314539,"byte_end":314544,"line_start":851,"line_end":851,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitChar as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314895,"byte_end":314900,"line_start":862,"line_end":862,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitInt as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":315250,"byte_end":315255,"line_start":873,"line_end":873,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitFloat as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":315613,"byte_end":315618,"line_start":884,"line_end":884,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitBool as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316113,"byte_end":316122,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitStr as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316325,"byte_end":316334,"line_start":909,"line_end":909,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitByteStr as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316534,"byte_end":316543,"line_start":916,"line_end":916,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitByte as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316743,"byte_end":316752,"line_start":923,"line_end":923,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitChar as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316951,"byte_end":316960,"line_start":930,"line_end":930,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitInt as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317161,"byte_end":317170,"line_start":937,"line_end":937,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitFloat as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317370,"byte_end":317379,"line_start":944,"line_end":944,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<LitBool as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317688,"byte_end":317691,"line_start":958,"line_end":958,"column_start":16,"column_end":19},"name":"new","qualname":"<Lit>::new","value":"fn new(Literal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret a Syn literal from a proc-macro2 literal.\n","sig":null,"attributes":[{"value":"/ Interpret a Syn literal from a proc-macro2 literal.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317617,"byte_end":317672,"line_start":957,"line_end":957,"column_start":9,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":320192,"byte_end":320198,"line_start":1023,"line_end":1023,"column_start":16,"column_end":22},"name":"suffix","qualname":"<Lit>::suffix","value":"fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":320626,"byte_end":320630,"line_start":1035,"line_end":1035,"column_start":16,"column_end":20},"name":"span","qualname":"<Lit>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":321085,"byte_end":321093,"line_start":1048,"line_end":1048,"column_start":16,"column_end":24},"name":"set_span","qualname":"<Lit>::set_span","value":"fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6155},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340304,"byte_end":340309,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Macro","qualname":"::mac::Macro","value":"Macro { path, bang_token, delimiter, tokens }","parent":null,"children":[{"krate":0,"index":6156},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159}],"decl_id":null,"docs":" A macro invocation: `println!(\"{}\", mac)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6156},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340324,"byte_end":340328,"line_start":17,"line_end":17,"column_start":13,"column_end":17},"name":"path","qualname":"::mac::Macro::path","value":"path::Path","parent":{"krate":0,"index":6155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6157},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340348,"byte_end":340358,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::mac::Macro::bang_token","value":"token::Bang","parent":{"krate":0,"index":6155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6158},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340383,"byte_end":340392,"line_start":19,"line_end":19,"column_start":13,"column_end":22},"name":"delimiter","qualname":"::mac::Macro::delimiter","value":"mac::MacroDelimiter","parent":{"krate":0,"index":6155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6159},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340422,"byte_end":340428,"line_start":20,"line_end":20,"column_start":13,"column_end":19},"name":"tokens","qualname":"::mac::Macro::tokens","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6161},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340782,"byte_end":340787,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"Paren","qualname":"::mac::MacroDelimiter::Paren","value":"MacroDelimiter::Paren(Paren)","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6163},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340788,"byte_end":340793,"line_start":31,"line_end":31,"column_start":15,"column_end":20},"name":"0","qualname":"::mac::MacroDelimiter::Paren::0","value":"token::Paren","parent":{"krate":0,"index":6161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6164},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340804,"byte_end":340809,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"Brace","qualname":"::mac::MacroDelimiter::Brace","value":"MacroDelimiter::Brace(Brace)","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6166},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340810,"byte_end":340815,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"name":"0","qualname":"::mac::MacroDelimiter::Brace::0","value":"token::Brace","parent":{"krate":0,"index":6164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340826,"byte_end":340833,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::mac::MacroDelimiter::Bracket","value":"MacroDelimiter::Bracket(Bracket)","parent":{"krate":0,"index":6160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6169},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340834,"byte_end":340841,"line_start":33,"line_end":33,"column_start":17,"column_end":24},"name":"0","qualname":"::mac::MacroDelimiter::Bracket::0","value":"token::Bracket","parent":{"krate":0,"index":6167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6160},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":340757,"byte_end":340771,"line_start":30,"line_end":30,"column_start":14,"column_end":28},"name":"MacroDelimiter","qualname":"::mac::MacroDelimiter","value":"enum MacroDelimiter { Paren(Paren), Brace(Brace), Bracket(Bracket), }","parent":null,"children":[{"krate":0,"index":6161},{"krate":0,"index":6164},{"krate":0,"index":6167}],"decl_id":null,"docs":" A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344811,"byte_end":344821,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"parse_body","qualname":"<Macro>::parse_body","value":"fn parse_body<T>(&Self) -> Result<T> where T: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parse the tokens within the macro invocation's delimiters into a syntax\n tree.","sig":null,"attributes":[{"value":"/ Parse the tokens within the macro invocation's delimiters into a syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341487,"byte_end":341562,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ tree.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341567,"byte_end":341576,"line_start":55,"line_end":55,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341581,"byte_end":341584,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `syn::parse2::<T>(mac.tokens)` except that it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341589,"byte_end":341660,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ produces a more useful span when `tokens` is empty.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341665,"byte_end":341720,"line_start":58,"line_end":58,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341725,"byte_end":341728,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341733,"byte_end":341746,"line_start":60,"line_end":60,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341751,"byte_end":341754,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341759,"byte_end":341766,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use syn::{parse_quote, Expr, ExprLit, Ident, Lit, LitStr, Macro, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341771,"byte_end":341847,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341852,"byte_end":341879,"line_start":64,"line_end":64,"column_start":5,"column_end":32}},{"value":"/ use syn::parse::{Error, Parse, ParseStream, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341884,"byte_end":341940,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341945,"byte_end":341981,"line_start":66,"line_end":66,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341986,"byte_end":341989,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ // The arguments expected by libcore's format_args macro, and as a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341994,"byte_end":342064,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ // result most other formatting and printing macros like println.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342069,"byte_end":342138,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342143,"byte_end":342149,"line_start":70,"line_end":70,"column_start":5,"column_end":11}},{"value":"/ //     println!(\"{} is {number:.prec$}\", \"x\", prec=5, number=0.01)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342154,"byte_end":342224,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ struct FormatArgs {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342229,"byte_end":342252,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/     format_string: Expr,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342257,"byte_end":342285,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/     positional_args: Vec<Expr>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342290,"byte_end":342325,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/     named_args: Vec<(Ident, Expr)>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342330,"byte_end":342369,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342374,"byte_end":342379,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342384,"byte_end":342387,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ impl Parse for FormatArgs {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342392,"byte_end":342423,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342428,"byte_end":342482,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"/         let format_string: Expr;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342487,"byte_end":342523,"line_start":80,"line_end":80,"column_start":5,"column_end":41}},{"value":"/         let mut positional_args = Vec::new();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342528,"byte_end":342577,"line_start":81,"line_end":81,"column_start":5,"column_end":54}},{"value":"/         let mut named_args = Vec::new();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342582,"byte_end":342626,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342631,"byte_end":342634,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/         format_string = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342639,"byte_end":342682,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/         while !input.is_empty() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342687,"byte_end":342724,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/             input.parse::<Token![,]>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342729,"byte_end":342773,"line_start":86,"line_end":86,"column_start":5,"column_end":49}},{"value":"/             if input.is_empty() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342778,"byte_end":342815,"line_start":87,"line_end":87,"column_start":5,"column_end":42}},{"value":"/                 break;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342820,"byte_end":342846,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342851,"byte_end":342868,"line_start":89,"line_end":89,"column_start":5,"column_end":22}},{"value":"/             if input.peek(Ident::peek_any) && input.peek2(Token![=]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342873,"byte_end":342947,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/                 while !input.is_empty() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":342952,"byte_end":342997,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/                     let name: Ident = input.call(Ident::parse_any)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343002,"byte_end":343074,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/                     input.parse::<Token![=]>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343079,"byte_end":343131,"line_start":93,"line_end":93,"column_start":5,"column_end":57}},{"value":"/                     let value: Expr = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343136,"byte_end":343193,"line_start":94,"line_end":94,"column_start":5,"column_end":62}},{"value":"/                     named_args.push((name, value));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343198,"byte_end":343253,"line_start":95,"line_end":95,"column_start":5,"column_end":60}},{"value":"/                     if input.is_empty() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343258,"byte_end":343303,"line_start":96,"line_end":96,"column_start":5,"column_end":50}},{"value":"/                         break;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343308,"byte_end":343342,"line_start":97,"line_end":97,"column_start":5,"column_end":39}},{"value":"/                     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343347,"byte_end":343372,"line_start":98,"line_end":98,"column_start":5,"column_end":30}},{"value":"/                     input.parse::<Token![,]>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343377,"byte_end":343429,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343434,"byte_end":343455,"line_start":100,"line_end":100,"column_start":5,"column_end":26}},{"value":"/                 break;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343460,"byte_end":343486,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343491,"byte_end":343508,"line_start":102,"line_end":102,"column_start":5,"column_end":22}},{"value":"/             positional_args.push(input.parse()?);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343513,"byte_end":343566,"line_start":103,"line_end":103,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343571,"byte_end":343584,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343589,"byte_end":343592,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/         Ok(FormatArgs {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343597,"byte_end":343624,"line_start":106,"line_end":106,"column_start":5,"column_end":32}},{"value":"/             format_string,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343629,"byte_end":343659,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/             positional_args,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343664,"byte_end":343696,"line_start":108,"line_end":108,"column_start":5,"column_end":37}},{"value":"/             named_args,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343701,"byte_end":343728,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343733,"byte_end":343747,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343752,"byte_end":343761,"line_start":111,"line_end":111,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343766,"byte_end":343771,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343776,"byte_end":343779,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ // Extract the first argument, the format string literal, from an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343784,"byte_end":343853,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ // invocation of a formatting or printing macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343858,"byte_end":343910,"line_start":115,"line_end":115,"column_start":5,"column_end":57}},{"value":"/ fn get_format_string(m: &Macro) -> Result<LitStr> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343915,"byte_end":343970,"line_start":116,"line_end":116,"column_start":5,"column_end":60}},{"value":"/     let args: FormatArgs = m.parse_body()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":343975,"byte_end":344022,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/     match args.format_string {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344027,"byte_end":344061,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/         Expr::Lit(ExprLit { lit: Lit::Str(lit), .. }) => Ok(lit),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344066,"byte_end":344135,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/         other => {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344140,"byte_end":344162,"line_start":120,"line_end":120,"column_start":5,"column_end":27}},{"value":"/             // First argument was not a string literal expression.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344167,"byte_end":344237,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/             // Maybe something like: println!(concat!(...), ...)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344242,"byte_end":344310,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/             Err(Error::new_spanned(other, \"format string must be a string literal\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344315,"byte_end":344403,"line_start":123,"line_end":123,"column_start":5,"column_end":93}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344408,"byte_end":344421,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344426,"byte_end":344435,"line_start":125,"line_end":125,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344440,"byte_end":344445,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344450,"byte_end":344453,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344458,"byte_end":344473,"line_start":128,"line_end":128,"column_start":5,"column_end":20}},{"value":"/     let invocation = parse_quote! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344478,"byte_end":344517,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{:?}\", Instant::now())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344522,"byte_end":344566,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/     };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344571,"byte_end":344581,"line_start":131,"line_end":131,"column_start":5,"column_end":15}},{"value":"/     let lit = get_format_string(&invocation).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344586,"byte_end":344644,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(lit.value(), \"{:?}\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344649,"byte_end":344689,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344694,"byte_end":344699,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344704,"byte_end":344711,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344716,"byte_end":344743,"line_start":136,"line_end":136,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":345097,"byte_end":345112,"line_start":146,"line_end":146,"column_start":12,"column_end":27},"name":"parse_body_with","qualname":"<Macro>::parse_body_with","value":"fn parse_body_with<F>(&Self, F) -> Result<F::Output> where F: Parser","parent":null,"children":[],"decl_id":null,"docs":" Parse the tokens within the macro invocation's delimiters using the\n given parser.\n","sig":null,"attributes":[{"value":"/ Parse the tokens within the macro invocation's delimiters using the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344904,"byte_end":344975,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ given parser.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":344980,"byte_end":344997,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":345002,"byte_end":345029,"line_start":144,"line_end":144,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":346314,"byte_end":346319,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"parse","qualname":"<Macro as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":346973,"byte_end":346982,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Macro as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6170},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":347922,"byte_end":347933,"line_start":9,"line_end":9,"column_start":16,"column_end":27},"name":"DeriveInput","qualname":"::derive::DeriveInput","value":"DeriveInput { attrs, vis, ident, generics, data }","parent":null,"children":[{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175}],"decl_id":null,"docs":" Data structure sent to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6171},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348007,"byte_end":348012,"line_start":11,"line_end":11,"column_start":13,"column_end":18},"name":"attrs","qualname":"::derive::DeriveInput::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" Attributes tagged on the whole struct or enum.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the whole struct or enum.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":347944,"byte_end":347994,"line_start":10,"line_end":10,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6172},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348089,"byte_end":348092,"line_start":14,"line_end":14,"column_start":13,"column_end":16},"name":"vis","qualname":"::derive::DeriveInput::vis","value":"data::Visibility","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" Visibility of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Visibility of the struct or enum.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348039,"byte_end":348076,"line_start":13,"line_end":13,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6173},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348159,"byte_end":348164,"line_start":17,"line_end":17,"column_start":13,"column_end":18},"name":"ident","qualname":"::derive::DeriveInput::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" Name of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Name of the struct or enum.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348115,"byte_end":348146,"line_start":16,"line_end":16,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6174},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348244,"byte_end":348252,"line_start":20,"line_end":20,"column_start":13,"column_end":21},"name":"generics","qualname":"::derive::DeriveInput::generics","value":"generics::Generics","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" Generics required to complete the definition.\n","sig":null,"attributes":[{"value":"/ Generics required to complete the definition.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348182,"byte_end":348231,"line_start":19,"line_end":19,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6175},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348321,"byte_end":348325,"line_start":23,"line_end":23,"column_start":13,"column_end":17},"name":"data","qualname":"::derive::DeriveInput::data","value":"derive::Data","parent":{"krate":0,"index":6170},"children":[],"decl_id":null,"docs":" Data within the struct or enum.\n","sig":null,"attributes":[{"value":"/ Data within the struct or enum.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348273,"byte_end":348308,"line_start":22,"line_end":22,"column_start":9,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6177},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348806,"byte_end":348812,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"name":"Struct","qualname":"::derive::Data::Struct","value":"Data::Struct(DataStruct)","parent":{"krate":0,"index":6176},"children":[],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ A struct input to a `proc_macro_derive` macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348747,"byte_end":348797,"line_start":39,"line_end":39,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6179},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348813,"byte_end":348823,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"name":"0","qualname":"::derive::Data::Struct::0","value":"derive::DataStruct","parent":{"krate":0,"index":6177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6180},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348893,"byte_end":348897,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"name":"Enum","qualname":"::derive::Data::Enum","value":"Data::Enum(DataEnum)","parent":{"krate":0,"index":6176},"children":[],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ An enum input to a `proc_macro_derive` macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348835,"byte_end":348884,"line_start":42,"line_end":42,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6182},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348898,"byte_end":348906,"line_start":43,"line_end":43,"column_start":14,"column_end":22},"name":"0","qualname":"::derive::Data::Enum::0","value":"derive::DataEnum","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6183},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348986,"byte_end":348991,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Union","qualname":"::derive::Data::Union","value":"Data::Union(DataUnion)","parent":{"krate":0,"index":6176},"children":[],"decl_id":null,"docs":" An untagged union input to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ An untagged union input to a `proc_macro_derive` macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348918,"byte_end":348977,"line_start":45,"line_end":45,"column_start":9,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":6185},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348992,"byte_end":349001,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"name":"0","qualname":"::derive::Data::Union::0","value":"derive::DataUnion","parent":{"krate":0,"index":6183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6176},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":348732,"byte_end":348736,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"Data","qualname":"::derive::Data","value":"enum Data { Struct(DataStruct), Enum(DataEnum), Union(DataUnion), }","parent":null,"children":[{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6183}],"decl_id":null,"docs":" The storage of a struct, enum or union data structure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6192},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349282,"byte_end":349292,"line_start":58,"line_end":58,"column_start":16,"column_end":26},"name":"DataStruct","qualname":"::derive::DataStruct","value":"DataStruct { struct_token, fields, semi_token }","parent":null,"children":[{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6195}],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6193},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349307,"byte_end":349319,"line_start":59,"line_end":59,"column_start":13,"column_end":25},"name":"struct_token","qualname":"::derive::DataStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":6192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6194},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349349,"byte_end":349355,"line_start":60,"line_end":60,"column_start":13,"column_end":19},"name":"fields","qualname":"::derive::DataStruct::fields","value":"data::Fields","parent":{"krate":0,"index":6192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6195},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349377,"byte_end":349387,"line_start":61,"line_end":61,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::derive::DataStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":6192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6196},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349654,"byte_end":349662,"line_start":71,"line_end":71,"column_start":16,"column_end":24},"name":"DataEnum","qualname":"::derive::DataEnum","value":"DataEnum { enum_token, brace_token, variants }","parent":null,"children":[{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199}],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6197},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349677,"byte_end":349687,"line_start":72,"line_end":72,"column_start":13,"column_end":23},"name":"enum_token","qualname":"::derive::DataEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6198},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349715,"byte_end":349726,"line_start":73,"line_end":73,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::derive::DataEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6199},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":349754,"byte_end":349762,"line_start":74,"line_end":74,"column_start":13,"column_end":21},"name":"variants","qualname":"::derive::DataEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":6196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6200},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":350052,"byte_end":350061,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"DataUnion","qualname":"::derive::DataUnion","value":"DataUnion { union_token, fields }","parent":null,"children":[{"krate":0,"index":6201},{"krate":0,"index":6202}],"decl_id":null,"docs":" An untagged union input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6201},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":350076,"byte_end":350087,"line_start":85,"line_end":85,"column_start":13,"column_end":24},"name":"union_token","qualname":"::derive::DataUnion::union_token","value":"token::Union","parent":{"krate":0,"index":6200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6202},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":350116,"byte_end":350122,"line_start":86,"line_end":86,"column_start":13,"column_end":19},"name":"fields","qualname":"::derive::DataUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":6200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":350363,"byte_end":350368,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"parse","qualname":"<DeriveInput as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":355056,"byte_end":355065,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<DeriveInput as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6204},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357134,"byte_end":357137,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"Add","qualname":"::op::BinOp::Add","value":"BinOp::Add(crate::token::Add)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `+` operator (addition)\n","sig":null,"attributes":[{"value":"/ The `+` operator (addition)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357094,"byte_end":357125,"line_start":8,"line_end":8,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6206},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357138,"byte_end":357147,"line_start":9,"line_end":9,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Add::0","value":"token::Add","parent":{"krate":0,"index":6204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6207},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357201,"byte_end":357204,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"Sub","qualname":"::op::BinOp::Sub","value":"BinOp::Sub(crate::token::Sub)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `-` operator (subtraction)\n","sig":null,"attributes":[{"value":"/ The `-` operator (subtraction)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357158,"byte_end":357192,"line_start":10,"line_end":10,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6209},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357205,"byte_end":357214,"line_start":11,"line_end":11,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Sub::0","value":"token::Sub","parent":{"krate":0,"index":6207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6210},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357271,"byte_end":357274,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"Mul","qualname":"::op::BinOp::Mul","value":"BinOp::Mul(crate::token::Star)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `*` operator (multiplication)\n","sig":null,"attributes":[{"value":"/ The `*` operator (multiplication)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357225,"byte_end":357262,"line_start":12,"line_end":12,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6212},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357275,"byte_end":357284,"line_start":13,"line_end":13,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Mul::0","value":"token::Star","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357335,"byte_end":357338,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"Div","qualname":"::op::BinOp::Div","value":"BinOp::Div(crate::token::Div)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `/` operator (division)\n","sig":null,"attributes":[{"value":"/ The `/` operator (division)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357295,"byte_end":357326,"line_start":14,"line_end":14,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6215},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357339,"byte_end":357348,"line_start":15,"line_end":15,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Div::0","value":"token::Div","parent":{"krate":0,"index":6213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6216},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357398,"byte_end":357401,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"Rem","qualname":"::op::BinOp::Rem","value":"BinOp::Rem(crate::token::Rem)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `%` operator (modulus)\n","sig":null,"attributes":[{"value":"/ The `%` operator (modulus)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357359,"byte_end":357389,"line_start":16,"line_end":16,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":6218},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357402,"byte_end":357411,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"name":"0","qualname":"::op::BinOp::Rem::0","value":"token::Rem","parent":{"krate":0,"index":6216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6219},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357466,"byte_end":357469,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"And","qualname":"::op::BinOp::And","value":"BinOp::And(crate::token::AndAnd)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `&&` operator (logical and)\n","sig":null,"attributes":[{"value":"/ The `&&` operator (logical and)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357422,"byte_end":357457,"line_start":18,"line_end":18,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6221},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357470,"byte_end":357480,"line_start":19,"line_end":19,"column_start":13,"column_end":23},"name":"0","qualname":"::op::BinOp::And::0","value":"token::AndAnd","parent":{"krate":0,"index":6219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6222},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357534,"byte_end":357536,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"Or","qualname":"::op::BinOp::Or","value":"BinOp::Or(crate::token::OrOr)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `||` operator (logical or)\n","sig":null,"attributes":[{"value":"/ The `||` operator (logical or)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357491,"byte_end":357525,"line_start":20,"line_end":20,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6224},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357537,"byte_end":357547,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Or::0","value":"token::OrOr","parent":{"krate":0,"index":6222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6225},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357601,"byte_end":357607,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"BitXor","qualname":"::op::BinOp::BitXor","value":"BinOp::BitXor(crate::token::Caret)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `^` operator (bitwise xor)\n","sig":null,"attributes":[{"value":"/ The `^` operator (bitwise xor)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357558,"byte_end":357592,"line_start":22,"line_end":22,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6227},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357608,"byte_end":357617,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"name":"0","qualname":"::op::BinOp::BitXor::0","value":"token::Caret","parent":{"krate":0,"index":6225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6228},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357671,"byte_end":357677,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"BitAnd","qualname":"::op::BinOp::BitAnd","value":"BinOp::BitAnd(crate::token::And)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `&` operator (bitwise and)\n","sig":null,"attributes":[{"value":"/ The `&` operator (bitwise and)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357628,"byte_end":357662,"line_start":24,"line_end":24,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6230},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357678,"byte_end":357687,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"0","qualname":"::op::BinOp::BitAnd::0","value":"token::And","parent":{"krate":0,"index":6228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6231},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357740,"byte_end":357745,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"BitOr","qualname":"::op::BinOp::BitOr","value":"BinOp::BitOr(crate::token::Or)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `|` operator (bitwise or)\n","sig":null,"attributes":[{"value":"/ The `|` operator (bitwise or)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357698,"byte_end":357731,"line_start":26,"line_end":26,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6233},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357746,"byte_end":357755,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"name":"0","qualname":"::op::BinOp::BitOr::0","value":"token::Or","parent":{"krate":0,"index":6231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6234},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357809,"byte_end":357812,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"name":"Shl","qualname":"::op::BinOp::Shl","value":"BinOp::Shl(crate::token::Shl)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `<<` operator (shift left)\n","sig":null,"attributes":[{"value":"/ The `<<` operator (shift left)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357766,"byte_end":357800,"line_start":28,"line_end":28,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6236},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357813,"byte_end":357823,"line_start":29,"line_end":29,"column_start":13,"column_end":23},"name":"0","qualname":"::op::BinOp::Shl::0","value":"token::Shl","parent":{"krate":0,"index":6234},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6237},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357878,"byte_end":357881,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"Shr","qualname":"::op::BinOp::Shr","value":"BinOp::Shr(crate::token::Shr)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `>>` operator (shift right)\n","sig":null,"attributes":[{"value":"/ The `>>` operator (shift right)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357834,"byte_end":357869,"line_start":30,"line_end":30,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6239},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357882,"byte_end":357892,"line_start":31,"line_end":31,"column_start":13,"column_end":23},"name":"0","qualname":"::op::BinOp::Shr::0","value":"token::Shr","parent":{"krate":0,"index":6237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6240},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357944,"byte_end":357946,"line_start":33,"line_end":33,"column_start":9,"column_end":11},"name":"Eq","qualname":"::op::BinOp::Eq","value":"BinOp::Eq(crate::token::EqEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `==` operator (equality)\n","sig":null,"attributes":[{"value":"/ The `==` operator (equality)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357903,"byte_end":357935,"line_start":32,"line_end":32,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6242},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357947,"byte_end":357957,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Eq::0","value":"token::EqEq","parent":{"krate":0,"index":6240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6243},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358009,"byte_end":358011,"line_start":35,"line_end":35,"column_start":9,"column_end":11},"name":"Lt","qualname":"::op::BinOp::Lt","value":"BinOp::Lt(crate::token::Lt)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `<` operator (less than)\n","sig":null,"attributes":[{"value":"/ The `<` operator (less than)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357968,"byte_end":358000,"line_start":34,"line_end":34,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6245},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358012,"byte_end":358021,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"0","qualname":"::op::BinOp::Lt::0","value":"token::Lt","parent":{"krate":0,"index":6243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6246},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358086,"byte_end":358088,"line_start":37,"line_end":37,"column_start":9,"column_end":11},"name":"Le","qualname":"::op::BinOp::Le","value":"BinOp::Le(crate::token::Le)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `<=` operator (less than or equal to)\n","sig":null,"attributes":[{"value":"/ The `<=` operator (less than or equal to)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358032,"byte_end":358077,"line_start":36,"line_end":36,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6248},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358089,"byte_end":358099,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Le::0","value":"token::Le","parent":{"krate":0,"index":6246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6249},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358155,"byte_end":358157,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"Ne","qualname":"::op::BinOp::Ne","value":"BinOp::Ne(crate::token::Ne)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `!=` operator (not equal to)\n","sig":null,"attributes":[{"value":"/ The `!=` operator (not equal to)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358110,"byte_end":358146,"line_start":38,"line_end":38,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6251},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358158,"byte_end":358168,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Ne::0","value":"token::Ne","parent":{"krate":0,"index":6249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6252},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358236,"byte_end":358238,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"Ge","qualname":"::op::BinOp::Ge","value":"BinOp::Ge(crate::token::Ge)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `>=` operator (greater than or equal to)\n","sig":null,"attributes":[{"value":"/ The `>=` operator (greater than or equal to)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358179,"byte_end":358227,"line_start":40,"line_end":40,"column_start":9,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":6254},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358239,"byte_end":358249,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"0","qualname":"::op::BinOp::Ge::0","value":"token::Ge","parent":{"krate":0,"index":6252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6255},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358304,"byte_end":358306,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"Gt","qualname":"::op::BinOp::Gt","value":"BinOp::Gt(crate::token::Gt)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `>` operator (greater than)\n","sig":null,"attributes":[{"value":"/ The `>` operator (greater than)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358260,"byte_end":358295,"line_start":42,"line_end":42,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6257},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358307,"byte_end":358316,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"0","qualname":"::op::BinOp::Gt::0","value":"token::Gt","parent":{"krate":0,"index":6255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6258},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358357,"byte_end":358362,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"AddEq","qualname":"::op::BinOp::AddEq","value":"BinOp::AddEq(crate::token::AddEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `+=` operator\n","sig":null,"attributes":[{"value":"/ The `+=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358327,"byte_end":358348,"line_start":44,"line_end":44,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6260},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358363,"byte_end":358373,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::AddEq::0","value":"token::AddEq","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6261},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358414,"byte_end":358419,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"SubEq","qualname":"::op::BinOp::SubEq","value":"BinOp::SubEq(crate::token::SubEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `-=` operator\n","sig":null,"attributes":[{"value":"/ The `-=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358384,"byte_end":358405,"line_start":46,"line_end":46,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6263},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358420,"byte_end":358430,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::SubEq::0","value":"token::SubEq","parent":{"krate":0,"index":6261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6264},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358471,"byte_end":358476,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"MulEq","qualname":"::op::BinOp::MulEq","value":"BinOp::MulEq(crate::token::MulEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `*=` operator\n","sig":null,"attributes":[{"value":"/ The `*=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358441,"byte_end":358462,"line_start":48,"line_end":48,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6266},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358477,"byte_end":358487,"line_start":49,"line_end":49,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::MulEq::0","value":"token::MulEq","parent":{"krate":0,"index":6264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6267},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358528,"byte_end":358533,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"DivEq","qualname":"::op::BinOp::DivEq","value":"BinOp::DivEq(crate::token::DivEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `/=` operator\n","sig":null,"attributes":[{"value":"/ The `/=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358498,"byte_end":358519,"line_start":50,"line_end":50,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6269},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358534,"byte_end":358544,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::DivEq::0","value":"token::DivEq","parent":{"krate":0,"index":6267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6270},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358585,"byte_end":358590,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"RemEq","qualname":"::op::BinOp::RemEq","value":"BinOp::RemEq(crate::token::RemEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `%=` operator\n","sig":null,"attributes":[{"value":"/ The `%=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358555,"byte_end":358576,"line_start":52,"line_end":52,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6272},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358591,"byte_end":358601,"line_start":53,"line_end":53,"column_start":15,"column_end":25},"name":"0","qualname":"::op::BinOp::RemEq::0","value":"token::RemEq","parent":{"krate":0,"index":6270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6273},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358642,"byte_end":358650,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"BitXorEq","qualname":"::op::BinOp::BitXorEq","value":"BinOp::BitXorEq(crate::token::CaretEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `^=` operator\n","sig":null,"attributes":[{"value":"/ The `^=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358612,"byte_end":358633,"line_start":54,"line_end":54,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6275},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358651,"byte_end":358661,"line_start":55,"line_end":55,"column_start":18,"column_end":28},"name":"0","qualname":"::op::BinOp::BitXorEq::0","value":"token::CaretEq","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6276},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358702,"byte_end":358710,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"BitAndEq","qualname":"::op::BinOp::BitAndEq","value":"BinOp::BitAndEq(crate::token::AndEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `&=` operator\n","sig":null,"attributes":[{"value":"/ The `&=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358672,"byte_end":358693,"line_start":56,"line_end":56,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6278},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358711,"byte_end":358721,"line_start":57,"line_end":57,"column_start":18,"column_end":28},"name":"0","qualname":"::op::BinOp::BitAndEq::0","value":"token::AndEq","parent":{"krate":0,"index":6276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6279},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358762,"byte_end":358769,"line_start":59,"line_end":59,"column_start":9,"column_end":16},"name":"BitOrEq","qualname":"::op::BinOp::BitOrEq","value":"BinOp::BitOrEq(crate::token::OrEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `|=` operator\n","sig":null,"attributes":[{"value":"/ The `|=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358732,"byte_end":358753,"line_start":58,"line_end":58,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6281},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358770,"byte_end":358780,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"name":"0","qualname":"::op::BinOp::BitOrEq::0","value":"token::OrEq","parent":{"krate":0,"index":6279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6282},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358822,"byte_end":358827,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"ShlEq","qualname":"::op::BinOp::ShlEq","value":"BinOp::ShlEq(crate::token::ShlEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `<<=` operator\n","sig":null,"attributes":[{"value":"/ The `<<=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358791,"byte_end":358813,"line_start":60,"line_end":60,"column_start":9,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6284},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358828,"byte_end":358839,"line_start":61,"line_end":61,"column_start":15,"column_end":26},"name":"0","qualname":"::op::BinOp::ShlEq::0","value":"token::ShlEq","parent":{"krate":0,"index":6282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6285},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358881,"byte_end":358886,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"ShrEq","qualname":"::op::BinOp::ShrEq","value":"BinOp::ShrEq(crate::token::ShrEq)","parent":{"krate":0,"index":6203},"children":[],"decl_id":null,"docs":" The `>>=` operator\n","sig":null,"attributes":[{"value":"/ The `>>=` operator","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358850,"byte_end":358872,"line_start":62,"line_end":62,"column_start":9,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":6287},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":358887,"byte_end":358898,"line_start":63,"line_end":63,"column_start":15,"column_end":26},"name":"0","qualname":"::op::BinOp::ShrEq::0","value":"token::ShrEq","parent":{"krate":0,"index":6285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6203},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":357078,"byte_end":357083,"line_start":7,"line_end":7,"column_start":14,"column_end":19},"name":"BinOp","qualname":"::op::BinOp","value":"enum BinOp {\n    Add(crate::token::Add),\n    Sub(crate::token::Sub),\n    Mul(crate::token::Star),\n    Div(crate::token::Div),\n    Rem(crate::token::Rem),\n    And(crate::token::AndAnd),\n    Or(crate::token::OrOr),\n    BitXor(crate::token::Caret),\n    BitAnd(crate::token::And),\n    BitOr(crate::token::Or),\n    Shl(crate::token::Shl),\n    Shr(crate::token::Shr),\n    Eq(crate::token::EqEq),\n    Lt(crate::token::Lt),\n    Le(crate::token::Le),\n    Ne(crate::token::Ne),\n    Ge(crate::token::Ge),\n    Gt(crate::token::Gt),\n    AddEq(crate::token::AddEq),\n    SubEq(crate::token::SubEq),\n    MulEq(crate::token::MulEq),\n    DivEq(crate::token::DivEq),\n    RemEq(crate::token::RemEq),\n    BitXorEq(crate::token::CaretEq),\n    BitAndEq(crate::token::AndEq),\n    BitOrEq(crate::token::OrEq),\n    ShlEq(crate::token::ShlEq),\n    ShrEq(crate::token::ShrEq),\n}","parent":null,"children":[{"krate":0,"index":6204},{"krate":0,"index":6207},{"krate":0,"index":6210},{"krate":0,"index":6213},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6222},{"krate":0,"index":6225},{"krate":0,"index":6228},{"krate":0,"index":6231},{"krate":0,"index":6234},{"krate":0,"index":6237},{"krate":0,"index":6240},{"krate":0,"index":6243},{"krate":0,"index":6246},{"krate":0,"index":6249},{"krate":0,"index":6252},{"krate":0,"index":6255},{"krate":0,"index":6258},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":6273},{"krate":0,"index":6276},{"krate":0,"index":6279},{"krate":0,"index":6282},{"krate":0,"index":6285}],"decl_id":null,"docs":" A binary operator: `+`, `+=`, `&`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6289},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359227,"byte_end":359232,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"name":"Deref","qualname":"::op::UnOp::Deref","value":"UnOp::Deref(crate::token::Star)","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The `*` operator for dereferencing\n","sig":null,"attributes":[{"value":"/ The `*` operator for dereferencing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359180,"byte_end":359218,"line_start":74,"line_end":74,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6291},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359233,"byte_end":359242,"line_start":75,"line_end":75,"column_start":15,"column_end":24},"name":"0","qualname":"::op::UnOp::Deref::0","value":"token::Star","parent":{"krate":0,"index":6289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6292},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359304,"byte_end":359307,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"Not","qualname":"::op::UnOp::Not","value":"UnOp::Not(crate::token::Bang)","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The `!` operator for logical inversion\n","sig":null,"attributes":[{"value":"/ The `!` operator for logical inversion","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359253,"byte_end":359295,"line_start":76,"line_end":76,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6294},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359308,"byte_end":359317,"line_start":77,"line_end":77,"column_start":13,"column_end":22},"name":"0","qualname":"::op::UnOp::Not::0","value":"token::Bang","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6295},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359370,"byte_end":359373,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"name":"Neg","qualname":"::op::UnOp::Neg","value":"UnOp::Neg(crate::token::Sub)","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The `-` operator for negation\n","sig":null,"attributes":[{"value":"/ The `-` operator for negation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359328,"byte_end":359361,"line_start":78,"line_end":78,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6297},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359374,"byte_end":359383,"line_start":79,"line_end":79,"column_start":13,"column_end":22},"name":"0","qualname":"::op::UnOp::Neg::0","value":"token::Sub","parent":{"krate":0,"index":6295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6288},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":359165,"byte_end":359169,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"UnOp","qualname":"::op::UnOp","value":"enum UnOp {\n    Deref(crate::token::Star),\n    Not(crate::token::Bang),\n    Neg(crate::token::Sub),\n}","parent":null,"children":[{"krate":0,"index":6289},{"krate":0,"index":6292},{"krate":0,"index":6295}],"decl_id":null,"docs":" A unary operator: `*`, `!`, `-`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":361307,"byte_end":361312,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"parse","qualname":"<BinOp as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":361266,"byte_end":361295,"line_start":132,"line_end":132,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":362614,"byte_end":362619,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"parse","qualname":"<UnOp as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":363299,"byte_end":363308,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<BinOp as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":365038,"byte_end":365047,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<UnOp as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6299},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":365931,"byte_end":365936,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"Array","qualname":"::ty::Type::Array","value":"Type::Array(TypeArray)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.\n","sig":null,"attributes":[{"value":"/ A fixed size array type: `[T; n]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":365884,"byte_end":365922,"line_start":19,"line_end":19,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6301},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":365937,"byte_end":365946,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Array::0","value":"ty::TypeArray","parent":{"krate":0,"index":6299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6302},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366013,"byte_end":366019,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"BareFn","qualname":"::ty::Type::BareFn","value":"Type::BareFn(TypeBareFn)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.\n","sig":null,"attributes":[{"value":"/ A bare function type: `fn(usize) -> bool`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":365958,"byte_end":366004,"line_start":22,"line_end":22,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6304},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366020,"byte_end":366030,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"0","qualname":"::ty::Type::BareFn::0","value":"ty::TypeBareFn","parent":{"krate":0,"index":6302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6305},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366100,"byte_end":366105,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"Group","qualname":"::ty::Type::Group","value":"Type::Group(TypeGroup)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A type contained within invisible delimiters.\n","sig":null,"attributes":[{"value":"/ A type contained within invisible delimiters.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366042,"byte_end":366091,"line_start":25,"line_end":25,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":6307},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366106,"byte_end":366115,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Group::0","value":"ty::TypeGroup","parent":{"krate":0,"index":6305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6308},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366231,"byte_end":366240,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"name":"ImplTrait","qualname":"::ty::Type::ImplTrait","value":"Type::ImplTrait(TypeImplTrait)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.\n","sig":null,"attributes":[{"value":"/ An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366127,"byte_end":366198,"line_start":28,"line_end":28,"column_start":9,"column_end":80}},{"value":"/ a lifetime.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366207,"byte_end":366222,"line_start":29,"line_end":29,"column_start":9,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":6310},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366241,"byte_end":366254,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"name":"0","qualname":"::ty::Type::ImplTrait::0","value":"ty::TypeImplTrait","parent":{"krate":0,"index":6308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6311},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366342,"byte_end":366347,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"Infer","qualname":"::ty::Type::Infer","value":"Type::Infer(TypeInfer)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.\n","sig":null,"attributes":[{"value":"/ Indication that a type should be inferred by the compiler: `_`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366266,"byte_end":366333,"line_start":32,"line_end":32,"column_start":9,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":6313},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366348,"byte_end":366357,"line_start":33,"line_end":33,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Infer::0","value":"ty::TypeInfer","parent":{"krate":0,"index":6311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6314},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366411,"byte_end":366416,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"Macro","qualname":"::ty::Type::Macro","value":"Type::Macro(TypeMacro)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A macro in the type position.\n","sig":null,"attributes":[{"value":"/ A macro in the type position.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366369,"byte_end":366402,"line_start":35,"line_end":35,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6316},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366417,"byte_end":366426,"line_start":36,"line_end":36,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Macro::0","value":"ty::TypeMacro","parent":{"krate":0,"index":6314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6317},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366471,"byte_end":366476,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"Never","qualname":"::ty::Type::Never","value":"Type::Never(TypeNever)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" The never type: `!`.\n","sig":null,"attributes":[{"value":"/ The never type: `!`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366438,"byte_end":366462,"line_start":38,"line_end":38,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6319},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366477,"byte_end":366486,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Never::0","value":"ty::TypeNever","parent":{"krate":0,"index":6317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6320},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366561,"byte_end":366566,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"Paren","qualname":"::ty::Type::Paren","value":"Type::Paren(TypeParen)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.\n","sig":null,"attributes":[{"value":"/ A parenthesized type equivalent to the inner type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366498,"byte_end":366552,"line_start":41,"line_end":41,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":6322},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366567,"byte_end":366576,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Paren::0","value":"ty::TypeParen","parent":{"krate":0,"index":6320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6323},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366725,"byte_end":366729,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"Path","qualname":"::ty::Type::Path","value":"Type::Path(TypePath)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.\n","sig":null,"attributes":[{"value":"/ A path like `std::slice::Iter`, optionally qualified with a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366588,"byte_end":366651,"line_start":44,"line_end":44,"column_start":9,"column_end":72}},{"value":"/ self-type as in `<Vec<T> as SomeTrait>::Associated`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366660,"byte_end":366716,"line_start":45,"line_end":45,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6325},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366730,"byte_end":366738,"line_start":46,"line_end":46,"column_start":14,"column_end":22},"name":"0","qualname":"::ty::Type::Path::0","value":"ty::TypePath","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6326},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366806,"byte_end":366809,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"Ptr","qualname":"::ty::Type::Ptr","value":"Type::Ptr(TypePtr)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.\n","sig":null,"attributes":[{"value":"/ A raw pointer type: `*const T` or `*mut T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366750,"byte_end":366797,"line_start":48,"line_end":48,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6328},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366810,"byte_end":366817,"line_start":49,"line_end":49,"column_start":13,"column_end":20},"name":"0","qualname":"::ty::Type::Ptr::0","value":"ty::TypePtr","parent":{"krate":0,"index":6326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6329},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366883,"byte_end":366892,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"Reference","qualname":"::ty::Type::Reference","value":"Type::Reference(TypeReference)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.\n","sig":null,"attributes":[{"value":"/ A reference type: `&'a T` or `&'a mut T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366829,"byte_end":366874,"line_start":51,"line_end":51,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6331},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366893,"byte_end":366906,"line_start":52,"line_end":52,"column_start":19,"column_end":32},"name":"0","qualname":"::ty::Type::Reference::0","value":"ty::TypeReference","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6332},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366969,"byte_end":366974,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"Slice","qualname":"::ty::Type::Slice","value":"Type::Slice(TypeSlice)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.\n","sig":null,"attributes":[{"value":"/ A dynamically sized slice type: `[T]`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366918,"byte_end":366960,"line_start":54,"line_end":54,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6334},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366975,"byte_end":366984,"line_start":55,"line_end":55,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Slice::0","value":"ty::TypeSlice","parent":{"krate":0,"index":6332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6335},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367111,"byte_end":367122,"line_start":59,"line_end":59,"column_start":9,"column_end":20},"name":"TraitObject","qualname":"::ty::Type::TraitObject","value":"Type::TraitObject(TypeTraitObject)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A trait object type `dyn Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.\n","sig":null,"attributes":[{"value":"/ A trait object type `dyn Bound1 + Bound2 + Bound3` where `Bound` is a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":366996,"byte_end":367069,"line_start":57,"line_end":57,"column_start":9,"column_end":82}},{"value":"/ trait or a lifetime.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367078,"byte_end":367102,"line_start":58,"line_end":58,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6337},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367123,"byte_end":367138,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"name":"0","qualname":"::ty::Type::TraitObject::0","value":"ty::TypeTraitObject","parent":{"krate":0,"index":6335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6338},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367197,"byte_end":367202,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"Tuple","qualname":"::ty::Type::Tuple","value":"Type::Tuple(TypeTuple)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.\n","sig":null,"attributes":[{"value":"/ A tuple type: `(A, B, C, String)`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367150,"byte_end":367188,"line_start":61,"line_end":61,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":6340},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367203,"byte_end":367212,"line_start":62,"line_end":62,"column_start":15,"column_end":24},"name":"0","qualname":"::ty::Type::Tuple::0","value":"ty::TypeTuple","parent":{"krate":0,"index":6338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6341},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367284,"byte_end":367292,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"Verbatim","qualname":"::ty::Type::Verbatim","value":"Type::Verbatim(TokenStream)","parent":{"krate":0,"index":6298},"children":[],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.\n","sig":null,"attributes":[{"value":"/ Tokens in type position not interpreted by Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367224,"byte_end":367275,"line_start":64,"line_end":64,"column_start":9,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6343},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":367293,"byte_end":367304,"line_start":65,"line_end":65,"column_start":18,"column_end":29},"name":"0","qualname":"::ty::Type::Verbatim::0","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6298},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":365869,"byte_end":365873,"line_start":18,"line_end":18,"column_start":14,"column_end":18},"name":"Type","qualname":"::ty::Type","value":"enum Type {\n    Array(TypeArray),\n    BareFn(TypeBareFn),\n    Group(TypeGroup),\n    ImplTrait(TypeImplTrait),\n    Infer(TypeInfer),\n    Macro(TypeMacro),\n    Never(TypeNever),\n    Paren(TypeParen),\n    Path(TypePath),\n    Ptr(TypePtr),\n    Reference(TypeReference),\n    Slice(TypeSlice),\n    TraitObject(TypeTraitObject),\n    Tuple(TypeTuple),\n    Verbatim(TokenStream),\n}","parent":null,"children":[{"krate":0,"index":6299},{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6308},{"krate":0,"index":6311},{"krate":0,"index":6314},{"krate":0,"index":6317},{"krate":0,"index":6320},{"krate":0,"index":6323},{"krate":0,"index":6326},{"krate":0,"index":6329},{"krate":0,"index":6332},{"krate":0,"index":6335},{"krate":0,"index":6338},{"krate":0,"index":6341}],"decl_id":null,"docs":" The possible types that a Rust value could have.","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":365839,"byte_end":365853,"line_start":17,"line_end":17,"column_start":44,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6374},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368464,"byte_end":368473,"line_start":97,"line_end":97,"column_start":16,"column_end":25},"name":"TypeArray","qualname":"::ty::TypeArray","value":"TypeArray { bracket_token, elem, semi_token, len }","parent":null,"children":[{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6378}],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6375},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368488,"byte_end":368501,"line_start":98,"line_end":98,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::ty::TypeArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":6374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6376},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368531,"byte_end":368535,"line_start":99,"line_end":99,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeArray::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6377},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368560,"byte_end":368570,"line_start":100,"line_end":100,"column_start":13,"column_end":23},"name":"semi_token","qualname":"::ty::TypeArray::semi_token","value":"token::Semi","parent":{"krate":0,"index":6374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6378},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368595,"byte_end":368598,"line_start":101,"line_end":101,"column_start":13,"column_end":16},"name":"len","qualname":"::ty::TypeArray::len","value":"expr::Expr","parent":{"krate":0,"index":6374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6379},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368884,"byte_end":368894,"line_start":111,"line_end":111,"column_start":16,"column_end":26},"name":"TypeBareFn","qualname":"::ty::TypeBareFn","value":"TypeBareFn { lifetimes, unsafety, abi, fn_token, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387}],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6380},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368909,"byte_end":368918,"line_start":112,"line_end":112,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::ty::TypeBareFn::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6381},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":368956,"byte_end":368964,"line_start":113,"line_end":113,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::ty::TypeBareFn::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6382},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369002,"byte_end":369005,"line_start":114,"line_end":114,"column_start":13,"column_end":16},"name":"abi","qualname":"::ty::TypeBareFn::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6383},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369032,"byte_end":369040,"line_start":115,"line_end":115,"column_start":13,"column_end":21},"name":"fn_token","qualname":"::ty::TypeBareFn::fn_token","value":"token::Fn","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6384},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369066,"byte_end":369077,"line_start":116,"line_end":116,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::ty::TypeBareFn::paren_token","value":"token::Paren","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6385},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369105,"byte_end":369111,"line_start":117,"line_end":117,"column_start":13,"column_end":19},"name":"inputs","qualname":"::ty::TypeBareFn::inputs","value":"punctuated::Punctuated<ty::BareFnArg, token::Comma>","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6386},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369159,"byte_end":369167,"line_start":118,"line_end":118,"column_start":13,"column_end":21},"name":"variadic","qualname":"::ty::TypeBareFn::variadic","value":"std::option::Option<ty::Variadic>","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6387},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369199,"byte_end":369205,"line_start":119,"line_end":119,"column_start":13,"column_end":19},"name":"output","qualname":"::ty::TypeBareFn::output","value":"ty::ReturnType","parent":{"krate":0,"index":6379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6388},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369500,"byte_end":369509,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"name":"TypeGroup","qualname":"::ty::TypeGroup","value":"TypeGroup { group_token, elem }","parent":null,"children":[{"krate":0,"index":6389},{"krate":0,"index":6390}],"decl_id":null,"docs":" A type contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6389},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369524,"byte_end":369535,"line_start":130,"line_end":130,"column_start":13,"column_end":24},"name":"group_token","qualname":"::ty::TypeGroup::group_token","value":"token::Group","parent":{"krate":0,"index":6388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6390},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369563,"byte_end":369567,"line_start":131,"line_end":131,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeGroup::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6391},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369903,"byte_end":369916,"line_start":142,"line_end":142,"column_start":16,"column_end":29},"name":"TypeImplTrait","qualname":"::ty::TypeImplTrait","value":"TypeImplTrait { impl_token, bounds }","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6393}],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6392},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369931,"byte_end":369941,"line_start":143,"line_end":143,"column_start":13,"column_end":23},"name":"impl_token","qualname":"::ty::TypeImplTrait::impl_token","value":"token::Impl","parent":{"krate":0,"index":6391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6393},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":369969,"byte_end":369975,"line_start":144,"line_end":144,"column_start":13,"column_end":19},"name":"bounds","qualname":"::ty::TypeImplTrait::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6394},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":370315,"byte_end":370324,"line_start":154,"line_end":154,"column_start":16,"column_end":25},"name":"TypeInfer","qualname":"::ty::TypeInfer","value":"TypeInfer { underscore_token }","parent":null,"children":[{"krate":0,"index":6395}],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6395},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":370339,"byte_end":370355,"line_start":155,"line_end":155,"column_start":13,"column_end":29},"name":"underscore_token","qualname":"::ty::TypeInfer::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":6394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":370633,"byte_end":370642,"line_start":165,"line_end":165,"column_start":16,"column_end":25},"name":"TypeMacro","qualname":"::ty::TypeMacro","value":"TypeMacro { mac }","parent":null,"children":[{"krate":0,"index":6397}],"decl_id":null,"docs":" A macro in the type position.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6397},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":370657,"byte_end":370660,"line_start":166,"line_end":166,"column_start":13,"column_end":16},"name":"mac","qualname":"::ty::TypeMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":6396},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":370925,"byte_end":370934,"line_start":176,"line_end":176,"column_start":16,"column_end":25},"name":"TypeNever","qualname":"::ty::TypeNever","value":"TypeNever { bang_token }","parent":null,"children":[{"krate":0,"index":6399}],"decl_id":null,"docs":" The never type: `!`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6399},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":370949,"byte_end":370959,"line_start":177,"line_end":177,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::ty::TypeNever::bang_token","value":"token::Bang","parent":{"krate":0,"index":6398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6400},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":371258,"byte_end":371267,"line_start":187,"line_end":187,"column_start":16,"column_end":25},"name":"TypeParen","qualname":"::ty::TypeParen","value":"TypeParen { paren_token, elem }","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402}],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6401},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":371282,"byte_end":371293,"line_start":188,"line_end":188,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::ty::TypeParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":6400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6402},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":371321,"byte_end":371325,"line_start":189,"line_end":189,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeParen::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6403},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":371694,"byte_end":371702,"line_start":200,"line_end":200,"column_start":16,"column_end":24},"name":"TypePath","qualname":"::ty::TypePath","value":"TypePath { qself, path }","parent":null,"children":[{"krate":0,"index":6404},{"krate":0,"index":6405}],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6404},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":371717,"byte_end":371722,"line_start":201,"line_end":201,"column_start":13,"column_end":18},"name":"qself","qualname":"::ty::TypePath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":6403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6405},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":371751,"byte_end":371755,"line_start":202,"line_end":202,"column_start":13,"column_end":17},"name":"path","qualname":"::ty::TypePath::path","value":"path::Path","parent":{"krate":0,"index":6403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6406},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372042,"byte_end":372049,"line_start":212,"line_end":212,"column_start":16,"column_end":23},"name":"TypePtr","qualname":"::ty::TypePtr","value":"TypePtr { star_token, const_token, mutability, elem }","parent":null,"children":[{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410}],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6407},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372064,"byte_end":372074,"line_start":213,"line_end":213,"column_start":13,"column_end":23},"name":"star_token","qualname":"::ty::TypePtr::star_token","value":"token::Star","parent":{"krate":0,"index":6406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6408},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372099,"byte_end":372110,"line_start":214,"line_end":214,"column_start":13,"column_end":24},"name":"const_token","qualname":"::ty::TypePtr::const_token","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":6406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6409},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372147,"byte_end":372157,"line_start":215,"line_end":215,"column_start":13,"column_end":23},"name":"mutability","qualname":"::ty::TypePtr::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":6406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6410},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372192,"byte_end":372196,"line_start":216,"line_end":216,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypePtr::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6411},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372486,"byte_end":372499,"line_start":226,"line_end":226,"column_start":16,"column_end":29},"name":"TypeReference","qualname":"::ty::TypeReference","value":"TypeReference { and_token, lifetime, mutability, elem }","parent":null,"children":[{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6414},{"krate":0,"index":6415}],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6412},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372514,"byte_end":372523,"line_start":227,"line_end":227,"column_start":13,"column_end":22},"name":"and_token","qualname":"::ty::TypeReference::and_token","value":"token::And","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6413},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372548,"byte_end":372556,"line_start":228,"line_end":228,"column_start":13,"column_end":21},"name":"lifetime","qualname":"::ty::TypeReference::lifetime","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6414},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372588,"byte_end":372598,"line_start":229,"line_end":229,"column_start":13,"column_end":23},"name":"mutability","qualname":"::ty::TypeReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6415},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372633,"byte_end":372637,"line_start":230,"line_end":230,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeReference::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6416},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372924,"byte_end":372933,"line_start":240,"line_end":240,"column_start":16,"column_end":25},"name":"TypeSlice","qualname":"::ty::TypeSlice","value":"TypeSlice { bracket_token, elem }","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6418}],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6417},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372948,"byte_end":372961,"line_start":241,"line_end":241,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::ty::TypeSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":6416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6418},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":372991,"byte_end":372995,"line_start":242,"line_end":242,"column_start":13,"column_end":17},"name":"elem","qualname":"::ty::TypeSlice::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6419},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":373342,"byte_end":373357,"line_start":253,"line_end":253,"column_start":16,"column_end":31},"name":"TypeTraitObject","qualname":"::ty::TypeTraitObject","value":"TypeTraitObject { dyn_token, bounds }","parent":null,"children":[{"krate":0,"index":6420},{"krate":0,"index":6421}],"decl_id":null,"docs":" A trait object type `dyn Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6420},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":373372,"byte_end":373381,"line_start":254,"line_end":254,"column_start":13,"column_end":22},"name":"dyn_token","qualname":"::ty::TypeTraitObject::dyn_token","value":"std::option::Option<token::Dyn>","parent":{"krate":0,"index":6419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6421},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":373416,"byte_end":373422,"line_start":255,"line_end":255,"column_start":13,"column_end":19},"name":"bounds","qualname":"::ty::TypeTraitObject::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6419},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6422},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":373733,"byte_end":373742,"line_start":265,"line_end":265,"column_start":16,"column_end":25},"name":"TypeTuple","qualname":"::ty::TypeTuple","value":"TypeTuple { paren_token, elems }","parent":null,"children":[{"krate":0,"index":6423},{"krate":0,"index":6424}],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6423},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":373757,"byte_end":373768,"line_start":266,"line_end":266,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::ty::TypeTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":6422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6424},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":373796,"byte_end":373801,"line_start":267,"line_end":267,"column_start":13,"column_end":18},"name":"elems","qualname":"::ty::TypeTuple::elems","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":6422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6425},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374117,"byte_end":374120,"line_start":277,"line_end":277,"column_start":16,"column_end":19},"name":"Abi","qualname":"::ty::Abi","value":"Abi { extern_token, name }","parent":null,"children":[{"krate":0,"index":6426},{"krate":0,"index":6427}],"decl_id":null,"docs":" The binary interface of a function: `extern \"C\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6426},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374135,"byte_end":374147,"line_start":278,"line_end":278,"column_start":13,"column_end":25},"name":"extern_token","qualname":"::ty::Abi::extern_token","value":"token::Extern","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6427},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374177,"byte_end":374181,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::Abi::name","value":"std::option::Option<lit::LitStr>","parent":{"krate":0,"index":6425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6428},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374502,"byte_end":374511,"line_start":289,"line_end":289,"column_start":16,"column_end":25},"name":"BareFnArg","qualname":"::ty::BareFnArg","value":"BareFnArg { attrs, name, ty }","parent":null,"children":[{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6431}],"decl_id":null,"docs":" An argument in a function type: the `usize` in `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6429},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374526,"byte_end":374531,"line_start":290,"line_end":290,"column_start":13,"column_end":18},"name":"attrs","qualname":"::ty::BareFnArg::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6430},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374561,"byte_end":374565,"line_start":291,"line_end":291,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::BareFnArg::name","value":"std::option::Option<(proc_macro2::Ident, token::Colon)>","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6431},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":374607,"byte_end":374609,"line_start":292,"line_end":292,"column_start":13,"column_end":15},"name":"ty","qualname":"::ty::BareFnArg::ty","value":"ty::Type","parent":{"krate":0,"index":6428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6432},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375132,"byte_end":375140,"line_start":312,"line_end":312,"column_start":16,"column_end":24},"name":"Variadic","qualname":"::ty::Variadic","value":"Variadic { attrs, dots }","parent":null,"children":[{"krate":0,"index":6433},{"krate":0,"index":6434}],"decl_id":null,"docs":" The variadic argument of a foreign function.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6433},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375155,"byte_end":375160,"line_start":313,"line_end":313,"column_start":13,"column_end":18},"name":"attrs","qualname":"::ty::Variadic::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":6432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6434},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375190,"byte_end":375194,"line_start":314,"line_end":314,"column_start":13,"column_end":17},"name":"dots","qualname":"::ty::Variadic::dots","value":"token::Dot3","parent":{"krate":0,"index":6432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6436},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375630,"byte_end":375637,"line_start":328,"line_end":328,"column_start":9,"column_end":16},"name":"Default","qualname":"::ty::ReturnType::Default","value":"ReturnType::Default","parent":{"krate":0,"index":6435},"children":[],"decl_id":null,"docs":" Return type is not specified.","sig":null,"attributes":[{"value":"/ Return type is not specified.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375498,"byte_end":375531,"line_start":325,"line_end":325,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375540,"byte_end":375543,"line_start":326,"line_end":326,"column_start":9,"column_end":12}},{"value":"/ Functions default to `()` and closures default to type inference.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375552,"byte_end":375621,"line_start":327,"line_end":327,"column_start":9,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6438},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375690,"byte_end":375694,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"name":"Type","qualname":"::ty::ReturnType::Type","value":"ReturnType::Type(crate::token::RArrow, Box<Type>)","parent":{"krate":0,"index":6435},"children":[],"decl_id":null,"docs":" A particular type is returned.\n","sig":null,"attributes":[{"value":"/ A particular type is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375647,"byte_end":375681,"line_start":329,"line_end":329,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":6440},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375695,"byte_end":375705,"line_start":330,"line_end":330,"column_start":14,"column_end":24},"name":"0","qualname":"::ty::ReturnType::Type::0","value":"token::RArrow","parent":{"krate":0,"index":6438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6441},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375707,"byte_end":375716,"line_start":330,"line_end":330,"column_start":26,"column_end":35},"name":"1","qualname":"::ty::ReturnType::Type::1","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6435},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":375477,"byte_end":375487,"line_start":324,"line_end":324,"column_start":14,"column_end":24},"name":"ReturnType","qualname":"::ty::ReturnType","value":"enum ReturnType { Default, Type(crate::token::RArrow, Box<Type>), }","parent":null,"children":[{"krate":0,"index":6436},{"krate":0,"index":6438}],"decl_id":null,"docs":" Return type of a function signature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376045,"byte_end":376050,"line_start":344,"line_end":344,"column_start":12,"column_end":17},"name":"parse","qualname":"<Type as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376619,"byte_end":376631,"line_start":358,"line_end":358,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<Type>::without_plus","value":"fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" In some positions, types may not contain the `+` character, to\n disambiguate them. For example in the expression `1 as T`, T may not\n contain a `+` character.","sig":null,"attributes":[{"value":"/ In some positions, types may not contain the `+` character, to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376270,"byte_end":376336,"line_start":352,"line_end":352,"column_start":9,"column_end":75}},{"value":"/ disambiguate them. For example in the expression `1 as T`, T may not","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376345,"byte_end":376417,"line_start":353,"line_end":353,"column_start":9,"column_end":81}},{"value":"/ contain a `+` character.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376426,"byte_end":376454,"line_start":354,"line_end":354,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376463,"byte_end":376466,"line_start":355,"line_end":355,"column_start":9,"column_end":12}},{"value":"/ This parser does not allow a `+`, while the default parser does.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376475,"byte_end":376543,"line_start":356,"line_end":356,"column_start":9,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":388980,"byte_end":388985,"line_start":658,"line_end":658,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeSlice as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":389307,"byte_end":389312,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeArray as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":389717,"byte_end":389722,"line_start":682,"line_end":682,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypePtr as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":390480,"byte_end":390485,"line_start":705,"line_end":705,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeReference as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":390949,"byte_end":390954,"line_start":718,"line_end":718,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeBareFn as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":392885,"byte_end":392890,"line_start":779,"line_end":779,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeNever as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":393130,"byte_end":393135,"line_start":788,"line_end":788,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeInfer as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":393381,"byte_end":393386,"line_start":797,"line_end":797,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeTuple as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":394462,"byte_end":394467,"line_start":830,"line_end":830,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeMacro as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":394699,"byte_end":394704,"line_start":839,"line_end":839,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypePath as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":396075,"byte_end":396087,"line_start":870,"line_end":870,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<ReturnType>::without_plus","value":"fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":396757,"byte_end":396762,"line_start":889,"line_end":889,"column_start":12,"column_end":17},"name":"parse","qualname":"<ReturnType as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":397000,"byte_end":397005,"line_start":897,"line_end":897,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeTraitObject as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":397241,"byte_end":397253,"line_start":905,"line_end":905,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<TypeTraitObject>::without_plus","value":"fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":399063,"byte_end":399068,"line_start":951,"line_end":951,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeImplTrait as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":399302,"byte_end":399314,"line_start":959,"line_end":959,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<TypeImplTrait>::without_plus","value":"fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":400621,"byte_end":400626,"line_start":994,"line_end":994,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeGroup as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":400969,"byte_end":400974,"line_start":1005,"line_end":1005,"column_start":12,"column_end":17},"name":"parse","qualname":"<TypeParen as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":401626,"byte_end":401631,"line_start":1026,"line_end":1026,"column_start":12,"column_end":17},"name":"parse","qualname":"<BareFnArg as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":404355,"byte_end":404360,"line_start":1100,"line_end":1100,"column_start":12,"column_end":17},"name":"parse","qualname":"<Abi as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":404636,"byte_end":404641,"line_start":1110,"line_end":1110,"column_start":12,"column_end":17},"name":"parse","qualname":"<Option<Abi> as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405158,"byte_end":405167,"line_start":1130,"line_end":1130,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeSlice as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405442,"byte_end":405451,"line_start":1139,"line_end":1139,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeArray as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405819,"byte_end":405828,"line_start":1150,"line_end":1150,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypePtr as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":406296,"byte_end":406305,"line_start":1164,"line_end":1164,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeReference as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":406640,"byte_end":406649,"line_start":1174,"line_end":1174,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeBareFn as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407464,"byte_end":407473,"line_start":1195,"line_end":1195,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeNever as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407675,"byte_end":407684,"line_start":1202,"line_end":1202,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeTuple as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407957,"byte_end":407966,"line_start":1211,"line_end":1211,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypePath as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408200,"byte_end":408209,"line_start":1218,"line_end":1218,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeTraitObject as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408457,"byte_end":408466,"line_start":1226,"line_end":1226,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeImplTrait as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408711,"byte_end":408720,"line_start":1234,"line_end":1234,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeGroup as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408993,"byte_end":409002,"line_start":1243,"line_end":1243,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeParen as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409275,"byte_end":409284,"line_start":1252,"line_end":1252,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeInfer as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409492,"byte_end":409501,"line_start":1259,"line_end":1259,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<TypeMacro as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409697,"byte_end":409706,"line_start":1266,"line_end":1266,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ReturnType as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410096,"byte_end":410105,"line_start":1279,"line_end":1279,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<BareFnArg as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410498,"byte_end":410507,"line_start":1291,"line_end":1291,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Variadic as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410748,"byte_end":410757,"line_start":1299,"line_end":1299,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Abi as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6442},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411255,"byte_end":411259,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Path","qualname":"::path::Path","value":"Path { leading_colon, segments }","parent":null,"children":[{"krate":0,"index":6443},{"krate":0,"index":6444}],"decl_id":null,"docs":" A path at which a named item is exported (e.g. `std::collections::HashMap`).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6443},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411274,"byte_end":411287,"line_start":11,"line_end":11,"column_start":13,"column_end":26},"name":"leading_colon","qualname":"::path::Path::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6444},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411321,"byte_end":411329,"line_start":12,"line_end":12,"column_start":13,"column_end":21},"name":"segments","qualname":"::path::Path::segments","value":"punctuated::Punctuated<path::PathSegment, token::Colon2>","parent":{"krate":0,"index":6442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411443,"byte_end":411447,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<Path as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6445},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411953,"byte_end":411964,"line_start":36,"line_end":36,"column_start":16,"column_end":27},"name":"PathSegment","qualname":"::path::PathSegment","value":"PathSegment { ident, arguments }","parent":null,"children":[{"krate":0,"index":6446},{"krate":0,"index":6447}],"decl_id":null,"docs":" A segment of a path together with any path arguments on that segment.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6446},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411979,"byte_end":411984,"line_start":37,"line_end":37,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::PathSegment::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6447},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412005,"byte_end":412014,"line_start":38,"line_end":38,"column_start":13,"column_end":22},"name":"arguments","qualname":"::path::PathSegment::arguments","value":"path::PathArguments","parent":{"krate":0,"index":6445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412107,"byte_end":412111,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"from","qualname":"<PathSegment as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6449},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412740,"byte_end":412744,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"None","qualname":"::path::PathArguments::None","value":"PathArguments::None","parent":{"krate":0,"index":6448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6451},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412810,"byte_end":412824,"line_start":71,"line_end":71,"column_start":9,"column_end":23},"name":"AngleBracketed","qualname":"::path::PathArguments::AngleBracketed","value":"PathArguments::AngleBracketed(AngleBracketedGenericArguments)","parent":{"krate":0,"index":6448},"children":[],"decl_id":null,"docs":" The `<'a, T>` in `std::slice::iter<'a, T>`.\n","sig":null,"attributes":[{"value":"/ The `<'a, T>` in `std::slice::iter<'a, T>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412754,"byte_end":412801,"line_start":70,"line_end":70,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6453},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412825,"byte_end":412855,"line_start":71,"line_end":71,"column_start":24,"column_end":54},"name":"0","qualname":"::path::PathArguments::AngleBracketed::0","value":"path::AngleBracketedGenericArguments","parent":{"krate":0,"index":6451},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6454},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412916,"byte_end":412929,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"Parenthesized","qualname":"::path::PathArguments::Parenthesized","value":"PathArguments::Parenthesized(ParenthesizedGenericArguments)","parent":{"krate":0,"index":6448},"children":[],"decl_id":null,"docs":" The `(A, B) -> C` in `Fn(A, B) -> C`.\n","sig":null,"attributes":[{"value":"/ The `(A, B) -> C` in `Fn(A, B) -> C`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412866,"byte_end":412907,"line_start":72,"line_end":72,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6456},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412930,"byte_end":412959,"line_start":73,"line_end":73,"column_start":23,"column_end":52},"name":"0","qualname":"::path::PathArguments::Parenthesized::0","value":"path::ParenthesizedGenericArguments","parent":{"krate":0,"index":6454},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6448},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412716,"byte_end":412729,"line_start":68,"line_end":68,"column_start":14,"column_end":27},"name":"PathArguments","qualname":"::path::PathArguments","value":"enum PathArguments {\n    None,\n    AngleBracketed(AngleBracketedGenericArguments),\n    Parenthesized(ParenthesizedGenericArguments),\n}","parent":null,"children":[{"krate":0,"index":6449},{"krate":0,"index":6451},{"krate":0,"index":6454}],"decl_id":null,"docs":" Angle bracketed or parenthesized arguments of a path segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413011,"byte_end":413018,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"default","qualname":"<PathArguments as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413100,"byte_end":413108,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PathArguments>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413353,"byte_end":413360,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"is_none","qualname":"<PathArguments>::is_none","value":"fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6458},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413892,"byte_end":413900,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::path::GenericArgument::Lifetime","value":"GenericArgument::Lifetime(Lifetime)","parent":{"krate":0,"index":6457},"children":[],"decl_id":null,"docs":" A lifetime argument.\n","sig":null,"attributes":[{"value":"/ A lifetime argument.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413859,"byte_end":413883,"line_start":107,"line_end":107,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6460},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413901,"byte_end":413909,"line_start":108,"line_end":108,"column_start":18,"column_end":26},"name":"0","qualname":"::path::GenericArgument::Lifetime::0","value":"lifetime::Lifetime","parent":{"krate":0,"index":6458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6461},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413949,"byte_end":413953,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"name":"Type","qualname":"::path::GenericArgument::Type","value":"GenericArgument::Type(Type)","parent":{"krate":0,"index":6457},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[{"value":"/ A type argument.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413920,"byte_end":413940,"line_start":109,"line_end":109,"column_start":9,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6463},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413954,"byte_end":413958,"line_start":110,"line_end":110,"column_start":14,"column_end":18},"name":"0","qualname":"::path::GenericArgument::Type::0","value":"ty::Type","parent":{"krate":0,"index":6461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6464},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414171,"byte_end":414176,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"name":"Const","qualname":"::path::GenericArgument::Const","value":"GenericArgument::Const(Expr)","parent":{"krate":0,"index":6457},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.","sig":null,"attributes":[{"value":"/ A const expression. Must be inside of a block.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413969,"byte_end":414019,"line_start":111,"line_end":111,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414028,"byte_end":414031,"line_start":112,"line_end":112,"column_start":9,"column_end":12}},{"value":"/ NOTE: Identity expressions are represented as Type arguments, as","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414040,"byte_end":414108,"line_start":113,"line_end":113,"column_start":9,"column_end":77}},{"value":"/ they are indistinguishable syntactically.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414117,"byte_end":414162,"line_start":114,"line_end":114,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414177,"byte_end":414181,"line_start":115,"line_end":115,"column_start":15,"column_end":19},"name":"0","qualname":"::path::GenericArgument::Const::0","value":"expr::Expr","parent":{"krate":0,"index":6464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6467},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414313,"byte_end":414320,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"name":"Binding","qualname":"::path::GenericArgument::Binding","value":"GenericArgument::Binding(Binding)","parent":{"krate":0,"index":6457},"children":[],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: the `Item =\n u8` in `Iterator<Item = u8>`.\n","sig":null,"attributes":[{"value":"/ A binding (equality constraint) on an associated type: the `Item =","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414192,"byte_end":414262,"line_start":116,"line_end":116,"column_start":9,"column_end":79}},{"value":"/ u8` in `Iterator<Item = u8>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414271,"byte_end":414304,"line_start":117,"line_end":117,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6469},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414321,"byte_end":414328,"line_start":118,"line_end":118,"column_start":17,"column_end":24},"name":"0","qualname":"::path::GenericArgument::Binding::0","value":"path::Binding","parent":{"krate":0,"index":6467},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6470},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414404,"byte_end":414414,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"name":"Constraint","qualname":"::path::GenericArgument::Constraint","value":"GenericArgument::Constraint(Constraint)","parent":{"krate":0,"index":6457},"children":[],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.\n","sig":null,"attributes":[{"value":"/ An associated type bound: `Iterator<Item: Display>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414339,"byte_end":414395,"line_start":119,"line_end":119,"column_start":9,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6472},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414415,"byte_end":414425,"line_start":120,"line_end":120,"column_start":20,"column_end":30},"name":"0","qualname":"::path::GenericArgument::Constraint::0","value":"path::Constraint","parent":{"krate":0,"index":6470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6457},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413833,"byte_end":413848,"line_start":106,"line_end":106,"column_start":14,"column_end":29},"name":"GenericArgument","qualname":"::path::GenericArgument","value":"enum GenericArgument {\n    Lifetime(Lifetime),\n    Type(Type),\n    Const(Expr),\n    Binding(Binding),\n    Constraint(Constraint),\n}","parent":null,"children":[{"krate":0,"index":6458},{"krate":0,"index":6461},{"krate":0,"index":6464},{"krate":0,"index":6467},{"krate":0,"index":6470}],"decl_id":null,"docs":" An individual generic argument, like `'a`, `T`, or `Item = T`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6473},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414749,"byte_end":414779,"line_start":131,"line_end":131,"column_start":16,"column_end":46},"name":"AngleBracketedGenericArguments","qualname":"::path::AngleBracketedGenericArguments","value":"AngleBracketedGenericArguments { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477}],"decl_id":null,"docs":" Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K,\n V>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6474},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414794,"byte_end":414806,"line_start":132,"line_end":132,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::path::AngleBracketedGenericArguments::colon2_token","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6475},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414840,"byte_end":414848,"line_start":133,"line_end":133,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::AngleBracketedGenericArguments::lt_token","value":"token::Lt","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6476},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414873,"byte_end":414877,"line_start":134,"line_end":134,"column_start":13,"column_end":17},"name":"args","qualname":"::path::AngleBracketedGenericArguments::args","value":"punctuated::Punctuated<path::GenericArgument, token::Comma>","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6477},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":414931,"byte_end":414939,"line_start":135,"line_end":135,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::AngleBracketedGenericArguments::gt_token","value":"token::Gt","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6478},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415255,"byte_end":415262,"line_start":145,"line_end":145,"column_start":16,"column_end":23},"name":"Binding","qualname":"::path::Binding","value":"Binding { ident, eq_token, ty }","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6480},{"krate":0,"index":6481}],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: `Item = u8`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6479},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415277,"byte_end":415282,"line_start":146,"line_end":146,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Binding::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6480},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415303,"byte_end":415311,"line_start":147,"line_end":147,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::path::Binding::eq_token","value":"token::Eq","parent":{"krate":0,"index":6478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6481},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415336,"byte_end":415338,"line_start":148,"line_end":148,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::Binding::ty","value":"ty::Type","parent":{"krate":0,"index":6478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6482},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415634,"byte_end":415644,"line_start":158,"line_end":158,"column_start":16,"column_end":26},"name":"Constraint","qualname":"::path::Constraint","value":"Constraint { ident, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6485}],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6483},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415659,"byte_end":415664,"line_start":159,"line_end":159,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Constraint::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6484},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415685,"byte_end":415696,"line_start":160,"line_end":160,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::path::Constraint::colon_token","value":"token::Colon","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6485},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":415721,"byte_end":415727,"line_start":161,"line_end":161,"column_start":13,"column_end":19},"name":"bounds","qualname":"::path::Constraint::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6486},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":416086,"byte_end":416115,"line_start":172,"line_end":172,"column_start":16,"column_end":45},"name":"ParenthesizedGenericArguments","qualname":"::path::ParenthesizedGenericArguments","value":"ParenthesizedGenericArguments { paren_token, inputs, output }","parent":null,"children":[{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489}],"decl_id":null,"docs":" Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) ->\n C`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6487},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":416130,"byte_end":416141,"line_start":173,"line_end":173,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::path::ParenthesizedGenericArguments::paren_token","value":"token::Paren","parent":{"krate":0,"index":6486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6488},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":416190,"byte_end":416196,"line_start":175,"line_end":175,"column_start":13,"column_end":19},"name":"inputs","qualname":"::path::ParenthesizedGenericArguments::inputs","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":6486},"children":[],"decl_id":null,"docs":" `(A, B)`\n","sig":null,"attributes":[{"value":"/ `(A, B)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":416165,"byte_end":416177,"line_start":174,"line_end":174,"column_start":9,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":6489},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":416255,"byte_end":416261,"line_start":177,"line_end":177,"column_start":13,"column_end":19},"name":"output","qualname":"::path::ParenthesizedGenericArguments::output","value":"ty::ReturnType","parent":{"krate":0,"index":6486},"children":[],"decl_id":null,"docs":" `C`\n","sig":null,"attributes":[{"value":"/ `C`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":416235,"byte_end":416242,"line_start":176,"line_end":176,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":6490},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417051,"byte_end":417056,"line_start":202,"line_end":202,"column_start":16,"column_end":21},"name":"QSelf","qualname":"::path::QSelf","value":"QSelf { lt_token, ty, position, as_token, gt_token }","parent":null,"children":[{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6495}],"decl_id":null,"docs":" The explicit Self type in a qualified path: the `T` in `<T as\n Display>::fmt`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6491},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417071,"byte_end":417079,"line_start":203,"line_end":203,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::QSelf::lt_token","value":"token::Lt","parent":{"krate":0,"index":6490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6492},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417104,"byte_end":417106,"line_start":204,"line_end":204,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::QSelf::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":6490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6493},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417131,"byte_end":417139,"line_start":205,"line_end":205,"column_start":13,"column_end":21},"name":"position","qualname":"::path::QSelf::position","value":"usize","parent":{"krate":0,"index":6490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6494},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417160,"byte_end":417168,"line_start":206,"line_end":206,"column_start":13,"column_end":21},"name":"as_token","qualname":"::path::QSelf::as_token","value":"std::option::Option<token::As>","parent":{"krate":0,"index":6490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6495},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417202,"byte_end":417210,"line_start":207,"line_end":207,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::QSelf::gt_token","value":"token::Gt","parent":{"krate":0,"index":6490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417473,"byte_end":417478,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"parse","qualname":"<Path as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417683,"byte_end":417688,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"parse","qualname":"<GenericArgument as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":422122,"byte_end":422127,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"parse","qualname":"<AngleBracketedGenericArguments as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423089,"byte_end":423094,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"parse","qualname":"<ParenthesizedGenericArguments as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423527,"byte_end":423532,"line_start":399,"line_end":399,"column_start":12,"column_end":17},"name":"parse","qualname":"<PathSegment as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":424642,"byte_end":424647,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"parse","qualname":"<Binding as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":427007,"byte_end":427022,"line_start":506,"line_end":506,"column_start":16,"column_end":31},"name":"parse_mod_style","qualname":"<Path>::parse_mod_style","value":"fn parse_mod_style(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Path` containing no path arguments on any of its segments.","sig":null,"attributes":[{"value":"/ Parse a `Path` containing no path arguments on any of its segments.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":425805,"byte_end":425876,"line_start":472,"line_end":472,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":425885,"byte_end":425888,"line_start":473,"line_end":473,"column_start":9,"column_end":12}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":425897,"byte_end":425970,"line_start":474,"line_end":474,"column_start":9,"column_end":82}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":425979,"byte_end":425992,"line_start":475,"line_end":475,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426001,"byte_end":426004,"line_start":476,"line_end":476,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426013,"byte_end":426026,"line_start":477,"line_end":477,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426035,"byte_end":426038,"line_start":478,"line_end":478,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426047,"byte_end":426054,"line_start":479,"line_end":479,"column_start":9,"column_end":16}},{"value":"/ use syn::{Path, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426063,"byte_end":426098,"line_start":480,"line_end":480,"column_start":9,"column_end":44}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426107,"byte_end":426148,"line_start":481,"line_end":481,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426157,"byte_end":426160,"line_start":482,"line_end":482,"column_start":9,"column_end":12}},{"value":"/ // A simplified single `use` statement like:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426169,"byte_end":426217,"line_start":483,"line_end":483,"column_start":9,"column_end":57}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426226,"byte_end":426232,"line_start":484,"line_end":484,"column_start":9,"column_end":15}},{"value":"/ //     use std::collections::HashMap;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426241,"byte_end":426282,"line_start":485,"line_end":485,"column_start":9,"column_end":50}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426291,"byte_end":426297,"line_start":486,"line_end":486,"column_start":9,"column_end":15}},{"value":"/ // Note that generic parameters are not allowed in a `use` statement","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426306,"byte_end":426378,"line_start":487,"line_end":487,"column_start":9,"column_end":81}},{"value":"/ // so the following must not be accepted.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426387,"byte_end":426432,"line_start":488,"line_end":488,"column_start":9,"column_end":54}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426441,"byte_end":426447,"line_start":489,"line_end":489,"column_start":9,"column_end":15}},{"value":"/ //     use a::<b>::c;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426456,"byte_end":426481,"line_start":490,"line_end":490,"column_start":9,"column_end":34}},{"value":"/ struct SingleUse {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426490,"byte_end":426512,"line_start":491,"line_end":491,"column_start":9,"column_end":31}},{"value":"/     use_token: Token![use],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426521,"byte_end":426552,"line_start":492,"line_end":492,"column_start":9,"column_end":40}},{"value":"/     path: Path,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426561,"byte_end":426580,"line_start":493,"line_end":493,"column_start":9,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426589,"byte_end":426594,"line_start":494,"line_end":494,"column_start":9,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426603,"byte_end":426606,"line_start":495,"line_end":495,"column_start":9,"column_end":12}},{"value":"/ impl Parse for SingleUse {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426615,"byte_end":426645,"line_start":496,"line_end":496,"column_start":9,"column_end":39}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426654,"byte_end":426708,"line_start":497,"line_end":497,"column_start":9,"column_end":63}},{"value":"/         Ok(SingleUse {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426717,"byte_end":426743,"line_start":498,"line_end":498,"column_start":9,"column_end":35}},{"value":"/             use_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426752,"byte_end":426794,"line_start":499,"line_end":499,"column_start":9,"column_end":51}},{"value":"/             path: input.call(Path::parse_mod_style)?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426803,"byte_end":426860,"line_start":500,"line_end":500,"column_start":9,"column_end":66}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426869,"byte_end":426883,"line_start":501,"line_end":501,"column_start":9,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426892,"byte_end":426901,"line_start":502,"line_end":502,"column_start":9,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426910,"byte_end":426915,"line_start":503,"line_end":503,"column_start":9,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":426924,"byte_end":426931,"line_start":504,"line_end":504,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429632,"byte_end":429640,"line_start":570,"line_end":570,"column_start":16,"column_end":24},"name":"is_ident","qualname":"<Path>::is_ident","value":"fn is_ident<I>(&Self, &I) -> bool where I: ?Sized, Ident: PartialEq<I>","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this is a path of length 1 equal to the given\n ident.","sig":null,"attributes":[{"value":"/ Determines whether this is a path of length 1 equal to the given","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428326,"byte_end":428394,"line_start":538,"line_end":538,"column_start":9,"column_end":77}},{"value":"/ ident.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428403,"byte_end":428413,"line_start":539,"line_end":539,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428422,"byte_end":428425,"line_start":540,"line_end":540,"column_start":9,"column_end":12}},{"value":"/ For them to compare equal, it must be the case that:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428434,"byte_end":428490,"line_start":541,"line_end":541,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428499,"byte_end":428502,"line_start":542,"line_end":542,"column_start":9,"column_end":12}},{"value":"/ - the path has no leading colon,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428511,"byte_end":428547,"line_start":543,"line_end":543,"column_start":9,"column_end":45}},{"value":"/ - the number of path segments is 1,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428556,"byte_end":428595,"line_start":544,"line_end":544,"column_start":9,"column_end":48}},{"value":"/ - the first path segment has no angle bracketed or parenthesized","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428604,"byte_end":428672,"line_start":545,"line_end":545,"column_start":9,"column_end":77}},{"value":"/   path arguments, and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428681,"byte_end":428706,"line_start":546,"line_end":546,"column_start":9,"column_end":34}},{"value":"/ - the ident of the first path segment is equal to the given one.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428715,"byte_end":428783,"line_start":547,"line_end":547,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428792,"byte_end":428795,"line_start":548,"line_end":548,"column_start":9,"column_end":12}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428804,"byte_end":428877,"line_start":549,"line_end":549,"column_start":9,"column_end":82}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428886,"byte_end":428899,"line_start":550,"line_end":550,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428908,"byte_end":428911,"line_start":551,"line_end":551,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428920,"byte_end":428933,"line_start":552,"line_end":552,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428942,"byte_end":428945,"line_start":553,"line_end":553,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428954,"byte_end":428961,"line_start":554,"line_end":554,"column_start":9,"column_end":16}},{"value":"/ use syn::{Attribute, Error, Meta, NestedMeta, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":428970,"byte_end":429028,"line_start":555,"line_end":555,"column_start":9,"column_end":67}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429037,"byte_end":429071,"line_start":556,"line_end":556,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429080,"byte_end":429083,"line_start":557,"line_end":557,"column_start":9,"column_end":12}},{"value":"/ fn get_serde_meta_items(attr: &Attribute) -> Result<Vec<NestedMeta>> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429092,"byte_end":429166,"line_start":558,"line_end":558,"column_start":9,"column_end":83}},{"value":"/     if attr.path.is_ident(\"serde\") {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429175,"byte_end":429215,"line_start":559,"line_end":559,"column_start":9,"column_end":49}},{"value":"/         match attr.parse_meta()? {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429224,"byte_end":429262,"line_start":560,"line_end":560,"column_start":9,"column_end":47}},{"value":"/             Meta::List(meta) => Ok(Vec::from_iter(meta.nested)),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429271,"byte_end":429339,"line_start":561,"line_end":561,"column_start":9,"column_end":77}},{"value":"/             bad => Err(Error::new_spanned(bad, \"unrecognized attribute\")),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429348,"byte_end":429426,"line_start":562,"line_end":562,"column_start":9,"column_end":87}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429435,"byte_end":429448,"line_start":563,"line_end":563,"column_start":9,"column_end":22}},{"value":"/     } else {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429457,"byte_end":429473,"line_start":564,"line_end":564,"column_start":9,"column_end":25}},{"value":"/         Ok(Vec::new())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429482,"byte_end":429508,"line_start":565,"line_end":565,"column_start":9,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429517,"byte_end":429526,"line_start":566,"line_end":566,"column_start":9,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429535,"byte_end":429540,"line_start":567,"line_end":567,"column_start":9,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429549,"byte_end":429556,"line_start":568,"line_end":568,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430406,"byte_end":430415,"line_start":592,"line_end":592,"column_start":16,"column_end":25},"name":"get_ident","qualname":"<Path>::get_ident","value":"fn get_ident(&Self) -> Option<&Ident>","parent":null,"children":[],"decl_id":null,"docs":" If this path consists of a single ident, returns the ident.","sig":null,"attributes":[{"value":"/ If this path consists of a single ident, returns the ident.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429877,"byte_end":429940,"line_start":580,"line_end":580,"column_start":9,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429949,"byte_end":429952,"line_start":581,"line_end":581,"column_start":9,"column_end":12}},{"value":"/ A path is considered an ident if:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":429961,"byte_end":429998,"line_start":582,"line_end":582,"column_start":9,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430007,"byte_end":430010,"line_start":583,"line_end":583,"column_start":9,"column_end":12}},{"value":"/ - the path has no leading colon,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430019,"byte_end":430055,"line_start":584,"line_end":584,"column_start":9,"column_end":45}},{"value":"/ - the number of path segments is 1, and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430064,"byte_end":430107,"line_start":585,"line_end":585,"column_start":9,"column_end":52}},{"value":"/ - the first path segment has no angle bracketed or parenthesized","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430116,"byte_end":430184,"line_start":586,"line_end":586,"column_start":9,"column_end":77}},{"value":"/   path arguments.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430193,"byte_end":430214,"line_start":587,"line_end":587,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430223,"byte_end":430226,"line_start":588,"line_end":588,"column_start":9,"column_end":12}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430235,"byte_end":430308,"line_start":589,"line_end":589,"column_start":9,"column_end":82}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":430317,"byte_end":430330,"line_start":590,"line_end":590,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":433965,"byte_end":433974,"line_start":695,"line_end":695,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Path as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434226,"byte_end":434235,"line_start":703,"line_end":703,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<PathSegment as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434482,"byte_end":434491,"line_start":711,"line_end":711,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<PathArguments as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":435032,"byte_end":435041,"line_start":727,"line_end":727,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<GenericArgument as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434987,"byte_end":435020,"line_start":726,"line_end":726,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":436235,"byte_end":436244,"line_start":754,"line_end":754,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<AngleBracketedGenericArguments as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":437870,"byte_end":437879,"line_start":795,"line_end":795,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Binding as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":438161,"byte_end":438170,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Constraint as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":438478,"byte_end":438487,"line_start":813,"line_end":813,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<ParenthesizedGenericArguments as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2061},{"krate":0,"index":2066},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105}],"decl_id":null,"docs":" A stably addressed token buffer supporting efficient traversal based on a\n cheaply copyable cursor.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15172,"byte_end":15199,"line_start":429,"line_end":429,"column_start":1,"column_end":28}},{"value":"/ A stably addressed token buffer supporting efficient traversal based on a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":439895,"byte_end":439972,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ cheaply copyable cursor.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":439973,"byte_end":440001,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":440002,"byte_end":440005,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ *This module is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":440006,"byte_end":440087,"line_start":4,"line_end":4,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441301,"byte_end":441312,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"TokenBuffer","qualname":"::buffer::TokenBuffer","value":"TokenBuffer {  }","parent":null,"children":[{"krate":0,"index":2055}],"decl_id":null,"docs":" A buffer that can be efficiently traversed multiple times, unlike\n `TokenStream` which requires a deep copy in order to traverse more than\n once.","sig":null,"attributes":[{"value":"/ A buffer that can be efficiently traversed multiple times, unlike","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441050,"byte_end":441119,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ `TokenStream` which requires a deep copy in order to traverse more than","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441120,"byte_end":441195,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ once.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441196,"byte_end":441205,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441206,"byte_end":441209,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ *This type is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441210,"byte_end":441289,"line_start":37,"line_end":37,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442865,"byte_end":442868,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenBuffer>::new","value":"fn new(pm::TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `proc_macro::TokenStream`.","sig":null,"attributes":[{"value":"/ Creates a `TokenBuffer` containing all the tokens from the input","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442479,"byte_end":442547,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ `proc_macro::TokenStream`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442552,"byte_end":442582,"line_start":65,"line_end":65,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442587,"byte_end":442590,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ *This method is available only if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442595,"byte_end":442675,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"/ `\"proc-macro\"` features.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442680,"byte_end":442709,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"cfg(all(not(all(target_arch = \"wasm32\",\nany(target_os = \"unknown\", target_os = \"wasi\"))), feature = \"proc-macro\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442714,"byte_end":442853,"line_start":69,"line_end":72,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443065,"byte_end":443069,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"new2","qualname":"<TokenBuffer>::new2","value":"fn new2(TokenStream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `proc_macro2::TokenStream`.\n","sig":null,"attributes":[{"value":"/ Creates a `TokenBuffer` containing all the tokens from the input","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":442949,"byte_end":443017,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/ `proc_macro2::TokenStream`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443022,"byte_end":443053,"line_start":78,"line_end":78,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443468,"byte_end":443473,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"begin","qualname":"<TokenBuffer>::begin","value":"fn begin(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing the first token in the buffer and able to\n traverse until the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Creates a cursor referencing the first token in the buffer and able to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443336,"byte_end":443410,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ traverse until the end of the buffer.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443415,"byte_end":443456,"line_start":89,"line_end":89,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444212,"byte_end":444218,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::buffer::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065}],"decl_id":null,"docs":" A cheaply copyable cursor into a `TokenBuffer`.","sig":null,"attributes":[{"value":"/ A cheaply copyable cursor into a `TokenBuffer`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443615,"byte_end":443666,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443667,"byte_end":443670,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This cursor holds a shared reference into the immutable data which is used","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443671,"byte_end":443749,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ internally to represent a `TokenStream`, and can be efficiently manipulated","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443750,"byte_end":443829,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ and copied around.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443830,"byte_end":443852,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443853,"byte_end":443856,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ An empty `Cursor` can be created directly, or one may create a `TokenBuffer`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443857,"byte_end":443937,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ object and get a cursor to its first token with `begin()`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":443938,"byte_end":444000,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444001,"byte_end":444004,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Two cursors are equal if they have the same location in the same input","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444005,"byte_end":444079,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ stream, and have the same scope.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444080,"byte_end":444116,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444117,"byte_end":444120,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ *This type is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444121,"byte_end":444200,"line_start":108,"line_end":108,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444720,"byte_end":444725,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"empty","qualname":"<Cursor>::empty","value":"fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing a static empty TokenStream.\n","sig":null,"attributes":[{"value":"/ Creates a cursor referencing a static empty TokenStream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444648,"byte_end":444708,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":447484,"byte_end":447487,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"eof","qualname":"<Cursor>::eof","value":"fn eof(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the cursor is currently pointing at the end of its valid\n scope.\n","sig":null,"attributes":[{"value":"/ Checks whether the cursor is currently pointing at the end of its valid","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":447382,"byte_end":447457,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ scope.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":447462,"byte_end":447472,"line_start":194,"line_end":194,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":447767,"byte_end":447772,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"group","qualname":"<Cursor>::group","value":"fn group(Self, Delimiter) -> Option<(Cursor, Span, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Group` with the given delimiter, returns\n a cursor into that group and one pointing to the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Group` with the given delimiter, returns","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":447604,"byte_end":447680,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ a cursor into that group and one pointing to the next `TokenTree`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":447685,"byte_end":447755,"line_start":201,"line_end":201,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":448754,"byte_end":448759,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"ident","qualname":"<Cursor>::ident","value":"fn ident(Self) -> Option<(Ident, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Ident`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Ident`, returns it along with a cursor","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":448626,"byte_end":448700,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":448705,"byte_end":448742,"line_start":223,"line_end":223,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449127,"byte_end":449132,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"punct","qualname":"<Cursor>::punct","value":"fn punct(Self) -> Option<(Punct, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Punct`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Punct`, returns it along with a cursor","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":448999,"byte_end":449073,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449078,"byte_end":449115,"line_start":233,"line_end":233,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449559,"byte_end":449566,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"literal","qualname":"<Cursor>::literal","value":"fn literal(Self) -> Option<(Literal, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Literal`, return it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Literal`, return it along with a cursor","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449430,"byte_end":449505,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449510,"byte_end":449547,"line_start":245,"line_end":245,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449945,"byte_end":449953,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"lifetime","qualname":"<Cursor>::lifetime","value":"fn lifetime(Self) -> Option<(Lifetime, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Lifetime`, returns it along with a\n cursor pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Lifetime`, returns it along with a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449814,"byte_end":449884,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ cursor pointing at the next `TokenTree`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":449889,"byte_end":449933,"line_start":255,"line_end":255,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":450602,"byte_end":450614,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"token_stream","qualname":"<Cursor>::token_stream","value":"fn token_stream(Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Copies all remaining tokens visible from this cursor into a\n `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Copies all remaining tokens visible from this cursor into a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":450504,"byte_end":450567,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/ `TokenStream`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":450572,"byte_end":450590,"line_start":273,"line_end":273,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451242,"byte_end":451252,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"token_tree","qualname":"<Cursor>::token_tree","value":"fn token_tree(Self) -> Option<(TokenTree, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `TokenTree`, returns it along with a\n cursor pointing at the next `TokenTree`.","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `TokenTree`, returns it along with a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":450870,"byte_end":450941,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ cursor pointing at the next `TokenTree`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":450946,"byte_end":450990,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":450995,"byte_end":450998,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cursor has reached the end of its stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451003,"byte_end":451070,"line_start":287,"line_end":287,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451075,"byte_end":451078,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method does not treat `None`-delimited groups as transparent, and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451083,"byte_end":451157,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ will return a `Group(None, ..)` if the cursor is looking at one.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451162,"byte_end":451230,"line_start":290,"line_end":290,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451905,"byte_end":451909,"line_start":306,"line_end":306,"column_start":12,"column_end":16},"name":"span","qualname":"<Cursor>::span","value":"fn span(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` of the current token, or `Span::call_site()` if this\n cursor points to eof.\n","sig":null,"attributes":[{"value":"/ Returns the `Span` of the current token, or `Span::call_site()` if this","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451788,"byte_end":451863,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ cursor points to eof.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":451868,"byte_end":451893,"line_start":305,"line_end":305,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453104,"byte_end":453109,"line_start":343,"line_end":343,"column_start":8,"column_end":13},"name":"clone","qualname":"<Cursor as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453224,"byte_end":453226,"line_start":351,"line_end":351,"column_start":8,"column_end":10},"name":"eq","qualname":"<Cursor as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453341,"byte_end":453352,"line_start":357,"line_end":357,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Cursor as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2182},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2192}],"decl_id":null,"docs":" Extension traits to provide parsing methods on foreign types.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15279,"byte_end":15306,"line_start":433,"line_end":433,"column_start":1,"column_end":28}},{"value":"/ Extension traits to provide parsing methods on foreign types.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":455859,"byte_end":455924,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":455925,"byte_end":455928,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *This module is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":455929,"byte_end":456010,"line_start":3,"line_end":3,"column_start":1,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456500,"byte_end":456508,"line_start":18,"line_end":18,"column_start":11,"column_end":19},"name":"IdentExt","qualname":"::ext::IdentExt","value":"IdentExt: Sized + private::Sealed","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181}],"decl_id":null,"docs":" Additional methods for `Ident` not provided by proc-macro2 or libproc_macro.","sig":null,"attributes":[{"value":"/ Additional methods for `Ident` not provided by proc-macro2 or libproc_macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456190,"byte_end":456270,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456271,"byte_end":456274,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of Syn. It","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456275,"byte_end":456354,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ is implemented only for `proc_macro2::Ident`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456355,"byte_end":456404,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456405,"byte_end":456408,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ *This trait is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456409,"byte_end":456489,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457386,"byte_end":457395,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"parse_any","qualname":"::ext::IdentExt::parse_any","value":"fn parse_any(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Parses any identifier including keywords.","sig":null,"attributes":[{"value":"/ Parses any identifier including keywords.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456540,"byte_end":456585,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456590,"byte_end":456593,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This is useful when parsing macro input which allows Rust keywords as","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456598,"byte_end":456671,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ identifiers.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456676,"byte_end":456692,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456697,"byte_end":456700,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456705,"byte_end":456718,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456723,"byte_end":456726,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456731,"byte_end":456738,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use syn::{Error, Ident, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456743,"byte_end":456786,"line_start":27,"line_end":27,"column_start":5,"column_end":48}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456791,"byte_end":456818,"line_start":28,"line_end":28,"column_start":5,"column_end":32}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456823,"byte_end":456855,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456860,"byte_end":456863,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ mod kw {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456868,"byte_end":456880,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/     syn::custom_keyword!(name);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456885,"byte_end":456920,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456925,"byte_end":456930,"line_start":33,"line_end":33,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456935,"byte_end":456938,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ // Parses input that looks like `name = NAME` where `NAME` can be","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456943,"byte_end":457012,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ // any identifier.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457017,"byte_end":457039,"line_start":36,"line_end":36,"column_start":5,"column_end":27}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457044,"byte_end":457050,"line_start":37,"line_end":37,"column_start":5,"column_end":11}},{"value":"/ // Examples:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457055,"byte_end":457071,"line_start":38,"line_end":38,"column_start":5,"column_end":21}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457076,"byte_end":457082,"line_start":39,"line_end":39,"column_start":5,"column_end":11}},{"value":"/ //     name = anything","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457087,"byte_end":457113,"line_start":40,"line_end":40,"column_start":5,"column_end":31}},{"value":"/ //     name = impl","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457118,"byte_end":457140,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/ fn parse_dsl(input: ParseStream) -> Result<Ident> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457145,"byte_end":457200,"line_start":42,"line_end":42,"column_start":5,"column_end":60}},{"value":"/     input.parse::<kw::name>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457205,"byte_end":457240,"line_start":43,"line_end":43,"column_start":5,"column_end":40}},{"value":"/     input.parse::<Token![=]>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457245,"byte_end":457281,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/     let name = input.call(Ident::parse_any)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457286,"byte_end":457335,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/     Ok(name)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457340,"byte_end":457356,"line_start":46,"line_end":46,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457361,"byte_end":457366,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457371,"byte_end":457378,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457719,"byte_end":457727,"line_start":57,"line_end":57,"column_start":11,"column_end":19},"name":"peek_any","qualname":"::ext::IdentExt::peek_any","value":"private::PeekFn","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Peeks any identifier including keywords. Usage:\n `input.peek(Ident::peek_any)`","sig":null,"attributes":[{"value":"/ Peeks any identifier including keywords. Usage:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457438,"byte_end":457489,"line_start":51,"line_end":51,"column_start":5,"column_end":56}},{"value":"/ `input.peek(Ident::peek_any)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457494,"byte_end":457527,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457532,"byte_end":457535,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This is different from `input.peek(Ident)` which only returns true in","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457540,"byte_end":457613,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the case of an ident which is not a Rust keyword.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457618,"byte_end":457671,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457676,"byte_end":457708,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458821,"byte_end":458826,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"unraw","qualname":"::ext::IdentExt::unraw","value":"fn unraw(&Self) -> Ident","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" Strips the raw marker `r#`, if any, from the beginning of an ident.","sig":null,"attributes":[{"value":"/ Strips the raw marker `r#`, if any, from the beginning of an ident.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457769,"byte_end":457840,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457845,"byte_end":457848,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/   - unraw(`x`) = `x`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457853,"byte_end":457877,"line_start":61,"line_end":61,"column_start":5,"column_end":29}},{"value":"/   - unraw(`move`) = `move`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457882,"byte_end":457912,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/   - unraw(`r#move`) = `move`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457917,"byte_end":457949,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457954,"byte_end":457957,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457962,"byte_end":457975,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457980,"byte_end":457983,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ In the case of interop with other languages like Python that have a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":457988,"byte_end":458059,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ different set of keywords than Rust, we might come across macro input","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458064,"byte_end":458137,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ that involves raw identifiers to refer to ordinary variables in the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458142,"byte_end":458213,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ other language with a name that happens to be a Rust keyword.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458218,"byte_end":458283,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458288,"byte_end":458291,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The function below appends an identifier from the caller's input onto a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458296,"byte_end":458371,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ fixed prefix. Without using `unraw()`, this would tend to produce","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458376,"byte_end":458445,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ invalid identifiers like `__pyo3_get_r#move`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458450,"byte_end":458499,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458504,"byte_end":458507,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458512,"byte_end":458519,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458524,"byte_end":458550,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ use syn::Ident;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458555,"byte_end":458574,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458579,"byte_end":458606,"line_start":79,"line_end":79,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458611,"byte_end":458614,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ fn ident_for_getter(variable: &Ident) -> Ident {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458619,"byte_end":458671,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"/     let getter = format!(\"__pyo3_get_{}\", variable.unraw());","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458676,"byte_end":458740,"line_start":82,"line_end":82,"column_start":5,"column_end":69}},{"value":"/     Ident::new(&getter, Span::call_site())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458745,"byte_end":458791,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458796,"byte_end":458801,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458806,"byte_end":458813,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458880,"byte_end":458889,"line_start":90,"line_end":90,"column_start":8,"column_end":17},"name":"parse_any","qualname":"<Ident as ext::IdentExt>::parse_any","value":"fn parse_any(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2178},"children":[],"decl_id":{"krate":0,"index":2179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459115,"byte_end":459120,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"unraw","qualname":"<Ident as ext::IdentExt>::unraw","value":"fn unraw(&Self) -> Ident","parent":{"krate":0,"index":2178},"children":[],"decl_id":{"krate":0,"index":2181},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459446,"byte_end":459450,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"peek","qualname":"<private::IdentAny as token::CustomToken>::peek","value":"fn peek(Cursor) -> bool","parent":{"krate":0,"index":176},"children":[],"decl_id":{"krate":0,"index":177},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459524,"byte_end":459531,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"display","qualname":"<private::IdentAny as token::CustomToken>::display","value":"fn display() -> &'static str","parent":{"krate":0,"index":176},"children":[],"decl_id":{"krate":0,"index":178},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459686,"byte_end":459692,"line_start":126,"line_end":126,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459742,"byte_end":459748,"line_start":130,"line_end":130,"column_start":16,"column_end":22},"name":"PeekFn","qualname":"::ext::private::PeekFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459765,"byte_end":459773,"line_start":131,"line_end":131,"column_start":16,"column_end":24},"name":"IdentAny","qualname":"::ext::private::IdentAny","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459843,"byte_end":459848,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"clone","qualname":"<PeekFn as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"punctuated","qualname":"::punctuated","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2216},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2253},{"krate":0,"index":2283},{"krate":0,"index":2287},{"krate":0,"index":2292},{"krate":0,"index":2297},{"krate":0,"index":2302},{"krate":0,"index":2307},{"krate":0,"index":2315},{"krate":0,"index":2322},{"krate":0,"index":2329},{"krate":0,"index":2333},{"krate":0,"index":2339},{"krate":0,"index":2348},{"krate":0,"index":2355},{"krate":0,"index":2360},{"krate":0,"index":2365},{"krate":0,"index":2371},{"krate":0,"index":2380},{"krate":0,"index":2387},{"krate":0,"index":2392},{"krate":0,"index":2397},{"krate":0,"index":2405},{"krate":0,"index":2411},{"krate":0,"index":2415},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2427},{"krate":0,"index":2430},{"krate":0,"index":2433},{"krate":0,"index":2436},{"krate":0,"index":2440},{"krate":0,"index":2444},{"krate":0,"index":2450},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2461},{"krate":0,"index":2467},{"krate":0,"index":2471},{"krate":0,"index":2475},{"krate":0,"index":2483},{"krate":0,"index":2490},{"krate":0,"index":2495},{"krate":0,"index":2500},{"krate":0,"index":2505},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2518},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2531},{"krate":0,"index":2535},{"krate":0,"index":2539},{"krate":0,"index":2547},{"krate":0,"index":2554},{"krate":0,"index":2559},{"krate":0,"index":2563},{"krate":0,"index":2573},{"krate":0,"index":2583},{"krate":0,"index":2587},{"krate":0,"index":2592},{"krate":0,"index":2596}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes separated by punctuation.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes separated by punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":459903,"byte_end":459975,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":459976,"byte_end":459979,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Lots of things in Rust are punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":459980,"byte_end":460032,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460033,"byte_end":460036,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The fields of a struct are `Punctuated<Field, Token![,]>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460037,"byte_end":460101,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ - The segments of a path are `Punctuated<PathSegment, Token![::]>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460102,"byte_end":460173,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ - The bounds on a generic parameter are `Punctuated<TypeParamBound,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460174,"byte_end":460245,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/   Token![+]>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460246,"byte_end":460264,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ - The arguments to a function call are `Punctuated<Expr, Token![,]>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460265,"byte_end":460338,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460339,"byte_end":460342,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module provides a common representation for these punctuated sequences","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460343,"byte_end":460422,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ in the form of the [`Punctuated<T, P>`] type. We store a vector of pairs of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460423,"byte_end":460502,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ syntax tree node + punctuation, where every node in the sequence is followed","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460503,"byte_end":460583,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ by punctuation except for possibly the final one.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460584,"byte_end":460637,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460638,"byte_end":460641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Punctuated<T, P>`]: Punctuated","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460642,"byte_end":460678,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460679,"byte_end":460682,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460683,"byte_end":460694,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ a_function_call(arg1, arg2, arg3);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460695,"byte_end":460733,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/                 ~~~~^ ~~~~^ ~~~~","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460734,"byte_end":460770,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":460771,"byte_end":460778,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461485,"byte_end":461495,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"Punctuated","qualname":"::punctuated::Punctuated","value":"Punctuated {  }","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2252}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes of type `T` separated by\n punctuation of type `P`.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes of type `T` separated by","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461252,"byte_end":461323,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ punctuation of type `P`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461324,"byte_end":461352,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461353,"byte_end":461356,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461357,"byte_end":461436,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461437,"byte_end":461440,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461441,"byte_end":461473,"line_start":46,"line_end":46,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461688,"byte_end":461691,"line_start":55,"line_end":55,"column_start":18,"column_end":21},"name":"new","qualname":"<Punctuated<T, P>>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty punctuated sequence.\n","sig":null,"attributes":[{"value":"/ Creates an empty punctuated sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461591,"byte_end":461632,"line_start":53,"line_end":53,"column_start":5,"column_end":46}},{"value":"cfg(not(syn_no_const_vec_new))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461637,"byte_end":461670,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462134,"byte_end":462142,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Punctuated<T, P>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence is empty, meaning it\n contains no syntax tree nodes or punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence is empty, meaning it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462000,"byte_end":462068,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ contains no syntax tree nodes or punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462073,"byte_end":462122,"line_start":72,"line_end":72,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462415,"byte_end":462418,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"len","qualname":"<Punctuated<T, P>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of syntax tree nodes in this punctuated sequence.","sig":null,"attributes":[{"value":"/ Returns the number of syntax tree nodes in this punctuated sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462224,"byte_end":462296,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462301,"byte_end":462304,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is the number of nodes of type `T`, not counting the punctuation of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462309,"byte_end":462385,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ type `P`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462390,"byte_end":462403,"line_start":80,"line_end":80,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462574,"byte_end":462579,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"first","qualname":"<Punctuated<T, P>>::first","value":"fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the first element in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the first element in this sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462515,"byte_end":462562,"line_start":85,"line_end":85,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462708,"byte_end":462717,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Punctuated<T, P>>::first_mut","value":"fn first_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the first element in this sequence.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the first element in this sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462641,"byte_end":462696,"line_start":90,"line_end":90,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462849,"byte_end":462853,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"last","qualname":"<Punctuated<T, P>>::last","value":"fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the last element in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the last element in this sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462791,"byte_end":462837,"line_start":95,"line_end":95,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462986,"byte_end":462994,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Punctuated<T, P>>::last_mut","value":"fn last_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the last element in this sequence.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the last element in this sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":462920,"byte_end":462974,"line_start":100,"line_end":100,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463154,"byte_end":463158,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"iter","qualname":"<Punctuated<T, P>>::iter","value":"fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over borrowed syntax tree nodes of type `&T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over borrowed syntax tree nodes of type `&T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463073,"byte_end":463142,"line_start":105,"line_end":105,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463500,"byte_end":463508,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Punctuated<T, P>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutably borrowed syntax tree nodes of type\n `&mut T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over mutably borrowed syntax tree nodes of type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463399,"byte_end":463470,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ `&mut T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463475,"byte_end":463488,"line_start":116,"line_end":116,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463874,"byte_end":463879,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"pairs","qualname":"<Punctuated<T, P>>::pairs","value":"fn pairs(&Self) -> Pairs<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as borrowed\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as borrowed","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463766,"byte_end":463836,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ punctuated pairs.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":463841,"byte_end":463862,"line_start":127,"line_end":127,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464162,"byte_end":464171,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"pairs_mut","qualname":"<Punctuated<T, P>>::pairs_mut","value":"fn pairs_mut(&mut Self) -> PairsMut<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as mutably\n borrowed punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as mutably","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464046,"byte_end":464115,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/ borrowed punctuated pairs.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464120,"byte_end":464150,"line_start":136,"line_end":136,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464457,"byte_end":464467,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"into_pairs","qualname":"<Punctuated<T, P>>::into_pairs","value":"fn into_pairs(Self) -> IntoPairs<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as owned\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as owned","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464352,"byte_end":464419,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ punctuated pairs.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464424,"byte_end":464445,"line_start":145,"line_end":145,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465092,"byte_end":465102,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"push_value","qualname":"<Punctuated<T, P>>::push_value","value":"fn push_value(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence. The\n sequence must previously have a trailing punctuation.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence. The","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464632,"byte_end":464708,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ sequence must previously have a trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464713,"byte_end":464770,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464775,"byte_end":464778,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Use [`push`] instead if the punctuated sequence may or may not already","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464783,"byte_end":464857,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ have trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464862,"byte_end":464892,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464897,"byte_end":464900,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`push`]: Punctuated::push","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464905,"byte_end":464935,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464940,"byte_end":464943,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464948,"byte_end":464960,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464965,"byte_end":464968,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence does not already have a trailing punctuation when","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":464973,"byte_end":465049,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ this method is called.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465054,"byte_end":465080,"line_start":164,"line_end":164,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465645,"byte_end":465655,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"push_punct","qualname":"<Punctuated<T, P>>::push_punct","value":"fn push_punct(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Appends a trailing punctuation onto the end of this punctuated sequence.\n The sequence must be non-empty and must not already have trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Appends a trailing punctuation onto the end of this punctuated sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465350,"byte_end":465426,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ The sequence must be non-empty and must not already have trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465431,"byte_end":465500,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465505,"byte_end":465521,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465526,"byte_end":465529,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465534,"byte_end":465546,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465551,"byte_end":465554,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence is empty or already has a trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465559,"byte_end":465633,"line_start":180,"line_end":180,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466085,"byte_end":466088,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"pop","qualname":"<Punctuated<T, P>>::pop","value":"fn pop(&mut Self) -> Option<Pair<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last punctuated pair from this sequence, or `None` if the\n sequence is empty.\n","sig":null,"attributes":[{"value":"/ Removes the last punctuated pair from this sequence, or `None` if the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":465973,"byte_end":466046,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ sequence is empty.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466051,"byte_end":466073,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466414,"byte_end":466428,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"trailing_punct","qualname":"<Punctuated<T, P>>::trailing_punct","value":"fn trailing_punct(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence ends with a trailing\n punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence ends with a trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466313,"byte_end":466381,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466386,"byte_end":466402,"line_start":202,"line_end":202,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466699,"byte_end":466716,"line_start":211,"line_end":211,"column_start":12,"column_end":29},"name":"empty_or_trailing","qualname":"<Punctuated<T, P>>::empty_or_trailing","value":"fn empty_or_trailing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if either this `Punctuated` is empty, or it has a trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Returns true if either this `Punctuated` is empty, or it has a trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466505,"byte_end":466580,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466585,"byte_end":466601,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466606,"byte_end":466609,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `punctuated.is_empty() || punctuated.trailing_punct()`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466614,"byte_end":466687,"line_start":210,"line_end":210,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467063,"byte_end":467067,"line_start":220,"line_end":220,"column_start":12,"column_end":16},"name":"push","qualname":"<Punctuated<T, P>>::push","value":"fn push(&mut Self, T) where P: Default","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466773,"byte_end":466845,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466850,"byte_end":466853,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If there is not a trailing punctuation in this sequence when this method","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466858,"byte_end":466934,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ is called, the default value of punctuation type `P` is inserted before","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":466939,"byte_end":467014,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ the given value of type `T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467019,"byte_end":467051,"line_start":219,"line_end":219,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467467,"byte_end":467473,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"insert","qualname":"<Punctuated<T, P>>::insert","value":"fn insert(&mut Self, usize, T) where P: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts an element at position `index`.","sig":null,"attributes":[{"value":"/ Inserts an element at position `index`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467266,"byte_end":467309,"line_start":230,"line_end":230,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467314,"byte_end":467317,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467322,"byte_end":467334,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467339,"byte_end":467342,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is greater than the number of elements previously in","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467347,"byte_end":467421,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ this punctuated sequence.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467426,"byte_end":467455,"line_start":235,"line_end":235,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467912,"byte_end":467917,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"clear","qualname":"<Punctuated<T, P>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the sequence of all values and punctuation, making it empty.\n","sig":null,"attributes":[{"value":"/ Clears the sequence of all values and punctuation, making it empty.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467829,"byte_end":467900,"line_start":252,"line_end":252,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468471,"byte_end":468487,"line_start":268,"line_end":268,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<Punctuated<T, P>>::parse_terminated","value":"fn parse_terminated(ParseStream) -> Result<Self> where T: Parse, P: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` separated by punctuation of type\n `P`, with optional trailing punctuation.","sig":null,"attributes":[{"value":"/ Parses zero or more occurrences of `T` separated by punctuation of type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":467996,"byte_end":468071,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ `P`, with optional trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468076,"byte_end":468120,"line_start":259,"line_end":259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468125,"byte_end":468128,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Parsing continues until the end of this parse stream. The entire content","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468133,"byte_end":468209,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ of this parse stream must consist of `T` and `P`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468214,"byte_end":468267,"line_start":262,"line_end":262,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468272,"byte_end":468275,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468280,"byte_end":468353,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468358,"byte_end":468371,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468376,"byte_end":468403,"line_start":266,"line_end":266,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469186,"byte_end":469207,"line_start":289,"line_end":289,"column_start":12,"column_end":33},"name":"parse_terminated_with","qualname":"<Punctuated<T, P>>::parse_terminated_with","value":"fn parse_terminated_with(ParseStream, for<'_> fn(: ParseStream) -> Result<T>)\n-> Result<Self> where P: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` using the given parse function,\n separated by punctuation of type `P`, with optional trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Parses zero or more occurrences of `T` using the given parse function,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468640,"byte_end":468714,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ separated by punctuation of type `P`, with optional trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468719,"byte_end":468783,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468788,"byte_end":468804,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468809,"byte_end":468812,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Like [`parse_terminated`], the entire content of this stream is expected","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468817,"byte_end":468893,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ to be parsed.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468898,"byte_end":468915,"line_start":281,"line_end":281,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468920,"byte_end":468923,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ [`parse_terminated`]: Punctuated::parse_terminated","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468928,"byte_end":468982,"line_start":283,"line_end":283,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468987,"byte_end":468990,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":468995,"byte_end":469068,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469073,"byte_end":469086,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469091,"byte_end":469118,"line_start":287,"line_end":287,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470341,"byte_end":470365,"line_start":326,"line_end":326,"column_start":12,"column_end":36},"name":"parse_separated_nonempty","qualname":"<Punctuated<T, P>>::parse_separated_nonempty","value":"fn parse_separated_nonempty(ParseStream) -> Result<Self> where T: Parse,\nP: Token + Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses one or more occurrences of `T` separated by punctuation of type\n `P`, not accepting trailing punctuation.","sig":null,"attributes":[{"value":"/ Parses one or more occurrences of `T` separated by punctuation of type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469754,"byte_end":469828,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ `P`, not accepting trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469833,"byte_end":469877,"line_start":315,"line_end":315,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469882,"byte_end":469885,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Parsing continues as long as punctuation `P` is present at the head of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469890,"byte_end":469964,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ the stream. This method returns upon parsing a `T` and observing that it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":469969,"byte_end":470045,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ is not followed by a `P`, even if there are remaining tokens in the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470050,"byte_end":470121,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470126,"byte_end":470137,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470142,"byte_end":470145,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470150,"byte_end":470223,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470228,"byte_end":470241,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470246,"byte_end":470273,"line_start":324,"line_end":324,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":471113,"byte_end":471142,"line_start":347,"line_end":347,"column_start":12,"column_end":41},"name":"parse_separated_nonempty_with","qualname":"<Punctuated<T, P>>::parse_separated_nonempty_with","value":"fn parse_separated_nonempty_with(ParseStream,\nfor<'_> fn(: ParseStream) -> Result<T>) -> Result<Self> where P: Token + Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses one or more occurrences of `T` using the given parse function,\n separated by punctuation of type `P`, not accepting trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Parses one or more occurrences of `T` using the given parse function,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470534,"byte_end":470607,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ separated by punctuation of type `P`, not accepting trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470612,"byte_end":470676,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470681,"byte_end":470697,"line_start":336,"line_end":336,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470702,"byte_end":470705,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Like [`parse_separated_nonempty`], may complete early without parsing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470710,"byte_end":470783,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ the entire content of this stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470788,"byte_end":470826,"line_start":339,"line_end":339,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470831,"byte_end":470834,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`parse_separated_nonempty`]: Punctuated::parse_separated_nonempty","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470839,"byte_end":470909,"line_start":341,"line_end":341,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470914,"byte_end":470917,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":470922,"byte_end":470995,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":471000,"byte_end":471013,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":471018,"byte_end":471045,"line_start":345,"line_end":345,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":471801,"byte_end":471806,"line_start":377,"line_end":377,"column_start":8,"column_end":13},"name":"clone","qualname":"<Punctuated<T, P> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473274,"byte_end":473283,"line_start":441,"line_end":441,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Punctuated<T, P> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = T>","parent":{"krate":2,"index":8282},"children":[],"decl_id":{"krate":2,"index":8284},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473485,"byte_end":473491,"line_start":452,"line_end":452,"column_start":8,"column_end":14},"name":"extend","qualname":"<Punctuated<T, P> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = T>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473678,"byte_end":473687,"line_start":460,"line_end":460,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Punctuated<T, P> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Pair<T, P>>","parent":{"krate":2,"index":8282},"children":[],"decl_id":{"krate":2,"index":8284},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473885,"byte_end":473891,"line_start":468,"line_end":468,"column_start":8,"column_end":14},"name":"extend","qualname":"<Punctuated<T, P> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = Pair<T, P>>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":474653,"byte_end":474662,"line_start":494,"line_end":494,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Punctuated<T, P> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475063,"byte_end":475072,"line_start":509,"line_end":509,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Punctuated<T, P> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475269,"byte_end":475278,"line_start":518,"line_end":518,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut Punctuated<T, P> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475398,"byte_end":475405,"line_start":524,"line_end":524,"column_start":8,"column_end":15},"name":"default","qualname":"<Punctuated<T, P> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475645,"byte_end":475650,"line_start":534,"line_end":534,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::punctuated::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":2337},{"krate":0,"index":2338}],"decl_id":null,"docs":" An iterator over borrowed pairs of type `Pair<&T, &P>`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed pairs of type `Pair<&T, &P>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475453,"byte_end":475512,"line_start":529,"line_end":529,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475513,"byte_end":475516,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475517,"byte_end":475596,"line_start":531,"line_end":531,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475597,"byte_end":475600,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475601,"byte_end":475633,"line_start":533,"line_end":533,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475835,"byte_end":475839,"line_start":542,"line_end":542,"column_start":8,"column_end":12},"name":"next","qualname":"<Pairs as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476035,"byte_end":476044,"line_start":549,"line_end":549,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pairs as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476192,"byte_end":476201,"line_start":555,"line_end":555,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Pairs as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476459,"byte_end":476462,"line_start":564,"line_end":564,"column_start":8,"column_end":11},"name":"len","qualname":"<Pairs as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476612,"byte_end":476617,"line_start":571,"line_end":571,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pairs as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476954,"byte_end":476962,"line_start":584,"line_end":584,"column_start":12,"column_end":20},"name":"PairsMut","qualname":"::punctuated::PairsMut","value":"PairsMut {  }","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370}],"decl_id":null,"docs":" An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476746,"byte_end":476821,"line_start":579,"line_end":579,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476822,"byte_end":476825,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476826,"byte_end":476905,"line_start":581,"line_end":581,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476906,"byte_end":476909,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476910,"byte_end":476942,"line_start":583,"line_end":583,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477165,"byte_end":477169,"line_start":592,"line_end":592,"column_start":8,"column_end":12},"name":"next","qualname":"<PairsMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477365,"byte_end":477374,"line_start":599,"line_end":599,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PairsMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477525,"byte_end":477534,"line_start":605,"line_end":605,"column_start":8,"column_end":17},"name":"next_back","qualname":"<PairsMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477795,"byte_end":477798,"line_start":614,"line_end":614,"column_start":8,"column_end":11},"name":"len","qualname":"<PairsMut as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478056,"byte_end":478065,"line_start":624,"line_end":624,"column_start":12,"column_end":21},"name":"IntoPairs","qualname":"::punctuated::IntoPairs","value":"IntoPairs {  }","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396}],"decl_id":null,"docs":" An iterator over owned pairs of type `Pair<T, P>`.","sig":null,"attributes":[{"value":"/ An iterator over owned pairs of type `Pair<T, P>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477869,"byte_end":477923,"line_start":619,"line_end":619,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477924,"byte_end":477927,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477928,"byte_end":478007,"line_start":621,"line_end":621,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478008,"byte_end":478011,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478012,"byte_end":478044,"line_start":623,"line_end":623,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478220,"byte_end":478224,"line_start":632,"line_end":632,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoPairs<T, P> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478420,"byte_end":478429,"line_start":639,"line_end":639,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoPairs<T, P> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478573,"byte_end":478582,"line_start":645,"line_end":645,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoPairs<T, P> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478836,"byte_end":478839,"line_start":654,"line_end":654,"column_start":8,"column_end":11},"name":"len","qualname":"<IntoPairs<T, P> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478990,"byte_end":478995,"line_start":664,"line_end":664,"column_start":8,"column_end":13},"name":"clone","qualname":"<IntoPairs<T, P> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479307,"byte_end":479315,"line_start":677,"line_end":677,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::punctuated::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":2421}],"decl_id":null,"docs":" An iterator over owned values of type `T`.","sig":null,"attributes":[{"value":"/ An iterator over owned values of type `T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479128,"byte_end":479174,"line_start":672,"line_end":672,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479175,"byte_end":479178,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479179,"byte_end":479258,"line_start":674,"line_end":674,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479259,"byte_end":479262,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479263,"byte_end":479295,"line_start":676,"line_end":676,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479415,"byte_end":479419,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<T> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479495,"byte_end":479504,"line_start":688,"line_end":688,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<T> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479641,"byte_end":479650,"line_start":694,"line_end":694,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoIter<T> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479777,"byte_end":479780,"line_start":700,"line_end":700,"column_start":8,"column_end":11},"name":"len","qualname":"<IntoIter<T> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479892,"byte_end":479897,"line_start":709,"line_end":709,"column_start":8,"column_end":13},"name":"clone","qualname":"<IntoIter<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480175,"byte_end":480179,"line_start":721,"line_end":721,"column_start":12,"column_end":16},"name":"Iter","qualname":"::punctuated::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2439}],"decl_id":null,"docs":" An iterator over borrowed values of type `&T`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed values of type `&T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479992,"byte_end":480042,"line_start":716,"line_end":716,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480043,"byte_end":480046,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480047,"byte_end":480126,"line_start":718,"line_end":718,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480127,"byte_end":480130,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480131,"byte_end":480163,"line_start":720,"line_end":720,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481185,"byte_end":481190,"line_start":755,"line_end":755,"column_start":8,"column_end":13},"name":"clone","qualname":"<Iter as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481355,"byte_end":481359,"line_start":765,"line_end":765,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481435,"byte_end":481444,"line_start":769,"line_end":769,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481585,"byte_end":481594,"line_start":775,"line_end":775,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481725,"byte_end":481728,"line_start":781,"line_end":781,"column_start":8,"column_end":11},"name":"len","qualname":"<Iter as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483146,"byte_end":483153,"line_start":840,"line_end":840,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::punctuated::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":2508}],"decl_id":null,"docs":" An iterator over mutably borrowed values of type `&mut T`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed values of type `&mut T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482951,"byte_end":483013,"line_start":835,"line_end":835,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483014,"byte_end":483017,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483018,"byte_end":483097,"line_start":837,"line_end":837,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483098,"byte_end":483101,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483102,"byte_end":483134,"line_start":839,"line_end":839,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483911,"byte_end":483915,"line_start":871,"line_end":871,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483991,"byte_end":484000,"line_start":875,"line_end":875,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8484},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484144,"byte_end":484153,"line_start":881,"line_end":881,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IterMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8330},"children":[],"decl_id":{"krate":2,"index":8331},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484287,"byte_end":484290,"line_start":887,"line_end":887,"column_start":8,"column_end":11},"name":"len","qualname":"<IterMut as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8355},"children":[],"decl_id":{"krate":2,"index":8356},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485384,"byte_end":485394,"line_start":931,"line_end":931,"column_start":5,"column_end":15},"name":"Punctuated","qualname":"::punctuated::Pair::Punctuated","value":"Pair::Punctuated(T, P)","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485395,"byte_end":485396,"line_start":931,"line_end":931,"column_start":16,"column_end":17},"name":"0","qualname":"::punctuated::Pair::Punctuated::0","value":"T","parent":{"krate":0,"index":2566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485398,"byte_end":485399,"line_start":931,"line_end":931,"column_start":19,"column_end":20},"name":"1","qualname":"::punctuated::Pair::Punctuated::1","value":"P","parent":{"krate":0,"index":2566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485406,"byte_end":485409,"line_start":932,"line_end":932,"column_start":5,"column_end":8},"name":"End","qualname":"::punctuated::Pair::End","value":"Pair::End(T)","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485410,"byte_end":485411,"line_start":932,"line_end":932,"column_start":9,"column_end":10},"name":"0","qualname":"::punctuated::Pair::End::0","value":"T","parent":{"krate":0,"index":2570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485367,"byte_end":485371,"line_start":930,"line_end":930,"column_start":10,"column_end":14},"name":"Pair","qualname":"::punctuated::Pair","value":"enum Pair<T, P> { Punctuated(T, P), End(T), }","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2570}],"decl_id":null,"docs":" A single syntax tree node of type `T` followed by its trailing punctuation\n of type `P` if any.","sig":null,"attributes":[{"value":"/ A single syntax tree node of type `T` followed by its trailing punctuation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485134,"byte_end":485212,"line_start":924,"line_end":924,"column_start":1,"column_end":79}},{"value":"/ of type `P` if any.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485213,"byte_end":485236,"line_start":925,"line_end":925,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485237,"byte_end":485240,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485241,"byte_end":485320,"line_start":927,"line_end":927,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485321,"byte_end":485324,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485325,"byte_end":485357,"line_start":929,"line_end":929,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485563,"byte_end":485573,"line_start":938,"line_end":938,"column_start":12,"column_end":22},"name":"into_value","qualname":"<Pair<T, P>>::into_value","value":"fn into_value(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the syntax tree node from this punctuated pair, discarding the\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Extracts the syntax tree node from this punctuated pair, discarding the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485445,"byte_end":485520,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ following punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485525,"byte_end":485551,"line_start":937,"line_end":937,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485756,"byte_end":485761,"line_start":945,"line_end":945,"column_start":12,"column_end":17},"name":"value","qualname":"<Pair<T, P>>::value","value":"fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Borrows the syntax tree node from this punctuated pair.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485685,"byte_end":485744,"line_start":944,"line_end":944,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485954,"byte_end":485963,"line_start":952,"line_end":952,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<Pair<T, P>>::value_mut","value":"fn value_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the syntax tree node from this punctuated pair.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485875,"byte_end":485942,"line_start":951,"line_end":951,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486231,"byte_end":486236,"line_start":960,"line_end":960,"column_start":12,"column_end":17},"name":"punct","qualname":"<Pair<T, P>>::punct","value":"fn punct(&Self) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the punctuation from this punctuated pair, unless this pair is\n the final one and there is no trailing punctuation.\n","sig":null,"attributes":[{"value":"/ Borrows the punctuation from this punctuated pair, unless this pair is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486085,"byte_end":486159,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ the final one and there is no trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486164,"byte_end":486219,"line_start":959,"line_end":959,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487044,"byte_end":487053,"line_start":985,"line_end":985,"column_start":12,"column_end":21},"name":"punct_mut","qualname":"<Pair<T, P>>::punct_mut","value":"fn punct_mut(&mut Self) -> Option<&mut P>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the punctuation from this punctuated pair, unless the\n pair is the final one and there is no trailing punctuation.","sig":null,"attributes":[{"value":"/ Mutably borrows the punctuation from this punctuated pair, unless the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486383,"byte_end":486456,"line_start":967,"line_end":967,"column_start":5,"column_end":78}},{"value":"/ pair is the final one and there is no trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486461,"byte_end":486524,"line_start":968,"line_end":968,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486529,"byte_end":486532,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486537,"byte_end":486550,"line_start":970,"line_end":970,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486555,"byte_end":486558,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486563,"byte_end":486570,"line_start":972,"line_end":972,"column_start":5,"column_end":12}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486575,"byte_end":486603,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/ # use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486608,"byte_end":486646,"line_start":974,"line_end":974,"column_start":5,"column_end":43}},{"value":"/ # use syn::{parse_quote, Token, TypeParamBound};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486651,"byte_end":486703,"line_start":975,"line_end":975,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486708,"byte_end":486713,"line_start":976,"line_end":976,"column_start":5,"column_end":10}},{"value":"/ # let mut punctuated = Punctuated::<TypeParamBound, Token![+]>::new();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486718,"byte_end":486792,"line_start":977,"line_end":977,"column_start":5,"column_end":79}},{"value":"/ # let span = Span::call_site();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486797,"byte_end":486832,"line_start":978,"line_end":978,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486837,"byte_end":486842,"line_start":979,"line_end":979,"column_start":5,"column_end":10}},{"value":"/ punctuated.insert(0, parse_quote!('lifetime));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486847,"byte_end":486897,"line_start":980,"line_end":980,"column_start":5,"column_end":55}},{"value":"/ if let Some(punct) = punctuated.pairs_mut().next().unwrap().punct_mut() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486902,"byte_end":486979,"line_start":981,"line_end":981,"column_start":5,"column_end":82}},{"value":"/     punct.span = span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":486984,"byte_end":487010,"line_start":982,"line_end":982,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487015,"byte_end":487020,"line_start":983,"line_end":983,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487025,"byte_end":487032,"line_start":984,"line_end":984,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487322,"byte_end":487325,"line_start":994,"line_end":994,"column_start":12,"column_end":15},"name":"new","qualname":"<Pair<T, P>>::new","value":"fn new(T, Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a punctuated pair out of a syntax tree node and an optional\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Creates a punctuated pair out of a syntax tree node and an optional","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487208,"byte_end":487279,"line_start":992,"line_end":992,"column_start":5,"column_end":76}},{"value":"/ following punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487284,"byte_end":487310,"line_start":993,"line_end":993,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487596,"byte_end":487606,"line_start":1003,"line_end":1003,"column_start":12,"column_end":22},"name":"into_tuple","qualname":"<Pair<T, P>>::into_tuple","value":"fn into_tuple(Self) -> (T, Option<P>)","parent":null,"children":[],"decl_id":null,"docs":" Produces this punctuated pair as a tuple of syntax tree node and\n optional following punctuation.\n","sig":null,"attributes":[{"value":"/ Produces this punctuated pair as a tuple of syntax tree node and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487476,"byte_end":487544,"line_start":1001,"line_end":1001,"column_start":5,"column_end":73}},{"value":"/ optional following punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487549,"byte_end":487584,"line_start":1002,"line_end":1002,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487927,"byte_end":487932,"line_start":1018,"line_end":1018,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pair<T, P> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":488194,"byte_end":488199,"line_start":1029,"line_end":1029,"column_start":8,"column_end":13},"name":"index","qualname":"<Punctuated<T, P> as std::ops::Index>::index","value":"fn index(&Self, usize) -> &Self::Output","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":488524,"byte_end":488533,"line_start":1042,"line_end":1042,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Punctuated<T, P> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, usize) -> &mut Self::Output","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":489132,"byte_end":489141,"line_start":1066,"line_end":1066,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Punctuated<T, P> as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":489404,"byte_end":489413,"line_start":1077,"line_end":1077,"column_start":12,"column_end":21},"name":"to_tokens","qualname":"<Pair<T, P> as quote::ToTokens>::to_tokens","value":"fn to_tokens(&Self, &mut TokenStream)","parent":{"krate":23,"index":117},"children":[],"decl_id":{"krate":23,"index":118},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_quote","qualname":"::parse_quote","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2654}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15533,"byte_end":15560,"line_start":441,"line_end":441,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493474,"byte_end":493479,"line_start":116,"line_end":116,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::parse","value":"fn parse<T>(TokenStream) -> T where T: ParseQuote","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493708,"byte_end":493718,"line_start":126,"line_end":126,"column_start":11,"column_end":21},"name":"ParseQuote","qualname":"::parse_quote::ParseQuote","value":"ParseQuote: Sized","parent":null,"children":[{"krate":0,"index":2638}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493735,"byte_end":493740,"line_start":127,"line_end":127,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::ParseQuote::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493822,"byte_end":493827,"line_start":131,"line_end":131,"column_start":8,"column_end":13},"name":"parse","qualname":"<T as parse_quote::ParseQuote>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":494316,"byte_end":494321,"line_start":147,"line_end":147,"column_start":8,"column_end":13},"name":"parse","qualname":"<Attribute as parse_quote::ParseQuote>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":494629,"byte_end":494634,"line_start":157,"line_end":157,"column_start":8,"column_end":13},"name":"parse","qualname":"<Punctuated<T, P> as parse_quote::ParseQuote>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2658},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_macro_input","qualname":"::parse_macro_input","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2686}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(not(all(target_arch = \"wasm32\",\nany(target_os = \"unknown\", target_os = \"wasi\"))), feature = \"parsing\", feature\n= \"proc-macro\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15655,"byte_end":15807,"line_start":446,"line_end":450,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498645,"byte_end":498650,"line_start":138,"line_end":138,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_macro_input::parse","value":"fn parse<T>(TokenStream) -> Result<T> where T: ParseMacroInput","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498793,"byte_end":498808,"line_start":144,"line_end":144,"column_start":11,"column_end":26},"name":"ParseMacroInput","qualname":"::parse_macro_input::ParseMacroInput","value":"ParseMacroInput: Sized","parent":null,"children":[{"krate":0,"index":2679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498825,"byte_end":498830,"line_start":145,"line_end":145,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_macro_input::ParseMacroInput::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498917,"byte_end":498922,"line_start":149,"line_end":149,"column_start":8,"column_end":13},"name":"parse","qualname":"<T as parse_macro_input::ParseMacroInput>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2678},"children":[],"decl_id":{"krate":0,"index":2679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":499336,"byte_end":499341,"line_start":162,"line_end":162,"column_start":8,"column_end":13},"name":"parse","qualname":"<AttributeArgs as parse_macro_input::ParseMacroInput>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":2678},"children":[],"decl_id":{"krate":0,"index":2679},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spanned","qualname":"::spanned","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2697}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.","sig":null,"attributes":[{"value":"cfg(all(feature = \"parsing\", feature = \"printing\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15851,"byte_end":15905,"line_start":454,"line_end":454,"column_start":1,"column_end":55}},{"value":"/ A trait that can provide the `Span` of the complete contents of a syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499724,"byte_end":499800,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499801,"byte_end":499815,"line_start":2,"line_end":2,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499816,"byte_end":499819,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ *This module is available only if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499820,"byte_end":499900,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ `\"printing\"` features.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499901,"byte_end":499928,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499929,"byte_end":499932,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499933,"byte_end":499941,"line_start":7,"line_end":7,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499942,"byte_end":499945,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499946,"byte_end":499959,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499960,"byte_end":499963,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Suppose in a procedural macro we have a [`Type`] that we want to assert","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":499964,"byte_end":500039,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ implements the [`Sync`] trait. Maybe this is the type of one of the fields","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500040,"byte_end":500118,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ of a struct for which we are deriving a trait implementation, and we need to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500119,"byte_end":500199,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ be able to pass a reference to one of those fields across threads.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500200,"byte_end":500270,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500271,"byte_end":500274,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Type`]: crate::Type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500275,"byte_end":500300,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ [`Sync`]: std::marker::Sync","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500301,"byte_end":500332,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500333,"byte_end":500336,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If the field type does *not* implement `Sync` as required, we want the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500337,"byte_end":500411,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ compiler to report an error pointing out exactly which type it was.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500412,"byte_end":500483,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500484,"byte_end":500487,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The following macro code takes a variable `ty` of type `Type` and produces a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500488,"byte_end":500568,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ static assertion that `Sync` is implemented for that type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500569,"byte_end":500631,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500632,"byte_end":500635,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500636,"byte_end":500643,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500644,"byte_end":500674,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500675,"byte_end":500680,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500681,"byte_end":500713,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500714,"byte_end":500740,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ use quote::quote_spanned;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500741,"byte_end":500770,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ use syn::Type;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500771,"byte_end":500789,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ use syn::spanned::Spanned;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500790,"byte_end":500820,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500821,"byte_end":500824,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500825,"byte_end":500871,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500872,"byte_end":500905,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500906,"byte_end":500914,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500915,"byte_end":500971,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/     # let ty = get_a_type();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":500972,"byte_end":501004,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501005,"byte_end":501022,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501023,"byte_end":501026,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     let assert_sync = quote_spanned! {ty.span()=>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501027,"byte_end":501080,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/         struct _AssertSync where #ty: Sync;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501081,"byte_end":501128,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501129,"byte_end":501139,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501140,"byte_end":501143,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501144,"byte_end":501161,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/     # input","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501162,"byte_end":501177,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501178,"byte_end":501183,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501184,"byte_end":501189,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # fn get_a_type() -> Type {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501190,"byte_end":501221,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ #     unimplemented!()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501222,"byte_end":501248,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501249,"byte_end":501256,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501257,"byte_end":501264,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501265,"byte_end":501268,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ By inserting this `assert_sync` fragment into the output code generated by","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501269,"byte_end":501347,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ our macro, the user's code will fail to compile if `ty` does not implement","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501348,"byte_end":501426,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ `Sync`. The errors they would see look like the following.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501427,"byte_end":501489,"line_start":56,"line_end":56,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501490,"byte_end":501493,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501494,"byte_end":501505,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `*const i32: std::marker::Sync` is not satisfied","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501506,"byte_end":501588,"line_start":59,"line_end":59,"column_start":1,"column_end":83}},{"value":"/   --> src/main.rs:10:21","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501589,"byte_end":501616,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501617,"byte_end":501625,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"/ 10 |     bad_field: *const i32,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501626,"byte_end":501661,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/    |                ^^^^^^^^^^ `*const i32` cannot be shared between threads safely","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501662,"byte_end":501749,"line_start":63,"line_end":63,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501750,"byte_end":501757,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501758,"byte_end":501761,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ In this technique, using the `Type`'s span for the error message makes the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501762,"byte_end":501840,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ error appear in the correct place underlining the right type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501841,"byte_end":501906,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501907,"byte_end":501910,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501911,"byte_end":501919,"line_start":69,"line_end":69,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501920,"byte_end":501923,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501924,"byte_end":501941,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501942,"byte_end":501945,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The underlying [`proc_macro::Span::join`] method is nightly-only. When","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":501946,"byte_end":502020,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ called from within a procedural macro in a nightly compiler, `Spanned` will","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502021,"byte_end":502100,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ use `join` to produce the intended span. When not using a nightly compiler,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502101,"byte_end":502180,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ only the span of the *first token* of the syntax tree node is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502181,"byte_end":502256,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502257,"byte_end":502260,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ In the common case of wanting to use the joined span as the span of a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502261,"byte_end":502334,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/ `syn::Error`, consider instead using [`syn::Error::new_spanned`] which is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502335,"byte_end":502412,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ able to span the error correctly under the complete syntax tree node without","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502413,"byte_end":502493,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ needing the unstable `join`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502494,"byte_end":502526,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502527,"byte_end":502530,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`syn::Error::new_spanned`]: crate::Error::new_spanned","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502531,"byte_end":502589,"line_start":83,"line_end":83,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503148,"byte_end":503155,"line_start":102,"line_end":102,"column_start":11,"column_end":18},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned","parent":null,"children":[{"krate":0,"index":2696}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.","sig":null,"attributes":[{"value":"/ A trait that can provide the `Span` of the complete contents of a syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502656,"byte_end":502732,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502733,"byte_end":502747,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502748,"byte_end":502751,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented for all types that implement","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502752,"byte_end":502824,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ [`ToTokens`] from the `quote` crate, as well as for `Span` itself.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502825,"byte_end":502895,"line_start":92,"line_end":92,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502896,"byte_end":502899,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [`ToTokens`]: quote::ToTokens","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502900,"byte_end":502933,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502934,"byte_end":502937,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] for an example.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502938,"byte_end":502988,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502989,"byte_end":502992,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":502993,"byte_end":503025,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503026,"byte_end":503029,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ *This trait is available only if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503030,"byte_end":503109,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ `\"printing\"` features.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503110,"byte_end":503137,"line_start":101,"line_end":101,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503371,"byte_end":503375,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"span","qualname":"::spanned::Spanned::span","value":"fn span(&Self) -> Span","parent":{"krate":0,"index":2695},"children":[],"decl_id":null,"docs":" Returns a `Span` covering the complete contents of this syntax tree\n node, or [`Span::call_site()`] if this node is empty.","sig":null,"attributes":[{"value":"/ Returns a `Span` covering the complete contents of this syntax tree","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503162,"byte_end":503233,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ node, or [`Span::call_site()`] if this node is empty.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503238,"byte_end":503295,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503300,"byte_end":503303,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`Span::call_site()`]: proc_macro2::Span::call_site","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503308,"byte_end":503363,"line_start":106,"line_end":106,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503445,"byte_end":503449,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"span","qualname":"<T as spanned::Spanned>::span","value":"fn span(&Self) -> Span","parent":{"krate":0,"index":2695},"children":[],"decl_id":{"krate":0,"index":2696},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6499},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12767377,"byte_end":12767382,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"clone","qualname":"<Abi as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12767683,"byte_end":12767688,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"clone","qualname":"<AngleBracketedGenericArguments as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768630,"byte_end":12768635,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"clone","qualname":"<AttrStyle as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768815,"byte_end":12768820,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"clone","qualname":"<Attribute as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769239,"byte_end":12769244,"line_start":68,"line_end":68,"column_start":8,"column_end":13},"name":"clone","qualname":"<BareFnArg as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6511},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769674,"byte_end":12769679,"line_start":82,"line_end":82,"column_start":8,"column_end":13},"name":"clone","qualname":"<BinOp as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769857,"byte_end":12769862,"line_start":89,"line_end":89,"column_start":8,"column_end":13},"name":"clone","qualname":"<Binding as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12770436,"byte_end":12770441,"line_start":110,"line_end":110,"column_start":8,"column_end":13},"name":"clone","qualname":"<BoundLifetimes as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6517},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12770827,"byte_end":12770832,"line_start":122,"line_end":122,"column_start":8,"column_end":13},"name":"clone","qualname":"<ConstParam as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6519},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771331,"byte_end":12771336,"line_start":137,"line_end":137,"column_start":8,"column_end":13},"name":"clone","qualname":"<Constraint as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6521},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771636,"byte_end":12771641,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"clone","qualname":"<Data as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6523},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771982,"byte_end":12771987,"line_start":159,"line_end":159,"column_start":8,"column_end":13},"name":"clone","qualname":"<DataEnum as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6525},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772305,"byte_end":12772310,"line_start":170,"line_end":170,"column_start":8,"column_end":13},"name":"clone","qualname":"<DataStruct as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6527},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772627,"byte_end":12772632,"line_start":181,"line_end":181,"column_start":8,"column_end":13},"name":"clone","qualname":"<DataUnion as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6529},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772899,"byte_end":12772904,"line_start":191,"line_end":191,"column_start":8,"column_end":13},"name":"clone","qualname":"<DeriveInput as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6531},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12773292,"byte_end":12773297,"line_start":204,"line_end":204,"column_start":8,"column_end":13},"name":"clone","qualname":"<Expr as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6533},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12778653,"byte_end":12778658,"line_start":343,"line_end":343,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprBinary as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12779932,"byte_end":12779937,"line_start":389,"line_end":389,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprCall as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6537},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12780295,"byte_end":12780300,"line_start":401,"line_end":401,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprCast as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6539},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12781537,"byte_end":12781542,"line_start":441,"line_end":441,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprField as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6541},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12783057,"byte_end":12783062,"line_start":492,"line_end":492,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprIndex as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6543},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12783801,"byte_end":12783806,"line_start":517,"line_end":517,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprLit as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6545},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12785546,"byte_end":12785551,"line_start":577,"line_end":577,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprParen as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6547},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12785873,"byte_end":12785878,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprPath as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6549},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12789288,"byte_end":12789293,"line_start":707,"line_end":707,"column_start":8,"column_end":13},"name":"clone","qualname":"<ExprUnary as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6551},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12790585,"byte_end":12790590,"line_start":753,"line_end":753,"column_start":8,"column_end":13},"name":"clone","qualname":"<Field as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6553},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12791662,"byte_end":12791667,"line_start":790,"line_end":790,"column_start":8,"column_end":13},"name":"clone","qualname":"<Fields as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6555},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12792032,"byte_end":12792037,"line_start":801,"line_end":801,"column_start":8,"column_end":13},"name":"clone","qualname":"<FieldsNamed as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6557},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12792329,"byte_end":12792334,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"clone","qualname":"<FieldsUnnamed as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6559},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12795414,"byte_end":12795419,"line_start":909,"line_end":909,"column_start":8,"column_end":13},"name":"clone","qualname":"<GenericArgument as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6561},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12796394,"byte_end":12796399,"line_start":932,"line_end":932,"column_start":8,"column_end":13},"name":"clone","qualname":"<GenericParam as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6563},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12796815,"byte_end":12796820,"line_start":943,"line_end":943,"column_start":8,"column_end":13},"name":"clone","qualname":"<Generics as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6565},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12799645,"byte_end":12799650,"line_start":1029,"line_end":1029,"column_start":8,"column_end":13},"name":"clone","qualname":"<Index as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6567},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12808958,"byte_end":12808963,"line_start":1315,"line_end":1315,"column_start":8,"column_end":13},"name":"clone","qualname":"<LifetimeDef as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12809281,"byte_end":12809286,"line_start":1326,"line_end":1326,"column_start":8,"column_end":13},"name":"clone","qualname":"<Lit as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12809859,"byte_end":12809864,"line_start":1341,"line_end":1341,"column_start":8,"column_end":13},"name":"clone","qualname":"<LitBool as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6573},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12810505,"byte_end":12810510,"line_start":1364,"line_end":1364,"column_start":8,"column_end":13},"name":"clone","qualname":"<Macro as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6575},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12810881,"byte_end":12810886,"line_start":1376,"line_end":1376,"column_start":8,"column_end":13},"name":"clone","qualname":"<MacroDelimiter as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6577},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811312,"byte_end":12811317,"line_start":1387,"line_end":1387,"column_start":8,"column_end":13},"name":"clone","qualname":"<Member as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6579},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811633,"byte_end":12811638,"line_start":1397,"line_end":1397,"column_start":8,"column_end":13},"name":"clone","qualname":"<Meta as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6581},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12812006,"byte_end":12812011,"line_start":1408,"line_end":1408,"column_start":8,"column_end":13},"name":"clone","qualname":"<MetaList as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6583},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12812339,"byte_end":12812344,"line_start":1419,"line_end":1419,"column_start":8,"column_end":13},"name":"clone","qualname":"<MetaNameValue as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6585},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12813030,"byte_end":12813035,"line_start":1442,"line_end":1442,"column_start":8,"column_end":13},"name":"clone","qualname":"<NestedMeta as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6587},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12813382,"byte_end":12813387,"line_start":1452,"line_end":1452,"column_start":8,"column_end":13},"name":"clone","qualname":"<ParenthesizedGenericArguments as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6589},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12819435,"byte_end":12819440,"line_start":1657,"line_end":1657,"column_start":8,"column_end":13},"name":"clone","qualname":"<Path as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6591},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12819735,"byte_end":12819740,"line_start":1667,"line_end":1667,"column_start":8,"column_end":13},"name":"clone","qualname":"<PathArguments as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6593},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820208,"byte_end":12820213,"line_start":1680,"line_end":1680,"column_start":8,"column_end":13},"name":"clone","qualname":"<PathSegment as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6595},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820499,"byte_end":12820504,"line_start":1690,"line_end":1690,"column_start":8,"column_end":13},"name":"clone","qualname":"<PredicateEq as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6597},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820837,"byte_end":12820842,"line_start":1701,"line_end":1701,"column_start":8,"column_end":13},"name":"clone","qualname":"<PredicateLifetime as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6599},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12821187,"byte_end":12821192,"line_start":1712,"line_end":1712,"column_start":8,"column_end":13},"name":"clone","qualname":"<PredicateType as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6601},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12821576,"byte_end":12821581,"line_start":1724,"line_end":1724,"column_start":8,"column_end":13},"name":"clone","qualname":"<QSelf as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6603},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12822617,"byte_end":12822622,"line_start":1759,"line_end":1759,"column_start":8,"column_end":13},"name":"clone","qualname":"<ReturnType as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6605},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824021,"byte_end":12824026,"line_start":1800,"line_end":1800,"column_start":8,"column_end":13},"name":"clone","qualname":"<TraitBound as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6608},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824554,"byte_end":12824559,"line_start":1815,"line_end":1815,"column_start":8,"column_end":13},"name":"clone","qualname":"<TraitBoundModifier as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6610},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12827016,"byte_end":12827021,"line_start":1891,"line_end":1891,"column_start":8,"column_end":13},"name":"clone","qualname":"<Type as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6612},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12828163,"byte_end":12828168,"line_start":1916,"line_end":1916,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeArray as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6614},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12828541,"byte_end":12828546,"line_start":1928,"line_end":1928,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeBareFn as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6616},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829093,"byte_end":12829098,"line_start":1944,"line_end":1944,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeGroup as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6618},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829386,"byte_end":12829391,"line_start":1954,"line_end":1954,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeImplTrait as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6620},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829681,"byte_end":12829686,"line_start":1964,"line_end":1964,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeInfer as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829943,"byte_end":12829948,"line_start":1973,"line_end":1973,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeMacro as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6624},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830158,"byte_end":12830163,"line_start":1980,"line_end":1980,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeNever as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830408,"byte_end":12830413,"line_start":1989,"line_end":1989,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeParam as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6628},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830872,"byte_end":12830877,"line_start":2003,"line_end":2003,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeParamBound as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831232,"byte_end":12831237,"line_start":2013,"line_end":2013,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeParen as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831520,"byte_end":12831525,"line_start":2023,"line_end":2023,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypePath as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6634},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831794,"byte_end":12831799,"line_start":2033,"line_end":2033,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypePtr as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6636},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832183,"byte_end":12832188,"line_start":2045,"line_end":2045,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeReference as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6638},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832566,"byte_end":12832571,"line_start":2057,"line_end":2057,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeSlice as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6640},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832865,"byte_end":12832870,"line_start":2067,"line_end":2067,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeTraitObject as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6642},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833160,"byte_end":12833165,"line_start":2077,"line_end":2077,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeTuple as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6645},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833574,"byte_end":12833579,"line_start":2090,"line_end":2090,"column_start":8,"column_end":13},"name":"clone","qualname":"<UnOp as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6647},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12835537,"byte_end":12835542,"line_start":2160,"line_end":2160,"column_start":8,"column_end":13},"name":"clone","qualname":"<Variadic as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6649},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12835811,"byte_end":12835816,"line_start":2170,"line_end":2170,"column_start":8,"column_end":13},"name":"clone","qualname":"<Variant as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6651},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836181,"byte_end":12836186,"line_start":2182,"line_end":2182,"column_start":8,"column_end":13},"name":"clone","qualname":"<VisCrate as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836432,"byte_end":12836437,"line_start":2191,"line_end":2191,"column_start":8,"column_end":13},"name":"clone","qualname":"<VisPublic as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836684,"byte_end":12836689,"line_start":2200,"line_end":2200,"column_start":8,"column_end":13},"name":"clone","qualname":"<VisRestricted as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6657},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837070,"byte_end":12837075,"line_start":2212,"line_end":2212,"column_start":8,"column_end":13},"name":"clone","qualname":"<Visibility as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837550,"byte_end":12837555,"line_start":2224,"line_end":2224,"column_start":8,"column_end":13},"name":"clone","qualname":"<WhereClause as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6661},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837858,"byte_end":12837863,"line_start":2234,"line_end":2234,"column_start":8,"column_end":13},"name":"clone","qualname":"<WherePredicate as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__private","qualname":"::__private","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2787}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"path = \"export.rs\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":26490,"byte_end":26511,"line_start":791,"line_end":791,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508430,"byte_end":508434,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"bool","qualname":"::__private::bool","value":"help::Bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508390,"byte_end":508420,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2783},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508489,"byte_end":508492,"line_start":32,"line_end":32,"column_start":10,"column_end":13},"name":"str","qualname":"::__private::str","value":"help::Str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508449,"byte_end":508479,"line_start":31,"line_end":31,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/export.rs","byte_start":508582,"byte_end":508589,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"private","qualname":"::__private::private","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/sealed.rs","byte_start":525062,"byte_end":525068,"line_start":3,"line_end":3,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::lookahead::Sealed","value":"Sealed: Copy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525115,"byte_end":525124,"line_start":3,"line_end":3,"column_start":11,"column_end":20},"name":"IntoSpans","qualname":"::span::IntoSpans","value":"IntoSpans<S>","parent":null,"children":[{"krate":0,"index":2814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525137,"byte_end":525147,"line_start":4,"line_end":4,"column_start":8,"column_end":18},"name":"into_spans","qualname":"::span::IntoSpans::into_spans","value":"fn into_spans(Self) -> S","parent":{"krate":0,"index":2812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525207,"byte_end":525217,"line_start":8,"line_end":8,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<Span as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525307,"byte_end":525317,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<Span as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525413,"byte_end":525423,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<Span as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525530,"byte_end":525540,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<[Span; 1] as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525633,"byte_end":525643,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<[Span; 2] as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525736,"byte_end":525746,"line_start":38,"line_end":38,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<[Span; 3] as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> [Span; ]","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2842},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525828,"byte_end":525837,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"name":"FromSpans","qualname":"::span::FromSpans","value":"FromSpans: Sized","parent":null,"children":[{"krate":0,"index":2843}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525790,"byte_end":525817,"line_start":43,"line_end":43,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525854,"byte_end":525864,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"from_spans","qualname":"::span::FromSpans::from_spans","value":"fn from_spans(&[Span]) -> Self","parent":{"krate":0,"index":2842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525959,"byte_end":525969,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"from_spans","qualname":"<[Span; 1] as span::FromSpans>::from_spans","value":"fn from_spans(&[Span]) -> Self","parent":{"krate":0,"index":2842},"children":[],"decl_id":{"krate":0,"index":2843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":526090,"byte_end":526100,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"from_spans","qualname":"<[Span; 2] as span::FromSpans>::from_spans","value":"fn from_spans(&[Span]) -> Self","parent":{"krate":0,"index":2842},"children":[],"decl_id":{"krate":0,"index":2843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":526231,"byte_end":526241,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"from_spans","qualname":"<[Span; 3] as span::FromSpans>::from_spans","value":"fn from_spans(&[Span]) -> Self","parent":{"krate":0,"index":2842},"children":[],"decl_id":{"krate":0,"index":2843},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529529,"byte_end":529539,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::lookahead::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917}],"decl_id":null,"docs":" Support for checking the next token in a stream to decide how to parse.","sig":null,"attributes":[{"value":"/ Support for checking the next token in a stream to decide how to parse.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527603,"byte_end":527678,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527679,"byte_end":527682,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An important advantage over [`ParseStream::peek`] is that here we","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527683,"byte_end":527752,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ automatically construct an appropriate error message based on the token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527753,"byte_end":527828,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ alternatives that get peeked. If you are producing your own error message,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527829,"byte_end":527907,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ go ahead and use `ParseStream::peek` instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527908,"byte_end":527957,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527958,"byte_end":527961,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Use [`ParseStream::lookahead1`] to construct this object.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":527962,"byte_end":528023,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528024,"byte_end":528027,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::peek`]: crate::parse::ParseBuffer::peek","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528028,"byte_end":528086,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`ParseStream::lookahead1`]: crate::parse::ParseBuffer::lookahead1","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528087,"byte_end":528157,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528158,"byte_end":528161,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Consuming tokens from the source stream after constructing a lookahead","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528162,"byte_end":528236,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ object does not also advance the lookahead object.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528237,"byte_end":528291,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528292,"byte_end":528295,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528296,"byte_end":528309,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528310,"byte_end":528313,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528314,"byte_end":528321,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use syn::{ConstParam, Ident, Lifetime, LifetimeDef, Result, Token, TypeParam};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528322,"byte_end":528404,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528405,"byte_end":528446,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528447,"byte_end":528450,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // A generic parameter, a single one of the comma-separated elements inside","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528451,"byte_end":528530,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ // angle brackets in:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528531,"byte_end":528556,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528557,"byte_end":528563,"line_start":32,"line_end":32,"column_start":1,"column_end":7}},{"value":"/ //     fn f<T: Clone, 'a, 'b: 'a, const N: usize>() { ... }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528564,"byte_end":528627,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528628,"byte_end":528634,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/ // On invalid input, lookahead gives us a reasonable error message.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528635,"byte_end":528706,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528707,"byte_end":528713,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/ //     error: expected one of: identifier, lifetime, `const`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528714,"byte_end":528778,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ //       |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528779,"byte_end":528793,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ //     5 |     fn f<!Sized>() {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528794,"byte_end":528830,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"/ //       |          ^","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528831,"byte_end":528856,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ enum GenericParam {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528857,"byte_end":528880,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/     Type(TypeParam),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528881,"byte_end":528905,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/     Lifetime(LifetimeDef),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528906,"byte_end":528936,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     Const(ConstParam),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528937,"byte_end":528963,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528964,"byte_end":528969,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528970,"byte_end":528973,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl Parse for GenericParam {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":528974,"byte_end":529007,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529008,"byte_end":529062,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/         let lookahead = input.lookahead1();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529063,"byte_end":529110,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/         if lookahead.peek(Ident) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529111,"byte_end":529149,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/             input.parse().map(GenericParam::Type)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529150,"byte_end":529203,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/         } else if lookahead.peek(Lifetime) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529204,"byte_end":529252,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/             input.parse().map(GenericParam::Lifetime)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529253,"byte_end":529310,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/         } else if lookahead.peek(Token![const]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529311,"byte_end":529364,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/             input.parse().map(GenericParam::Const)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529365,"byte_end":529419,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/         } else {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529420,"byte_end":529440,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/             Err(lookahead.error())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529441,"byte_end":529479,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529480,"byte_end":529493,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529494,"byte_end":529503,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529504,"byte_end":529509,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":529510,"byte_end":529517,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530600,"byte_end":530604,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"fn peek<T>(&Self, T) -> bool where T: Peek","parent":null,"children":[],"decl_id":null,"docs":" Looks at the next token in the parse stream to determine whether it\n matches the requested type of token.","sig":null,"attributes":[{"value":"/ Looks at the next token in the parse stream to determine whether it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530072,"byte_end":530143,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ matches the requested type of token.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530148,"byte_end":530188,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530193,"byte_end":530196,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530201,"byte_end":530213,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530218,"byte_end":530221,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not use turbofish syntax. Pass the peek type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530226,"byte_end":530301,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ inside of parentheses.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530306,"byte_end":530332,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530337,"byte_end":530340,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ - `input.peek(Token![struct])`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530345,"byte_end":530379,"line_start":97,"line_end":97,"column_start":5,"column_end":39}},{"value":"/ - `input.peek(Token![==])`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530384,"byte_end":530414,"line_start":98,"line_end":98,"column_start":5,"column_end":35}},{"value":"/ - `input.peek(Ident)`&emsp;*(does not accept keywords)*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530419,"byte_end":530478,"line_start":99,"line_end":99,"column_start":5,"column_end":64}},{"value":"/ - `input.peek(Ident::peek_any)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530483,"byte_end":530518,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/ - `input.peek(Lifetime)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530523,"byte_end":530551,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ - `input.peek(token::Brace)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530556,"byte_end":530588,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530955,"byte_end":530960,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"fn error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.","sig":null,"attributes":[{"value":"/ Triggers an error at the current position of the parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530734,"byte_end":530800,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530805,"byte_end":530808,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The error message will identify all of the expected token types that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530813,"byte_end":530885,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ have been peeked against this lookahead instance.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530890,"byte_end":530943,"line_start":111,"line_end":111,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532246,"byte_end":532250,"line_start":147,"line_end":147,"column_start":11,"column_end":15},"name":"Peek","qualname":"::lookahead::Peek","value":"Peek: Sealed","parent":null,"children":[{"krate":0,"index":2926}],"decl_id":null,"docs":" Types that can be parsed by looking at just one token.","sig":null,"attributes":[{"value":"/ Types that can be parsed by looking at just one token.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":531912,"byte_end":531970,"line_start":139,"line_end":139,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":531971,"byte_end":531974,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Use [`ParseStream::peek`] to peek one of these types in a parse stream","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":531975,"byte_end":532049,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ without consuming it from the stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532050,"byte_end":532091,"line_start":142,"line_end":142,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532092,"byte_end":532095,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532096,"byte_end":532172,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532173,"byte_end":532176,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::peek`]: crate::parse::ParseBuffer::peek","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532177,"byte_end":532235,"line_start":146,"line_end":146,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532312,"byte_end":532317,"line_start":150,"line_end":150,"column_start":10,"column_end":15},"name":"Token","qualname":"::lookahead::Peek::Token","value":"type Token: Token;","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532425,"byte_end":532436,"line_start":157,"line_end":157,"column_start":10,"column_end":21},"name":"TokenMarker","qualname":"::lookahead::TokenMarker","value":"enum TokenMarker { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532487,"byte_end":532497,"line_start":160,"line_end":160,"column_start":8,"column_end":18},"name":"into_spans","qualname":"<TokenMarker as span::IntoSpans>::into_spans","value":"fn into_spans(Self) -> S","parent":{"krate":0,"index":2812},"children":[],"decl_id":{"krate":0,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2939},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse","qualname":"::parse","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2994},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3038},{"krate":0,"index":3040},{"krate":0,"index":3046},{"krate":0,"index":3049},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3061},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3073},{"krate":0,"index":3078},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3129},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3172}],"decl_id":null,"docs":" Parsing interface for parsing a token stream into a syntax tree node.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":26655,"byte_end":26682,"line_start":803,"line_end":803,"column_start":1,"column_end":28}},{"value":"/ Parsing interface for parsing a token stream into a syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":532719,"byte_end":532792,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":532793,"byte_end":532796,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Parsing in Syn is built on parser functions that take in a [`ParseStream`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":532797,"byte_end":532875,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ and produce a [`Result<T>`] where `T` is some syntax tree node. Underlying","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":532876,"byte_end":532954,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ these parser functions is a lower level mechanism built around the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":532955,"byte_end":533025,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ [`Cursor`] type. `Cursor` is a cheaply copyable cursor over a range of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533026,"byte_end":533100,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ tokens in a token stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533101,"byte_end":533130,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533131,"byte_end":533134,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Result<T>`]: Result","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533135,"byte_end":533160,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/ [`Cursor`]: crate::buffer::Cursor","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533161,"byte_end":533198,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533199,"byte_end":533202,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533203,"byte_end":533216,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533217,"byte_end":533220,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Here is a snippet of parsing code to get a feel for the style of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533221,"byte_end":533293,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ library. We define data structures for a subset of Rust syntax including","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533294,"byte_end":533370,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ enums (not shown) and structs, then provide implementations of the [`Parse`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533371,"byte_end":533451,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ trait to parse these syntax tree data structures from a token stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533452,"byte_end":533525,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533526,"byte_end":533529,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once `Parse` impls have been defined, they can be called conveniently from a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533530,"byte_end":533610,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ procedural macro through [`parse_macro_input!`] as shown at the bottom of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533611,"byte_end":533688,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ the snippet. If the caller provides syntactically invalid input to the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533689,"byte_end":533763,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ procedural macro, they will receive a helpful compiler error message","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533764,"byte_end":533836,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ pointing out the exact token that triggered the failure to parse.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533837,"byte_end":533906,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533907,"byte_end":533910,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`parse_macro_input!`]: crate::parse_macro_input!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533911,"byte_end":533964,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533965,"byte_end":533968,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533969,"byte_end":533976,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":533977,"byte_end":534007,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534008,"byte_end":534013,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534014,"byte_end":534046,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ use syn::{braced, parse_macro_input, token, Field, Ident, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534047,"byte_end":534124,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534125,"byte_end":534166,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534167,"byte_end":534203,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534204,"byte_end":534207,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ enum Item {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534208,"byte_end":534223,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/     Struct(ItemStruct),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534224,"byte_end":534251,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/     Enum(ItemEnum),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534252,"byte_end":534275,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534276,"byte_end":534281,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534282,"byte_end":534285,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ struct ItemStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534286,"byte_end":534309,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/     struct_token: Token![struct],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534310,"byte_end":534347,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/     ident: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534348,"byte_end":534369,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     brace_token: token::Brace,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534370,"byte_end":534404,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     fields: Punctuated<Field, Token![,]>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534405,"byte_end":534450,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534451,"byte_end":534456,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534457,"byte_end":534462,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # enum ItemEnum {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534463,"byte_end":534485,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534486,"byte_end":534489,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ impl Parse for Item {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534490,"byte_end":534515,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534516,"byte_end":534570,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/         let lookahead = input.lookahead1();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534571,"byte_end":534618,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/         if lookahead.peek(Token![struct]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534619,"byte_end":534666,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/             input.parse().map(Item::Struct)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534667,"byte_end":534714,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/         } else if lookahead.peek(Token![enum]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534715,"byte_end":534767,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/             input.parse().map(Item::Enum)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534768,"byte_end":534813,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534814,"byte_end":534834,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/             Err(lookahead.error())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534835,"byte_end":534873,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534874,"byte_end":534887,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534888,"byte_end":534897,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534898,"byte_end":534903,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534904,"byte_end":534907,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ impl Parse for ItemStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534908,"byte_end":534939,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534940,"byte_end":534994,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/         let content;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":534995,"byte_end":535019,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/         Ok(ItemStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535020,"byte_end":535047,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/             struct_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535048,"byte_end":535093,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"/             ident: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535094,"byte_end":535132,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/             brace_token: braced!(content in input),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535133,"byte_end":535188,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/             fields: content.parse_terminated(Field::parse_named)?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535189,"byte_end":535259,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535260,"byte_end":535274,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535275,"byte_end":535284,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535285,"byte_end":535290,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535291,"byte_end":535296,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ # impl Parse for ItemEnum {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535297,"byte_end":535328,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/ #     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535329,"byte_end":535385,"line_start":75,"line_end":75,"column_start":1,"column_end":57}},{"value":"/ #         unimplemented!()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535386,"byte_end":535416,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535417,"byte_end":535428,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535429,"byte_end":535436,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535437,"byte_end":535440,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535441,"byte_end":535480,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535481,"byte_end":535498,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535499,"byte_end":535507,"line_start":82,"line_end":82,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(tokens: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535508,"byte_end":535565,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/     let input = parse_macro_input!(tokens as Item);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535566,"byte_end":535621,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535622,"byte_end":535625,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535626,"byte_end":535643,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ #   \"\".parse().unwrap()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535644,"byte_end":535671,"line_start":87,"line_end":87,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535672,"byte_end":535677,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535678,"byte_end":535685,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535686,"byte_end":535689,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # The `syn::parse*` functions","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535690,"byte_end":535723,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535724,"byte_end":535727,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`syn::parse`], [`syn::parse2`], and [`syn::parse_str`] functions serve","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535728,"byte_end":535807,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ as an entry point for parsing syntax tree nodes that can be parsed in an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535808,"byte_end":535884,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ obvious default way. These functions can return any syntax tree node that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535885,"byte_end":535962,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ implements the [`Parse`] trait, which includes most types in Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":535963,"byte_end":536032,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536033,"byte_end":536036,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse`]: crate::parse()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536037,"byte_end":536071,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"/ [`syn::parse2`]: crate::parse2()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536072,"byte_end":536108,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/ [`syn::parse_str`]: crate::parse_str()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536109,"byte_end":536151,"line_start":100,"line_end":100,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536152,"byte_end":536155,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536156,"byte_end":536163,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use syn::Type;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536164,"byte_end":536182,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536183,"byte_end":536186,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # fn run_parser() -> syn::Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536187,"byte_end":536229,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/ let t: Type = syn::parse_str(\"std::collections::HashMap<String, Value>\")?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536230,"byte_end":536308,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536309,"byte_end":536325,"line_start":107,"line_end":107,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536326,"byte_end":536333,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536334,"byte_end":536339,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ # run_parser().unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536340,"byte_end":536368,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536369,"byte_end":536376,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536377,"byte_end":536380,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The [`parse_quote!`] macro also uses this approach.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536381,"byte_end":536436,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536437,"byte_end":536440,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`parse_quote!`]: crate::parse_quote!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536441,"byte_end":536482,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536483,"byte_end":536486,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # The `Parser` trait","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536487,"byte_end":536511,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536512,"byte_end":536515,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Some types can be parsed in several ways depending on context. For example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536516,"byte_end":536594,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ an [`Attribute`] can be either \"outer\" like `#[...]` or \"inner\" like","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536595,"byte_end":536667,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ `#![...]` and parsing the wrong one would be a bug. Similarly [`Punctuated`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536668,"byte_end":536748,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ may or may not allow trailing punctuation, and parsing it the wrong way","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536749,"byte_end":536824,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/ would either reject valid input or accept invalid input.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536825,"byte_end":536885,"line_start":123,"line_end":123,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536886,"byte_end":536889,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`Attribute`]: crate::Attribute","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536890,"byte_end":536925,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/ [`Punctuated`]: crate::punctuated","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536926,"byte_end":536963,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536964,"byte_end":536967,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The `Parse` trait is not implemented in these cases because there is no good","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":536968,"byte_end":537048,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/ behavior to consider the default.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537049,"byte_end":537086,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537087,"byte_end":537090,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537091,"byte_end":537110,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537111,"byte_end":537141,"line_start":132,"line_end":132,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537142,"byte_end":537147,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ # use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537148,"byte_end":537186,"line_start":134,"line_end":134,"column_start":1,"column_end":39}},{"value":"/ # use syn::{PathSegment, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537187,"byte_end":537231,"line_start":135,"line_end":135,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537232,"byte_end":537237,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # fn f(tokens: proc_macro::TokenStream) -> Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537238,"byte_end":537297,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537298,"byte_end":537303,"line_start":138,"line_end":138,"column_start":1,"column_end":6}},{"value":"/ // Can't parse `Punctuated` without knowing whether trailing punctuation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537304,"byte_end":537380,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/ // should be allowed in this context.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537381,"byte_end":537422,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/ let path: Punctuated<PathSegment, Token![::]> = syn::parse(tokens)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537423,"byte_end":537495,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537496,"byte_end":537501,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537502,"byte_end":537518,"line_start":143,"line_end":143,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537519,"byte_end":537526,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537527,"byte_end":537534,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537535,"byte_end":537538,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ In these cases the types provide a choice of parser functions rather than a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537539,"byte_end":537618,"line_start":147,"line_end":147,"column_start":1,"column_end":80}},{"value":"/ single `Parse` implementation, and those parser functions can be invoked","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537619,"byte_end":537695,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ through the [`Parser`] trait.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537696,"byte_end":537729,"line_start":149,"line_end":149,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537730,"byte_end":537733,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537734,"byte_end":537737,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537738,"byte_end":537745,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537746,"byte_end":537776,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537777,"byte_end":537782,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537783,"byte_end":537815,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"/ use syn::parse::Parser;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537816,"byte_end":537843,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537844,"byte_end":537880,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/ use syn::{Attribute, Expr, PathSegment, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537881,"byte_end":537940,"line_start":158,"line_end":158,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537941,"byte_end":537944,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ fn call_some_parser_methods(input: TokenStream) -> Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":537945,"byte_end":538012,"line_start":160,"line_end":160,"column_start":1,"column_end":68}},{"value":"/     // Parse a nonempty sequence of path segments separated by `::` punctuation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538013,"byte_end":538096,"line_start":161,"line_end":161,"column_start":1,"column_end":84}},{"value":"/     // with no trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538097,"byte_end":538137,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/     let tokens = input.clone();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538138,"byte_end":538173,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"/     let parser = Punctuated::<PathSegment, Token![::]>::parse_separated_nonempty;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538174,"byte_end":538259,"line_start":164,"line_end":164,"column_start":1,"column_end":86}},{"value":"/     let _path = parser.parse(tokens)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538260,"byte_end":538302,"line_start":165,"line_end":165,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538303,"byte_end":538306,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/     // Parse a possibly empty sequence of expressions terminated by commas with","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538307,"byte_end":538390,"line_start":167,"line_end":167,"column_start":1,"column_end":84}},{"value":"/     // an optional trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538391,"byte_end":538435,"line_start":168,"line_end":168,"column_start":1,"column_end":45}},{"value":"/     let tokens = input.clone();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538436,"byte_end":538471,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"/     let parser = Punctuated::<Expr, Token![,]>::parse_terminated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538472,"byte_end":538541,"line_start":170,"line_end":170,"column_start":1,"column_end":70}},{"value":"/     let _args = parser.parse(tokens)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538542,"byte_end":538584,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538585,"byte_end":538588,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/     // Parse zero or more outer attributes but not inner attributes.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538589,"byte_end":538661,"line_start":173,"line_end":173,"column_start":1,"column_end":73}},{"value":"/     let tokens = input.clone();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538662,"byte_end":538697,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/     let parser = Attribute::parse_outer;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538698,"byte_end":538742,"line_start":175,"line_end":175,"column_start":1,"column_end":45}},{"value":"/     let _attrs = parser.parse(tokens)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538743,"byte_end":538786,"line_start":176,"line_end":176,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538787,"byte_end":538790,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538791,"byte_end":538805,"line_start":178,"line_end":178,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538806,"byte_end":538811,"line_start":179,"line_end":179,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538812,"byte_end":538819,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538820,"byte_end":538823,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538824,"byte_end":538831,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538832,"byte_end":538835,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ *This module is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538836,"byte_end":538917,"line_start":184,"line_end":184,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"discouraged","qualname":"::parse::discouraged","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2944}],"decl_id":null,"docs":" Extensions to the parsing API with niche applicability.\n","sig":null,"attributes":[{"value":"path = \"discouraged.rs\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538919,"byte_end":538945,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ Extensions to the parsing API with niche applicability.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577138,"byte_end":577197,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577296,"byte_end":577307,"line_start":6,"line_end":6,"column_start":11,"column_end":22},"name":"Speculative","qualname":"::parse::discouraged::Speculative","value":"Speculative","parent":null,"children":[{"krate":0,"index":2943}],"decl_id":null,"docs":" Extensions to the `ParseStream` API to support speculative parsing.\n","sig":null,"attributes":[{"value":"/ Extensions to the `ParseStream` API to support speculative parsing.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577214,"byte_end":577285,"line_start":5,"line_end":5,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583511,"byte_end":583521,"line_start":157,"line_end":157,"column_start":8,"column_end":18},"name":"advance_to","qualname":"::parse::discouraged::Speculative::advance_to","value":"fn advance_to(&Self, &Self)","parent":{"krate":0,"index":2942},"children":[],"decl_id":null,"docs":" Advance this parse stream to the position of a forked parse stream.","sig":null,"attributes":[{"value":"/ Advance this parse stream to the position of a forked parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577314,"byte_end":577385,"line_start":7,"line_end":7,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577390,"byte_end":577393,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This is the opposite operation to [`ParseStream::fork`]. You can fork a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577398,"byte_end":577473,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ parse stream, perform some speculative parsing, then join the original","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577478,"byte_end":577552,"line_start":10,"line_end":10,"column_start":5,"column_end":79}},{"value":"/ stream to the fork to \"commit\" the parsing from the fork to the main","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577557,"byte_end":577629,"line_start":11,"line_end":11,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577634,"byte_end":577645,"line_start":12,"line_end":12,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577650,"byte_end":577653,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If you can avoid doing this, you should, as it limits the ability to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577658,"byte_end":577730,"line_start":14,"line_end":14,"column_start":5,"column_end":77}},{"value":"/ generate useful errors. That said, it is often the only way to parse","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577735,"byte_end":577807,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ syntax of the form `A* B*` for arbitrary syntax `A` and `B`. The problem","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577812,"byte_end":577888,"line_start":16,"line_end":16,"column_start":5,"column_end":81}},{"value":"/ is that when the fork fails to parse an `A`, it's impossible to tell","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577893,"byte_end":577965,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ whether that was because of a syntax error and the user meant to provide","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":577970,"byte_end":578046,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ an `A`, or that the `A`s are finished and it's time to start parsing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578051,"byte_end":578123,"line_start":19,"line_end":19,"column_start":5,"column_end":77}},{"value":"/ `B`s. Use with care.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578128,"byte_end":578152,"line_start":20,"line_end":20,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578157,"byte_end":578160,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Also note that if `A` is a subset of `B`, `A* B*` can be parsed by","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578165,"byte_end":578235,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ parsing `B*` and removing the leading members of `A` from the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578240,"byte_end":578305,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/ repetition, bypassing the need to involve the downsides associated with","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578310,"byte_end":578385,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ speculative parsing.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578390,"byte_end":578414,"line_start":25,"line_end":25,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578419,"byte_end":578422,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ [`ParseStream::fork`]: ParseBuffer::fork","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578427,"byte_end":578471,"line_start":27,"line_end":27,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578476,"byte_end":578479,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578484,"byte_end":578497,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578502,"byte_end":578505,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ There has been chatter about the possibility of making the colons in the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578510,"byte_end":578586,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ turbofish syntax like `path::to::<T>` no longer required by accepting","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578591,"byte_end":578664,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ `path::to<T>` in expression position. Specifically, according to [RFC","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578669,"byte_end":578742,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ 2544], [`PathSegment`] parsing should always try to consume a following","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578747,"byte_end":578822,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ `<` token as the start of generic arguments, and reset to the `<` if","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578827,"byte_end":578899,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ that fails (e.g. the token is acting as a less-than operator).","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578904,"byte_end":578970,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578975,"byte_end":578978,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This is the exact kind of parsing behavior which requires the \"fork,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":578983,"byte_end":579055,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ try, commit\" behavior that [`ParseStream::fork`] discourages. With","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579060,"byte_end":579130,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ `advance_to`, we can avoid having to parse the speculatively parsed","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579135,"byte_end":579206,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ content a second time.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579211,"byte_end":579237,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579242,"byte_end":579245,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This change in behavior can be implemented in syn by replacing just the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579250,"byte_end":579325,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ `Parse` implementation for `PathSegment`:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579330,"byte_end":579375,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579380,"byte_end":579383,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579388,"byte_end":579395,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # use syn::ext::IdentExt;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579400,"byte_end":579429,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/ use syn::parse::discouraged::Speculative;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579434,"byte_end":579479,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/ # use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579484,"byte_end":579527,"line_start":49,"line_end":49,"column_start":5,"column_end":48}},{"value":"/ # use syn::{Ident, PathArguments, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579532,"byte_end":579585,"line_start":50,"line_end":50,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579590,"byte_end":579593,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ pub struct PathSegment {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579598,"byte_end":579626,"line_start":52,"line_end":52,"column_start":5,"column_end":33}},{"value":"/     pub ident: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579631,"byte_end":579656,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/     pub arguments: PathArguments,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579661,"byte_end":579698,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579703,"byte_end":579708,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579713,"byte_end":579718,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # impl<T> From<T> for PathSegment","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579723,"byte_end":579760,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ # where","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579765,"byte_end":579776,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ #     T: Into<Ident>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579781,"byte_end":579806,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/ # {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579811,"byte_end":579818,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ #     fn from(ident: T) -> Self {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579823,"byte_end":579860,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/ #         PathSegment {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579865,"byte_end":579892,"line_start":62,"line_end":62,"column_start":5,"column_end":32}},{"value":"/ #             ident: ident.into(),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579897,"byte_end":579935,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ #             arguments: PathArguments::None,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579940,"byte_end":579989,"line_start":64,"line_end":64,"column_start":5,"column_end":54}},{"value":"/ #         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":579994,"byte_end":580009,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"/ #     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580014,"byte_end":580025,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580030,"byte_end":580037,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580042,"byte_end":580045,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ impl Parse for PathSegment {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580050,"byte_end":580082,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580087,"byte_end":580141,"line_start":70,"line_end":70,"column_start":5,"column_end":59}},{"value":"/         if input.peek(Token![super])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580146,"byte_end":580186,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"/             || input.peek(Token![self])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580191,"byte_end":580234,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/             || input.peek(Token![Self])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580239,"byte_end":580282,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/             || input.peek(Token![crate])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580287,"byte_end":580331,"line_start":74,"line_end":74,"column_start":5,"column_end":49}},{"value":"/         {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580336,"byte_end":580349,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/             let ident = input.call(Ident::parse_any)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580354,"byte_end":580412,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/             return Ok(PathSegment::from(ident));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580417,"byte_end":580469,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580474,"byte_end":580487,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580492,"byte_end":580495,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/         let ident = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580500,"byte_end":580539,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/         if input.peek(Token![::]) && input.peek3(Token![<]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580544,"byte_end":580609,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/             return Ok(PathSegment {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580614,"byte_end":580653,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/                 ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580658,"byte_end":580684,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/                 arguments: PathArguments::AngleBracketed(input.parse()?),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580689,"byte_end":580766,"line_start":84,"line_end":84,"column_start":5,"column_end":82}},{"value":"/             });","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580771,"byte_end":580790,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580795,"byte_end":580808,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/         if input.peek(Token![<]) && !input.peek(Token![<=]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580813,"byte_end":580878,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/             let fork = input.fork();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580883,"byte_end":580923,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/             if let Ok(arguments) = fork.parse() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580928,"byte_end":580981,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/                 input.advance_to(&fork);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":580986,"byte_end":581030,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/                 return Ok(PathSegment {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581035,"byte_end":581078,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/                     ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581083,"byte_end":581113,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/                     arguments: PathArguments::AngleBracketed(arguments),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581118,"byte_end":581194,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/                 });","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581199,"byte_end":581222,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581227,"byte_end":581244,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581249,"byte_end":581262,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/         Ok(PathSegment::from(ident))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581267,"byte_end":581307,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581312,"byte_end":581321,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581326,"byte_end":581331,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581336,"byte_end":581339,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # syn::parse_str::<PathSegment>(\"a<b,c>\").unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581344,"byte_end":581399,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581404,"byte_end":581411,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581416,"byte_end":581419,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Drawbacks","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581424,"byte_end":581439,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581444,"byte_end":581447,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The main drawback of this style of speculative parsing is in error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581452,"byte_end":581522,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ presentation. Even if the lookahead is the \"correct\" parse, the error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581527,"byte_end":581600,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ that is shown is that of the \"fallback\" parse. To use the same example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581605,"byte_end":581679,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ as the turbofish above, take the following unfinished \"turbofish\":","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581684,"byte_end":581754,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581759,"byte_end":581762,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581767,"byte_end":581778,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ let _ = f<&'a fn(), for<'a> serde::>();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581783,"byte_end":581826,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581831,"byte_end":581838,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581843,"byte_end":581846,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If this is parsed as generic arguments, we can provide the error message","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581851,"byte_end":581927,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581932,"byte_end":581935,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581940,"byte_end":581951,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/ error: expected identifier","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581956,"byte_end":581986,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/  --> src.rs:L:C","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":581991,"byte_end":582010,"line_start":119,"line_end":119,"column_start":5,"column_end":24}},{"value":"/   |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582015,"byte_end":582022,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ L | let _ = f<&'a fn(), for<'a> serde::>();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582027,"byte_end":582074,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/   |                                    ^","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582079,"byte_end":582123,"line_start":122,"line_end":122,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582128,"byte_end":582135,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582140,"byte_end":582143,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ but if parsed using the above speculative parsing, it falls back to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582148,"byte_end":582219,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ assuming that the `<` is a less-than when it fails to parse the generic","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582224,"byte_end":582299,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ arguments, and tries to interpret the `&'a` as the start of a labelled","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582304,"byte_end":582378,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ loop, resulting in the much less helpful error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582383,"byte_end":582433,"line_start":128,"line_end":128,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582438,"byte_end":582441,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582446,"byte_end":582457,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ error: expected `:`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582462,"byte_end":582485,"line_start":131,"line_end":131,"column_start":5,"column_end":28}},{"value":"/  --> src.rs:L:C","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582490,"byte_end":582509,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"/   |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582514,"byte_end":582521,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ L | let _ = f<&'a fn(), for<'a> serde::>();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582526,"byte_end":582573,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/   |               ^^","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582578,"byte_end":582602,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582607,"byte_end":582614,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582619,"byte_end":582622,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This can be mitigated with various heuristics (two examples: show both","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582627,"byte_end":582701,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ forks' parse errors, or show the one that consumed more tokens), but","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582706,"byte_end":582778,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ when you can control the grammar, sticking to something that can be","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582783,"byte_end":582854,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ parsed LL(3) and without the LL(*) speculative parsing this makes","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582859,"byte_end":582928,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/ possible, displaying reasonable errors becomes much more simple.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":582933,"byte_end":583001,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583006,"byte_end":583009,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [RFC 2544]: https://github.com/rust-lang/rfcs/pull/2544","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583014,"byte_end":583073,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/ [`PathSegment`]: crate::PathSegment","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583078,"byte_end":583117,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583122,"byte_end":583125,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Performance","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583130,"byte_end":583147,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583152,"byte_end":583155,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This method performs a cheap fixed amount of work that does not depend","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583160,"byte_end":583234,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ on how far apart the two streams are positioned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583239,"byte_end":583291,"line_start":150,"line_end":150,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583296,"byte_end":583299,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583304,"byte_end":583316,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583321,"byte_end":583324,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The forked stream in the argument of `advance_to` must have been","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583329,"byte_end":583397,"line_start":154,"line_end":154,"column_start":5,"column_end":73}},{"value":"/ obtained by forking `self`. Attempting to advance to any other stream","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583402,"byte_end":583475,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ will cause a panic.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583480,"byte_end":583503,"line_start":156,"line_end":156,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583596,"byte_end":583606,"line_start":161,"line_end":161,"column_start":8,"column_end":18},"name":"advance_to","qualname":"<ParseBuffer as parse::discouraged::Speculative>::advance_to","value":"fn advance_to(&Self, &Self)","parent":{"krate":0,"index":2942},"children":[],"decl_id":{"krate":0,"index":2943},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539928,"byte_end":539933,"line_start":220,"line_end":220,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parse::Parse","value":"Parse: Sized","parent":null,"children":[{"krate":0,"index":3037}],"decl_id":null,"docs":" Parsing interface implemented by all types that can be parsed in a default\n way from a token stream.","sig":null,"attributes":[{"value":"/ Parsing interface implemented by all types that can be parsed in a default","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539665,"byte_end":539743,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ way from a token stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539744,"byte_end":539772,"line_start":214,"line_end":214,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539773,"byte_end":539776,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about implementing and using","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539777,"byte_end":539857,"line_start":216,"line_end":216,"column_start":1,"column_end":81}},{"value":"/ the `Parse` trait.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539858,"byte_end":539880,"line_start":217,"line_end":217,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539881,"byte_end":539884,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539885,"byte_end":539917,"line_start":219,"line_end":219,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539950,"byte_end":539955,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse::Parse::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540235,"byte_end":540246,"line_start":230,"line_end":230,"column_start":10,"column_end":21},"name":"ParseStream","qualname":"::parse::ParseStream","value":"&'a ParseBuffer","parent":null,"children":[],"decl_id":null,"docs":" Input to a Syn parser function.","sig":null,"attributes":[{"value":"/ Input to a Syn parser function.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539996,"byte_end":540031,"line_start":224,"line_end":224,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540032,"byte_end":540035,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ See the methods of this type under the documentation of [`ParseBuffer`]. For","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540036,"byte_end":540116,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ an overview of parsing in Syn, refer to the [module documentation].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540117,"byte_end":540188,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540189,"byte_end":540192,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540193,"byte_end":540225,"line_start":229,"line_end":229,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541144,"byte_end":541155,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parse::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045}],"decl_id":null,"docs":" Cursor position within a buffered token stream.","sig":null,"attributes":[{"value":"/ Cursor position within a buffered token stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540275,"byte_end":540326,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540327,"byte_end":540330,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ This type is more commonly used through the type alias [`ParseStream`] which","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540331,"byte_end":540411,"line_start":234,"line_end":234,"column_start":1,"column_end":81}},{"value":"/ is an alias for `&ParseBuffer`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540412,"byte_end":540447,"line_start":235,"line_end":235,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540448,"byte_end":540451,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ `ParseStream` is the input type for all parser functions in Syn. They have","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540452,"byte_end":540530,"line_start":237,"line_end":237,"column_start":1,"column_end":79}},{"value":"/ the signature `fn(ParseStream) -> Result<T>`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540531,"byte_end":540580,"line_start":238,"line_end":238,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540581,"byte_end":540584,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ## Calling a parser function","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540585,"byte_end":540617,"line_start":240,"line_end":240,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540618,"byte_end":540621,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ There is no public way to construct a `ParseBuffer`. Instead, if you are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540622,"byte_end":540698,"line_start":242,"line_end":242,"column_start":1,"column_end":77}},{"value":"/ looking to invoke a parser function that requires `ParseStream` as input,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540699,"byte_end":540776,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ you will need to go through one of the public parsing entry points.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540777,"byte_end":540848,"line_start":244,"line_end":244,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540849,"byte_end":540852,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ - The [`parse_macro_input!`] macro if parsing input of a procedural macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540853,"byte_end":540931,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/ - One of [the `syn::parse*` functions][syn-parse]; or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540932,"byte_end":540989,"line_start":247,"line_end":247,"column_start":1,"column_end":58}},{"value":"/ - A method of the [`Parser`] trait.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":540990,"byte_end":541029,"line_start":248,"line_end":248,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541030,"byte_end":541033,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [`parse_macro_input!`]: crate::parse_macro_input!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541034,"byte_end":541087,"line_start":250,"line_end":250,"column_start":1,"column_end":54}},{"value":"/ [syn-parse]: self#the-synparse-functions","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541088,"byte_end":541132,"line_start":251,"line_end":251,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541979,"byte_end":541983,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"drop","qualname":"<ParseBuffer as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542324,"byte_end":542327,"line_start":282,"line_end":282,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseBuffer as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542484,"byte_end":542487,"line_start":288,"line_end":288,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseBuffer as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544014,"byte_end":544024,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"StepCursor","qualname":"::parse::StepCursor","value":"StepCursor {  }","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060}],"decl_id":null,"docs":" Cursor state associated with speculative parsing.","sig":null,"attributes":[{"value":"/ Cursor state associated with speculative parsing.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542598,"byte_end":542651,"line_start":293,"line_end":293,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542652,"byte_end":542655,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ This type is the input of the closure provided to [`ParseStream::step`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542656,"byte_end":542732,"line_start":295,"line_end":295,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542733,"byte_end":542736,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::step`]: ParseBuffer::step","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542737,"byte_end":542781,"line_start":297,"line_end":297,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542782,"byte_end":542785,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542786,"byte_end":542799,"line_start":299,"line_end":299,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542800,"byte_end":542803,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542804,"byte_end":542811,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::TokenTree;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542812,"byte_end":542843,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"/ use syn::Result;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542844,"byte_end":542864,"line_start":303,"line_end":303,"column_start":1,"column_end":21}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542865,"byte_end":542897,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542898,"byte_end":542901,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // This function advances the stream past the next occurrence of `@`. If","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542902,"byte_end":542978,"line_start":306,"line_end":306,"column_start":1,"column_end":77}},{"value":"/ // no `@` is present in the stream, the stream position is unchanged and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542979,"byte_end":543055,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/ // an error is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543056,"byte_end":543084,"line_start":308,"line_end":308,"column_start":1,"column_end":29}},{"value":"/ fn skip_past_next_at(input: ParseStream) -> Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543085,"byte_end":543145,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/     input.step(|cursor| {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543146,"byte_end":543175,"line_start":310,"line_end":310,"column_start":1,"column_end":30}},{"value":"/         let mut rest = *cursor;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543176,"byte_end":543211,"line_start":311,"line_end":311,"column_start":1,"column_end":36}},{"value":"/         while let Some((tt, next)) = rest.token_tree() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543212,"byte_end":543272,"line_start":312,"line_end":312,"column_start":1,"column_end":61}},{"value":"/             match &tt {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543273,"byte_end":543300,"line_start":313,"line_end":313,"column_start":1,"column_end":28}},{"value":"/                 TokenTree::Punct(punct) if punct.as_char() == '@' => {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543301,"byte_end":543375,"line_start":314,"line_end":314,"column_start":1,"column_end":75}},{"value":"/                     return Ok(((), next));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543376,"byte_end":543422,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/                 }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543423,"byte_end":543444,"line_start":316,"line_end":316,"column_start":1,"column_end":22}},{"value":"/                 _ => rest = next,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543445,"byte_end":543482,"line_start":317,"line_end":317,"column_start":1,"column_end":38}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543483,"byte_end":543500,"line_start":318,"line_end":318,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543501,"byte_end":543514,"line_start":319,"line_end":319,"column_start":1,"column_end":14}},{"value":"/         Err(cursor.error(\"no `@` was found after this point\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543515,"byte_end":543581,"line_start":320,"line_end":320,"column_start":1,"column_end":67}},{"value":"/     })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543582,"byte_end":543592,"line_start":321,"line_end":321,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543593,"byte_end":543598,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543599,"byte_end":543604,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/ # fn remainder_after_skipping_past_next_at(","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543605,"byte_end":543652,"line_start":324,"line_end":324,"column_start":1,"column_end":48}},{"value":"/ #     input: ParseStream,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543653,"byte_end":543682,"line_start":325,"line_end":325,"column_start":1,"column_end":30}},{"value":"/ # ) -> Result<proc_macro2::TokenStream> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543683,"byte_end":543728,"line_start":326,"line_end":326,"column_start":1,"column_end":46}},{"value":"/ #     skip_past_next_at(input)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543729,"byte_end":543765,"line_start":327,"line_end":327,"column_start":1,"column_end":37}},{"value":"/ #     input.parse()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543766,"byte_end":543789,"line_start":328,"line_end":328,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543790,"byte_end":543797,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543798,"byte_end":543803,"line_start":330,"line_end":330,"column_start":1,"column_end":6}},{"value":"/ # use syn::parse::Parser;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543804,"byte_end":543833,"line_start":331,"line_end":331,"column_start":1,"column_end":30}},{"value":"/ # let remainder = remainder_after_skipping_past_next_at","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543834,"byte_end":543893,"line_start":332,"line_end":332,"column_start":1,"column_end":60}},{"value":"/ #     .parse_str(\"a @ b c\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543894,"byte_end":543925,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"/ #     .unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543926,"byte_end":543946,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/ # assert_eq!(remainder.to_string(), \"b c\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543947,"byte_end":543994,"line_start":335,"line_end":335,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":543995,"byte_end":544002,"line_start":336,"line_end":336,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544683,"byte_end":544688,"line_start":355,"line_end":355,"column_start":8,"column_end":13},"name":"deref","qualname":"<StepCursor as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544841,"byte_end":544846,"line_start":363,"line_end":363,"column_start":8,"column_end":13},"name":"clone","qualname":"<StepCursor as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":545126,"byte_end":545131,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"error","qualname":"<StepCursor>::error","value":"fn error<T>(Self, T) -> Error where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.","sig":null,"attributes":[{"value":"/ Triggers an error at the current position of the parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544925,"byte_end":544991,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544996,"byte_end":544999,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The `ParseStream::step` invocation will return this same error without","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":545004,"byte_end":545078,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ advancing the stream state.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":545083,"byte_end":545114,"line_start":372,"line_end":372,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":547907,"byte_end":547912,"line_start":467,"line_end":467,"column_start":12,"column_end":17},"name":"parse","qualname":"<ParseBuffer>::parse","value":"fn parse<T>(&Self) -> Result<T> where T: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses a syntax tree node of type `T`, advancing the position of our\n parse stream past it.\n","sig":null,"attributes":[{"value":"/ Parses a syntax tree node of type `T`, advancing the position of our","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":547793,"byte_end":547865,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/ parse stream past it.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":547870,"byte_end":547895,"line_start":466,"line_end":466,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549134,"byte_end":549138,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"call","qualname":"<ParseBuffer>::call","value":"fn call<T>(&Self, for<'_> fn(: ParseStream) -> Result<T>) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Calls the given parser function to parse a syntax tree node of type `T`\n from this stream.","sig":null,"attributes":[{"value":"/ Calls the given parser function to parse a syntax tree node of type `T`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":547979,"byte_end":548054,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ from this stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548059,"byte_end":548080,"line_start":472,"line_end":472,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548085,"byte_end":548088,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548093,"byte_end":548106,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548111,"byte_end":548114,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ The parser below invokes [`Attribute::parse_outer`] to parse a vector of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548119,"byte_end":548195,"line_start":476,"line_end":476,"column_start":5,"column_end":81}},{"value":"/ zero or more outer attributes.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548200,"byte_end":548234,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548239,"byte_end":548242,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [`Attribute::parse_outer`]: crate::Attribute::parse_outer","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548247,"byte_end":548308,"line_start":479,"line_end":479,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548313,"byte_end":548316,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548321,"byte_end":548328,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use syn::{Attribute, Ident, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548333,"byte_end":548380,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548385,"byte_end":548426,"line_start":483,"line_end":483,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548431,"byte_end":548434,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ // Parses a unit struct with attributes.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548439,"byte_end":548483,"line_start":485,"line_end":485,"column_start":5,"column_end":49}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548488,"byte_end":548494,"line_start":486,"line_end":486,"column_start":5,"column_end":11}},{"value":"/ //     #[path = \"s.tmpl\"]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548499,"byte_end":548528,"line_start":487,"line_end":487,"column_start":5,"column_end":34}},{"value":"/ //     struct S;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548533,"byte_end":548553,"line_start":488,"line_end":488,"column_start":5,"column_end":25}},{"value":"/ struct UnitStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548558,"byte_end":548581,"line_start":489,"line_end":489,"column_start":5,"column_end":28}},{"value":"/     attrs: Vec<Attribute>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548586,"byte_end":548616,"line_start":490,"line_end":490,"column_start":5,"column_end":35}},{"value":"/     struct_token: Token![struct],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548621,"byte_end":548658,"line_start":491,"line_end":491,"column_start":5,"column_end":42}},{"value":"/     name: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548663,"byte_end":548683,"line_start":492,"line_end":492,"column_start":5,"column_end":25}},{"value":"/     semi_token: Token![;],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548688,"byte_end":548718,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548723,"byte_end":548728,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548733,"byte_end":548736,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ impl Parse for UnitStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548741,"byte_end":548772,"line_start":496,"line_end":496,"column_start":5,"column_end":36}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548777,"byte_end":548831,"line_start":497,"line_end":497,"column_start":5,"column_end":59}},{"value":"/         Ok(UnitStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548836,"byte_end":548863,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/             attrs: input.call(Attribute::parse_outer)?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548868,"byte_end":548927,"line_start":499,"line_end":499,"column_start":5,"column_end":64}},{"value":"/             struct_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548932,"byte_end":548977,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/             name: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":548982,"byte_end":549019,"line_start":501,"line_end":501,"column_start":5,"column_end":42}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549024,"byte_end":549067,"line_start":502,"line_end":502,"column_start":5,"column_end":48}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549072,"byte_end":549086,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549091,"byte_end":549100,"line_start":504,"line_end":504,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549105,"byte_end":549110,"line_start":505,"line_end":505,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549115,"byte_end":549122,"line_start":506,"line_end":506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551912,"byte_end":551916,"line_start":583,"line_end":583,"column_start":12,"column_end":16},"name":"peek","qualname":"<ParseBuffer>::peek","value":"fn peek<T>(&Self, T) -> bool where T: Peek","parent":null,"children":[],"decl_id":null,"docs":" Looks at the next token in the parse stream to determine whether it\n matches the requested type of token.","sig":null,"attributes":[{"value":"/ Looks at the next token in the parse stream to determine whether it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549238,"byte_end":549309,"line_start":511,"line_end":511,"column_start":5,"column_end":76}},{"value":"/ matches the requested type of token.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549314,"byte_end":549354,"line_start":512,"line_end":512,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549359,"byte_end":549362,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Does not advance the position of the parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549367,"byte_end":549421,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549426,"byte_end":549429,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549434,"byte_end":549446,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549451,"byte_end":549454,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not use turbofish syntax. Pass the peek type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549459,"byte_end":549534,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/ inside of parentheses.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549539,"byte_end":549565,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549570,"byte_end":549573,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ - `input.peek(Token![struct])`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549578,"byte_end":549612,"line_start":521,"line_end":521,"column_start":5,"column_end":39}},{"value":"/ - `input.peek(Token![==])`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549617,"byte_end":549647,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ - `input.peek(Ident)`&emsp;*(does not accept keywords)*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549652,"byte_end":549711,"line_start":523,"line_end":523,"column_start":5,"column_end":64}},{"value":"/ - `input.peek(Ident::peek_any)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549716,"byte_end":549751,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/ - `input.peek(Lifetime)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549756,"byte_end":549784,"line_start":525,"line_end":525,"column_start":5,"column_end":33}},{"value":"/ - `input.peek(token::Brace)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549789,"byte_end":549821,"line_start":526,"line_end":526,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549826,"byte_end":549829,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549834,"byte_end":549847,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549852,"byte_end":549855,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ In this example we finish parsing the list of supertraits when the next","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549860,"byte_end":549935,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ token in the input is either `where` or an opening curly brace.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":549940,"byte_end":550007,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550012,"byte_end":550015,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550020,"byte_end":550027,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use syn::{braced, token, Generics, Ident, Result, Token, TypeParamBound};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550032,"byte_end":550109,"line_start":534,"line_end":534,"column_start":5,"column_end":82}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550114,"byte_end":550155,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550160,"byte_end":550196,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550201,"byte_end":550204,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ // Parses a trait definition containing no associated items.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550209,"byte_end":550273,"line_start":538,"line_end":538,"column_start":5,"column_end":69}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550278,"byte_end":550284,"line_start":539,"line_end":539,"column_start":5,"column_end":11}},{"value":"/ //     trait Marker<'de, T>: A + B<'de> where Box<T>: Clone {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550289,"byte_end":550355,"line_start":540,"line_end":540,"column_start":5,"column_end":71}},{"value":"/ struct MarkerTrait {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550360,"byte_end":550384,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/     trait_token: Token![trait],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550389,"byte_end":550424,"line_start":542,"line_end":542,"column_start":5,"column_end":40}},{"value":"/     ident: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550429,"byte_end":550450,"line_start":543,"line_end":543,"column_start":5,"column_end":26}},{"value":"/     generics: Generics,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550455,"byte_end":550482,"line_start":544,"line_end":544,"column_start":5,"column_end":32}},{"value":"/     colon_token: Option<Token![:]>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550487,"byte_end":550526,"line_start":545,"line_end":545,"column_start":5,"column_end":44}},{"value":"/     supertraits: Punctuated<TypeParamBound, Token![+]>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550531,"byte_end":550590,"line_start":546,"line_end":546,"column_start":5,"column_end":64}},{"value":"/     brace_token: token::Brace,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550595,"byte_end":550629,"line_start":547,"line_end":547,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550634,"byte_end":550639,"line_start":548,"line_end":548,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550644,"byte_end":550647,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ impl Parse for MarkerTrait {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550652,"byte_end":550684,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550689,"byte_end":550743,"line_start":551,"line_end":551,"column_start":5,"column_end":59}},{"value":"/         let trait_token: Token![trait] = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550748,"byte_end":550808,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/         let ident: Ident = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550813,"byte_end":550859,"line_start":553,"line_end":553,"column_start":5,"column_end":51}},{"value":"/         let mut generics: Generics = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550864,"byte_end":550920,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/         let colon_token: Option<Token![:]> = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550925,"byte_end":550989,"line_start":555,"line_end":555,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":550994,"byte_end":550997,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/         let mut supertraits = Punctuated::new();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551002,"byte_end":551054,"line_start":557,"line_end":557,"column_start":5,"column_end":57}},{"value":"/         if colon_token.is_some() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551059,"byte_end":551097,"line_start":558,"line_end":558,"column_start":5,"column_end":43}},{"value":"/             loop {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551102,"byte_end":551124,"line_start":559,"line_end":559,"column_start":5,"column_end":27}},{"value":"/                 supertraits.push_value(input.parse()?);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551129,"byte_end":551188,"line_start":560,"line_end":560,"column_start":5,"column_end":64}},{"value":"/                 if input.peek(Token![where]) || input.peek(token::Brace) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551193,"byte_end":551271,"line_start":561,"line_end":561,"column_start":5,"column_end":83}},{"value":"/                     break;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551276,"byte_end":551306,"line_start":562,"line_end":562,"column_start":5,"column_end":35}},{"value":"/                 }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551311,"byte_end":551332,"line_start":563,"line_end":563,"column_start":5,"column_end":26}},{"value":"/                 supertraits.push_punct(input.parse()?);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551337,"byte_end":551396,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551401,"byte_end":551418,"line_start":565,"line_end":565,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551423,"byte_end":551436,"line_start":566,"line_end":566,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551441,"byte_end":551444,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/         generics.where_clause = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551449,"byte_end":551500,"line_start":568,"line_end":568,"column_start":5,"column_end":56}},{"value":"/         let content;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551505,"byte_end":551529,"line_start":569,"line_end":569,"column_start":5,"column_end":29}},{"value":"/         let empty_brace_token = braced!(content in input);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551534,"byte_end":551596,"line_start":570,"line_end":570,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551601,"byte_end":551604,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/         Ok(MarkerTrait {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551609,"byte_end":551637,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/             trait_token,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551642,"byte_end":551670,"line_start":573,"line_end":573,"column_start":5,"column_end":33}},{"value":"/             ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551675,"byte_end":551697,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/             generics,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551702,"byte_end":551727,"line_start":575,"line_end":575,"column_start":5,"column_end":30}},{"value":"/             colon_token,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551732,"byte_end":551760,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/             supertraits,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551765,"byte_end":551793,"line_start":577,"line_end":577,"column_start":5,"column_end":33}},{"value":"/             brace_token: empty_brace_token,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551798,"byte_end":551845,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551850,"byte_end":551864,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551869,"byte_end":551878,"line_start":580,"line_end":580,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551883,"byte_end":551888,"line_start":581,"line_end":581,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":551893,"byte_end":551900,"line_start":582,"line_end":582,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553339,"byte_end":553344,"line_start":622,"line_end":622,"column_start":12,"column_end":17},"name":"peek2","qualname":"<ParseBuffer>::peek2","value":"fn peek2<T>(&Self, T) -> bool where T: Peek","parent":null,"children":[],"decl_id":null,"docs":" Looks at the second-next token in the parse stream.","sig":null,"attributes":[{"value":"/ Looks at the second-next token in the parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552025,"byte_end":552080,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552085,"byte_end":552088,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This is commonly useful as a way to implement contextual keywords.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552093,"byte_end":552163,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552168,"byte_end":552171,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552176,"byte_end":552189,"line_start":592,"line_end":592,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552194,"byte_end":552197,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This example needs to use `peek2` because the symbol `union` is not a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552202,"byte_end":552275,"line_start":594,"line_end":594,"column_start":5,"column_end":78}},{"value":"/ keyword in Rust. We can't use just `peek` and decide to parse a union if","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552280,"byte_end":552356,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/ the very next token is `union`, because someone is free to write a `mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552361,"byte_end":552436,"line_start":596,"line_end":596,"column_start":5,"column_end":80}},{"value":"/ union` and a macro invocation that looks like `union::some_macro! { ...","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552441,"byte_end":552516,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ }`. In other words `union` is a contextual keyword.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552521,"byte_end":552576,"line_start":598,"line_end":598,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552581,"byte_end":552584,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552589,"byte_end":552596,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ use syn::{Ident, ItemUnion, Macro, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552601,"byte_end":552655,"line_start":601,"line_end":601,"column_start":5,"column_end":59}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552660,"byte_end":552701,"line_start":602,"line_end":602,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552706,"byte_end":552709,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ // Parses either a union or a macro invocation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552714,"byte_end":552765,"line_start":604,"line_end":604,"column_start":5,"column_end":56}},{"value":"/ enum UnionOrMacro {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552770,"byte_end":552793,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/     // union MaybeUninit<T> { uninit: (), value: T }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552798,"byte_end":552854,"line_start":606,"line_end":606,"column_start":5,"column_end":61}},{"value":"/     Union(ItemUnion),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552859,"byte_end":552884,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/     // lazy_static! { ... }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552889,"byte_end":552920,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/     Macro(Macro),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552925,"byte_end":552946,"line_start":609,"line_end":609,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552951,"byte_end":552956,"line_start":610,"line_end":610,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552961,"byte_end":552964,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ impl Parse for UnionOrMacro {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":552969,"byte_end":553002,"line_start":612,"line_end":612,"column_start":5,"column_end":38}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553007,"byte_end":553061,"line_start":613,"line_end":613,"column_start":5,"column_end":59}},{"value":"/         if input.peek(Token![union]) && input.peek2(Ident) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553066,"byte_end":553130,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/             input.parse().map(UnionOrMacro::Union)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553135,"byte_end":553189,"line_start":615,"line_end":615,"column_start":5,"column_end":59}},{"value":"/         } else {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553194,"byte_end":553214,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/             input.parse().map(UnionOrMacro::Macro)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553219,"byte_end":553273,"line_start":617,"line_end":617,"column_start":5,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553278,"byte_end":553291,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553296,"byte_end":553305,"line_start":619,"line_end":619,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553310,"byte_end":553315,"line_start":620,"line_end":620,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553320,"byte_end":553327,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553853,"byte_end":553858,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"peek3","qualname":"<ParseBuffer>::peek3","value":"fn peek3<T>(&Self, T) -> bool where T: Peek","parent":null,"children":[],"decl_id":null,"docs":" Looks at the third-next token in the parse stream.\n","sig":null,"attributes":[{"value":"/ Looks at the third-next token in the parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":553787,"byte_end":553841,"line_start":636,"line_end":636,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555909,"byte_end":555925,"line_start":699,"line_end":699,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<ParseBuffer>::parse_terminated","value":"fn parse_terminated<T, P>(&Self, for<'_> fn(: ParseStream) -> Result<T>)\n-> Result<Punctuated<T, P>> where P: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` separated by punctuation of type\n `P`, with optional trailing punctuation.","sig":null,"attributes":[{"value":"/ Parses zero or more occurrences of `T` separated by punctuation of type","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554415,"byte_end":554490,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ `P`, with optional trailing punctuation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554495,"byte_end":554539,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554544,"byte_end":554547,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Parsing continues until the end of this parse stream. The entire content","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554552,"byte_end":554628,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ of this parse stream must consist of `T` and `P`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554633,"byte_end":554686,"line_start":659,"line_end":659,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554691,"byte_end":554694,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554699,"byte_end":554712,"line_start":661,"line_end":661,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554717,"byte_end":554720,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554725,"byte_end":554732,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # use quote::quote;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554737,"byte_end":554760,"line_start":664,"line_end":664,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554765,"byte_end":554770,"line_start":665,"line_end":665,"column_start":5,"column_end":10}},{"value":"/ use syn::{parenthesized, token, Ident, Result, Token, Type};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554775,"byte_end":554839,"line_start":666,"line_end":666,"column_start":5,"column_end":69}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554844,"byte_end":554885,"line_start":667,"line_end":667,"column_start":5,"column_end":46}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554890,"byte_end":554926,"line_start":668,"line_end":668,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554931,"byte_end":554934,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ // Parse a simplified tuple struct syntax like:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554939,"byte_end":554990,"line_start":670,"line_end":670,"column_start":5,"column_end":56}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":554995,"byte_end":555001,"line_start":671,"line_end":671,"column_start":5,"column_end":11}},{"value":"/ //     struct S(A, B);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555006,"byte_end":555032,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/ struct TupleStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555037,"byte_end":555061,"line_start":673,"line_end":673,"column_start":5,"column_end":29}},{"value":"/     struct_token: Token![struct],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555066,"byte_end":555103,"line_start":674,"line_end":674,"column_start":5,"column_end":42}},{"value":"/     ident: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555108,"byte_end":555129,"line_start":675,"line_end":675,"column_start":5,"column_end":26}},{"value":"/     paren_token: token::Paren,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555134,"byte_end":555168,"line_start":676,"line_end":676,"column_start":5,"column_end":39}},{"value":"/     fields: Punctuated<Type, Token![,]>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555173,"byte_end":555217,"line_start":677,"line_end":677,"column_start":5,"column_end":49}},{"value":"/     semi_token: Token![;],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555222,"byte_end":555252,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555257,"byte_end":555262,"line_start":679,"line_end":679,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555267,"byte_end":555270,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ impl Parse for TupleStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555275,"byte_end":555307,"line_start":681,"line_end":681,"column_start":5,"column_end":37}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555312,"byte_end":555366,"line_start":682,"line_end":682,"column_start":5,"column_end":59}},{"value":"/         let content;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555371,"byte_end":555395,"line_start":683,"line_end":683,"column_start":5,"column_end":29}},{"value":"/         Ok(TupleStruct {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555400,"byte_end":555428,"line_start":684,"line_end":684,"column_start":5,"column_end":33}},{"value":"/             struct_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555433,"byte_end":555478,"line_start":685,"line_end":685,"column_start":5,"column_end":50}},{"value":"/             ident: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555483,"byte_end":555521,"line_start":686,"line_end":686,"column_start":5,"column_end":43}},{"value":"/             paren_token: parenthesized!(content in input),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555526,"byte_end":555588,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/             fields: content.parse_terminated(Type::parse)?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555593,"byte_end":555656,"line_start":688,"line_end":688,"column_start":5,"column_end":68}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555661,"byte_end":555704,"line_start":689,"line_end":689,"column_start":5,"column_end":48}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555709,"byte_end":555723,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555728,"byte_end":555737,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555742,"byte_end":555747,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555752,"byte_end":555757,"line_start":693,"line_end":693,"column_start":5,"column_end":10}},{"value":"/ # let input = quote! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555762,"byte_end":555788,"line_start":694,"line_end":694,"column_start":5,"column_end":31}},{"value":"/ #     struct S(A, B);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555793,"byte_end":555818,"line_start":695,"line_end":695,"column_start":5,"column_end":30}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555823,"byte_end":555831,"line_start":696,"line_end":696,"column_start":5,"column_end":13}},{"value":"/ # syn::parse2::<TupleStruct>(input).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555836,"byte_end":555885,"line_start":697,"line_end":697,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":555890,"byte_end":555897,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557352,"byte_end":557360,"line_start":743,"line_end":743,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParseBuffer>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are tokens remaining in this stream.","sig":null,"attributes":[{"value":"/ Returns whether there are tokens remaining in this stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556104,"byte_end":556166,"line_start":706,"line_end":706,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556171,"byte_end":556174,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method returns true at the end of the content of a set of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556179,"byte_end":556245,"line_start":708,"line_end":708,"column_start":5,"column_end":71}},{"value":"/ delimiters, as well as at the very end of the complete macro input.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556250,"byte_end":556321,"line_start":709,"line_end":709,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556326,"byte_end":556329,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556334,"byte_end":556347,"line_start":711,"line_end":711,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556352,"byte_end":556355,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556360,"byte_end":556367,"line_start":713,"line_end":713,"column_start":5,"column_end":12}},{"value":"/ use syn::{braced, token, Ident, Item, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556372,"byte_end":556429,"line_start":714,"line_end":714,"column_start":5,"column_end":62}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556434,"byte_end":556475,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556480,"byte_end":556483,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ // Parses a Rust `mod m { ... }` containing zero or more items.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556488,"byte_end":556555,"line_start":717,"line_end":717,"column_start":5,"column_end":72}},{"value":"/ struct Mod {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556560,"byte_end":556576,"line_start":718,"line_end":718,"column_start":5,"column_end":21}},{"value":"/     mod_token: Token![mod],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556581,"byte_end":556612,"line_start":719,"line_end":719,"column_start":5,"column_end":36}},{"value":"/     name: Ident,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556617,"byte_end":556637,"line_start":720,"line_end":720,"column_start":5,"column_end":25}},{"value":"/     brace_token: token::Brace,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556642,"byte_end":556676,"line_start":721,"line_end":721,"column_start":5,"column_end":39}},{"value":"/     items: Vec<Item>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556681,"byte_end":556706,"line_start":722,"line_end":722,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556711,"byte_end":556716,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556721,"byte_end":556724,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ impl Parse for Mod {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556729,"byte_end":556753,"line_start":725,"line_end":725,"column_start":5,"column_end":29}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556758,"byte_end":556812,"line_start":726,"line_end":726,"column_start":5,"column_end":59}},{"value":"/         let content;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556817,"byte_end":556841,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/         Ok(Mod {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556846,"byte_end":556866,"line_start":728,"line_end":728,"column_start":5,"column_end":25}},{"value":"/             mod_token: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556871,"byte_end":556913,"line_start":729,"line_end":729,"column_start":5,"column_end":47}},{"value":"/             name: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556918,"byte_end":556955,"line_start":730,"line_end":730,"column_start":5,"column_end":42}},{"value":"/             brace_token: braced!(content in input),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":556960,"byte_end":557015,"line_start":731,"line_end":731,"column_start":5,"column_end":60}},{"value":"/             items: {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557020,"byte_end":557044,"line_start":732,"line_end":732,"column_start":5,"column_end":29}},{"value":"/                 let mut items = Vec::new();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557049,"byte_end":557096,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/                 while !content.is_empty() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557101,"byte_end":557148,"line_start":734,"line_end":734,"column_start":5,"column_end":52}},{"value":"/                     items.push(content.parse()?);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557153,"byte_end":557206,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557211,"byte_end":557232,"line_start":736,"line_end":736,"column_start":5,"column_end":26}},{"value":"/                 items","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557237,"byte_end":557262,"line_start":737,"line_end":737,"column_start":5,"column_end":30}},{"value":"/             },","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557267,"byte_end":557285,"line_start":738,"line_end":738,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557290,"byte_end":557304,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557309,"byte_end":557318,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557323,"byte_end":557328,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557333,"byte_end":557340,"line_start":742,"line_end":742,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558963,"byte_end":558973,"line_start":788,"line_end":788,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<ParseBuffer>::lookahead1","value":"fn lookahead1(&Self) -> Lookahead1","parent":null,"children":[],"decl_id":null,"docs":" Constructs a helper for peeking at the next token in this stream and\n building an error message if it is not one of a set of expected tokens.","sig":null,"attributes":[{"value":"/ Constructs a helper for peeking at the next token in this stream and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557417,"byte_end":557489,"line_start":747,"line_end":747,"column_start":5,"column_end":77}},{"value":"/ building an error message if it is not one of a set of expected tokens.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557494,"byte_end":557569,"line_start":748,"line_end":748,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557574,"byte_end":557577,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557582,"byte_end":557595,"line_start":750,"line_end":750,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557600,"byte_end":557603,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557608,"byte_end":557615,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use syn::{ConstParam, Ident, Lifetime, LifetimeDef, Result, Token, TypeParam};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557620,"byte_end":557702,"line_start":753,"line_end":753,"column_start":5,"column_end":87}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557707,"byte_end":557748,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557753,"byte_end":557756,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ // A generic parameter, a single one of the comma-separated elements inside","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557761,"byte_end":557840,"line_start":756,"line_end":756,"column_start":5,"column_end":84}},{"value":"/ // angle brackets in:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557845,"byte_end":557870,"line_start":757,"line_end":757,"column_start":5,"column_end":30}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557875,"byte_end":557881,"line_start":758,"line_end":758,"column_start":5,"column_end":11}},{"value":"/ //     fn f<T: Clone, 'a, 'b: 'a, const N: usize>() { ... }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557886,"byte_end":557949,"line_start":759,"line_end":759,"column_start":5,"column_end":68}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557954,"byte_end":557960,"line_start":760,"line_end":760,"column_start":5,"column_end":11}},{"value":"/ // On invalid input, lookahead gives us a reasonable error message.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":557965,"byte_end":558036,"line_start":761,"line_end":761,"column_start":5,"column_end":76}},{"value":"/ //","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558041,"byte_end":558047,"line_start":762,"line_end":762,"column_start":5,"column_end":11}},{"value":"/ //     error: expected one of: identifier, lifetime, `const`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558052,"byte_end":558116,"line_start":763,"line_end":763,"column_start":5,"column_end":69}},{"value":"/ //       |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558121,"byte_end":558135,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/ //     5 |     fn f<!Sized>() {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558140,"byte_end":558176,"line_start":765,"line_end":765,"column_start":5,"column_end":41}},{"value":"/ //       |          ^","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558181,"byte_end":558206,"line_start":766,"line_end":766,"column_start":5,"column_end":30}},{"value":"/ enum GenericParam {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558211,"byte_end":558234,"line_start":767,"line_end":767,"column_start":5,"column_end":28}},{"value":"/     Type(TypeParam),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558239,"byte_end":558263,"line_start":768,"line_end":768,"column_start":5,"column_end":29}},{"value":"/     Lifetime(LifetimeDef),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558268,"byte_end":558298,"line_start":769,"line_end":769,"column_start":5,"column_end":35}},{"value":"/     Const(ConstParam),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558303,"byte_end":558329,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558334,"byte_end":558339,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558344,"byte_end":558347,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ impl Parse for GenericParam {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558352,"byte_end":558385,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558390,"byte_end":558444,"line_start":774,"line_end":774,"column_start":5,"column_end":59}},{"value":"/         let lookahead = input.lookahead1();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558449,"byte_end":558496,"line_start":775,"line_end":775,"column_start":5,"column_end":52}},{"value":"/         if lookahead.peek(Ident) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558501,"byte_end":558539,"line_start":776,"line_end":776,"column_start":5,"column_end":43}},{"value":"/             input.parse().map(GenericParam::Type)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558544,"byte_end":558597,"line_start":777,"line_end":777,"column_start":5,"column_end":58}},{"value":"/         } else if lookahead.peek(Lifetime) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558602,"byte_end":558650,"line_start":778,"line_end":778,"column_start":5,"column_end":53}},{"value":"/             input.parse().map(GenericParam::Lifetime)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558655,"byte_end":558712,"line_start":779,"line_end":779,"column_start":5,"column_end":62}},{"value":"/         } else if lookahead.peek(Token![const]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558717,"byte_end":558770,"line_start":780,"line_end":780,"column_start":5,"column_end":58}},{"value":"/             input.parse().map(GenericParam::Const)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558775,"byte_end":558829,"line_start":781,"line_end":781,"column_start":5,"column_end":59}},{"value":"/         } else {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558834,"byte_end":558854,"line_start":782,"line_end":782,"column_start":5,"column_end":25}},{"value":"/             Err(lookahead.error())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558859,"byte_end":558897,"line_start":783,"line_end":783,"column_start":5,"column_end":43}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558902,"byte_end":558915,"line_start":784,"line_end":784,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558920,"byte_end":558929,"line_start":785,"line_end":785,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558934,"byte_end":558939,"line_start":786,"line_end":786,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":558944,"byte_end":558951,"line_start":787,"line_end":787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563798,"byte_end":563802,"line_start":918,"line_end":918,"column_start":12,"column_end":16},"name":"fork","qualname":"<ParseBuffer>::fork","value":"fn fork(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Forks a parse stream so that parsing tokens out of either the original\n or the fork does not advance the position of the other.","sig":null,"attributes":[{"value":"/ Forks a parse stream so that parsing tokens out of either the original","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559062,"byte_end":559136,"line_start":792,"line_end":792,"column_start":5,"column_end":79}},{"value":"/ or the fork does not advance the position of the other.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559141,"byte_end":559200,"line_start":793,"line_end":793,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559205,"byte_end":559208,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Performance","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559213,"byte_end":559230,"line_start":795,"line_end":795,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559235,"byte_end":559238,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ Forking a parse stream is a cheap fixed amount of work and does not","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559243,"byte_end":559314,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ involve copying token buffers. Where you might hit performance problems","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559319,"byte_end":559394,"line_start":798,"line_end":798,"column_start":5,"column_end":80}},{"value":"/ is if your macro ends up parsing a large amount of content more than","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559399,"byte_end":559471,"line_start":799,"line_end":799,"column_start":5,"column_end":77}},{"value":"/ once.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559476,"byte_end":559485,"line_start":800,"line_end":800,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559490,"byte_end":559493,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559498,"byte_end":559505,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use syn::{Expr, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559510,"byte_end":559540,"line_start":803,"line_end":803,"column_start":5,"column_end":35}},{"value":"/ # use syn::parse::ParseStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559545,"byte_end":559579,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559584,"byte_end":559589,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ # fn bad(input: ParseStream) -> Result<Expr> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559594,"byte_end":559644,"line_start":806,"line_end":806,"column_start":5,"column_end":55}},{"value":"/ // Do not do this.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559649,"byte_end":559671,"line_start":807,"line_end":807,"column_start":5,"column_end":27}},{"value":"/ if input.fork().parse::<Expr>().is_ok() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559676,"byte_end":559721,"line_start":808,"line_end":808,"column_start":5,"column_end":50}},{"value":"/     return input.parse::<Expr>();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559726,"byte_end":559763,"line_start":809,"line_end":809,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559768,"byte_end":559773,"line_start":810,"line_end":810,"column_start":5,"column_end":10}},{"value":"/ # unimplemented!()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559778,"byte_end":559800,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559805,"byte_end":559812,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559817,"byte_end":559824,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559829,"byte_end":559832,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ As a rule, avoid parsing an unbounded amount of tokens out of a forked","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559837,"byte_end":559911,"line_start":815,"line_end":815,"column_start":5,"column_end":79}},{"value":"/ parse stream. Only use a fork when the amount of work performed against","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559916,"byte_end":559991,"line_start":816,"line_end":816,"column_start":5,"column_end":80}},{"value":"/ the fork is small and bounded.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":559996,"byte_end":560030,"line_start":817,"line_end":817,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560035,"byte_end":560038,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ When complex speculative parsing against the forked stream is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560043,"byte_end":560108,"line_start":819,"line_end":819,"column_start":5,"column_end":70}},{"value":"/ unavoidable, use [`parse::discouraged::Speculative`] to advance the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560113,"byte_end":560184,"line_start":820,"line_end":820,"column_start":5,"column_end":76}},{"value":"/ original stream once the fork's parse is determined to have been","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560189,"byte_end":560257,"line_start":821,"line_end":821,"column_start":5,"column_end":73}},{"value":"/ successful.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560262,"byte_end":560277,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560282,"byte_end":560285,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ For a lower level way to perform speculative parsing at the token level,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560290,"byte_end":560366,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/ consider using [`ParseStream::step`] instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560371,"byte_end":560420,"line_start":825,"line_end":825,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560425,"byte_end":560428,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`parse::discouraged::Speculative`]: discouraged::Speculative","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560433,"byte_end":560498,"line_start":827,"line_end":827,"column_start":5,"column_end":70}},{"value":"/ [`ParseStream::step`]: ParseBuffer::step","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560503,"byte_end":560547,"line_start":828,"line_end":828,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560552,"byte_end":560555,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560560,"byte_end":560573,"line_start":830,"line_end":830,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560578,"byte_end":560581,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ The parse implementation shown here parses possibly restricted `pub`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560586,"byte_end":560658,"line_start":832,"line_end":832,"column_start":5,"column_end":77}},{"value":"/ visibilities.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560663,"byte_end":560680,"line_start":833,"line_end":833,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560685,"byte_end":560688,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ - `pub`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560693,"byte_end":560704,"line_start":835,"line_end":835,"column_start":5,"column_end":16}},{"value":"/ - `pub(crate)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560709,"byte_end":560727,"line_start":836,"line_end":836,"column_start":5,"column_end":23}},{"value":"/ - `pub(self)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560732,"byte_end":560749,"line_start":837,"line_end":837,"column_start":5,"column_end":22}},{"value":"/ - `pub(super)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560754,"byte_end":560772,"line_start":838,"line_end":838,"column_start":5,"column_end":23}},{"value":"/ - `pub(in some::path)`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560777,"byte_end":560803,"line_start":839,"line_end":839,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560808,"byte_end":560811,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ To handle the case of visibilities inside of tuple structs, the parser","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560816,"byte_end":560890,"line_start":841,"line_end":841,"column_start":5,"column_end":79}},{"value":"/ needs to distinguish parentheses that specify visibility restrictions","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560895,"byte_end":560968,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ from parentheses that form part of a tuple type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":560973,"byte_end":561025,"line_start":843,"line_end":843,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561030,"byte_end":561033,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561038,"byte_end":561045,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ # struct A;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561050,"byte_end":561065,"line_start":846,"line_end":846,"column_start":5,"column_end":20}},{"value":"/ # struct B;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561070,"byte_end":561085,"line_start":847,"line_end":847,"column_start":5,"column_end":20}},{"value":"/ # struct C;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561090,"byte_end":561105,"line_start":848,"line_end":848,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561110,"byte_end":561115,"line_start":849,"line_end":849,"column_start":5,"column_end":10}},{"value":"/ struct S(pub(crate) A, pub (B, C));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561120,"byte_end":561159,"line_start":850,"line_end":850,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561164,"byte_end":561171,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561176,"byte_end":561179,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ In this example input the first tuple struct element of `S` has","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561184,"byte_end":561251,"line_start":853,"line_end":853,"column_start":5,"column_end":72}},{"value":"/ `pub(crate)` visibility while the second tuple struct element has `pub`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561256,"byte_end":561331,"line_start":854,"line_end":854,"column_start":5,"column_end":80}},{"value":"/ visibility; the parentheses around `(B, C)` are part of the type rather","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561336,"byte_end":561411,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ than part of a visibility restriction.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561416,"byte_end":561458,"line_start":856,"line_end":856,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561463,"byte_end":561466,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ The parser uses a forked parse stream to check the first token inside of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561471,"byte_end":561547,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/ parentheses after the `pub` keyword. This is a small bounded amount of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561552,"byte_end":561626,"line_start":859,"line_end":859,"column_start":5,"column_end":79}},{"value":"/ work performed against the forked parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561631,"byte_end":561682,"line_start":860,"line_end":860,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561687,"byte_end":561690,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561695,"byte_end":561702,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ use syn::{parenthesized, token, Ident, Path, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561707,"byte_end":561771,"line_start":863,"line_end":863,"column_start":5,"column_end":69}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561776,"byte_end":561803,"line_start":864,"line_end":864,"column_start":5,"column_end":32}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561808,"byte_end":561849,"line_start":865,"line_end":865,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561854,"byte_end":561857,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ struct PubVisibility {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561862,"byte_end":561888,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     pub_token: Token![pub],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561893,"byte_end":561924,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/     restricted: Option<Restricted>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561929,"byte_end":561968,"line_start":869,"line_end":869,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561973,"byte_end":561978,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561983,"byte_end":561986,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ struct Restricted {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":561991,"byte_end":562014,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/     paren_token: token::Paren,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562019,"byte_end":562053,"line_start":873,"line_end":873,"column_start":5,"column_end":39}},{"value":"/     in_token: Option<Token![in]>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562058,"byte_end":562095,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/     path: Path,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562100,"byte_end":562119,"line_start":875,"line_end":875,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562124,"byte_end":562129,"line_start":876,"line_end":876,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562134,"byte_end":562137,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ impl Parse for PubVisibility {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562142,"byte_end":562176,"line_start":878,"line_end":878,"column_start":5,"column_end":39}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562181,"byte_end":562235,"line_start":879,"line_end":879,"column_start":5,"column_end":59}},{"value":"/         let pub_token: Token![pub] = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562240,"byte_end":562296,"line_start":880,"line_end":880,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562301,"byte_end":562304,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/         if input.peek(token::Paren) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562309,"byte_end":562350,"line_start":882,"line_end":882,"column_start":5,"column_end":46}},{"value":"/             let ahead = input.fork();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562355,"byte_end":562396,"line_start":883,"line_end":883,"column_start":5,"column_end":46}},{"value":"/             let mut content;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562401,"byte_end":562433,"line_start":884,"line_end":884,"column_start":5,"column_end":37}},{"value":"/             parenthesized!(content in ahead);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562438,"byte_end":562487,"line_start":885,"line_end":885,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562492,"byte_end":562495,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/             if content.peek(Token![crate])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562500,"byte_end":562546,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/                 || content.peek(Token![self])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562551,"byte_end":562600,"line_start":888,"line_end":888,"column_start":5,"column_end":54}},{"value":"/                 || content.peek(Token![super])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562605,"byte_end":562655,"line_start":889,"line_end":889,"column_start":5,"column_end":55}},{"value":"/             {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562660,"byte_end":562677,"line_start":890,"line_end":890,"column_start":5,"column_end":22}},{"value":"/                 return Ok(PubVisibility {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562682,"byte_end":562727,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/                     pub_token,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562732,"byte_end":562766,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/                     restricted: Some(Restricted {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562771,"byte_end":562824,"line_start":893,"line_end":893,"column_start":5,"column_end":58}},{"value":"/                         paren_token: parenthesized!(content in input),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562829,"byte_end":562903,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/                         in_token: None,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562908,"byte_end":562951,"line_start":895,"line_end":895,"column_start":5,"column_end":48}},{"value":"/                         path: Path::from(content.call(Ident::parse_any)?),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":562956,"byte_end":563034,"line_start":896,"line_end":896,"column_start":5,"column_end":83}},{"value":"/                     }),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563039,"byte_end":563066,"line_start":897,"line_end":897,"column_start":5,"column_end":32}},{"value":"/                 });","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563071,"byte_end":563094,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/             } else if content.peek(Token![in]) {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563099,"byte_end":563151,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/                 return Ok(PubVisibility {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563156,"byte_end":563201,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/                     pub_token,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563206,"byte_end":563240,"line_start":901,"line_end":901,"column_start":5,"column_end":39}},{"value":"/                     restricted: Some(Restricted {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563245,"byte_end":563298,"line_start":902,"line_end":902,"column_start":5,"column_end":58}},{"value":"/                         paren_token: parenthesized!(content in input),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563303,"byte_end":563377,"line_start":903,"line_end":903,"column_start":5,"column_end":79}},{"value":"/                         in_token: Some(content.parse()?),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563382,"byte_end":563443,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/                         path: content.call(Path::parse_mod_style)?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563448,"byte_end":563519,"line_start":905,"line_end":905,"column_start":5,"column_end":76}},{"value":"/                     }),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563524,"byte_end":563551,"line_start":906,"line_end":906,"column_start":5,"column_end":32}},{"value":"/                 });","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563556,"byte_end":563579,"line_start":907,"line_end":907,"column_start":5,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563584,"byte_end":563601,"line_start":908,"line_end":908,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563606,"byte_end":563619,"line_start":909,"line_end":909,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563624,"byte_end":563627,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/         Ok(PubVisibility {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563632,"byte_end":563662,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/             pub_token,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563667,"byte_end":563693,"line_start":912,"line_end":912,"column_start":5,"column_end":31}},{"value":"/             restricted: None,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563698,"byte_end":563731,"line_start":913,"line_end":913,"column_start":5,"column_end":38}},{"value":"/         })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563736,"byte_end":563750,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563755,"byte_end":563764,"line_start":915,"line_end":915,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563769,"byte_end":563774,"line_start":916,"line_end":916,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":563779,"byte_end":563786,"line_start":917,"line_end":917,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565009,"byte_end":565014,"line_start":957,"line_end":957,"column_start":12,"column_end":17},"name":"error","qualname":"<ParseBuffer>::error","value":"fn error<T>(&Self, T) -> Error where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.","sig":null,"attributes":[{"value":"/ Triggers an error at the current position of the parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564177,"byte_end":564243,"line_start":929,"line_end":929,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564248,"byte_end":564251,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564256,"byte_end":564269,"line_start":931,"line_end":931,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564274,"byte_end":564277,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564282,"byte_end":564289,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use syn::{Expr, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564294,"byte_end":564329,"line_start":934,"line_end":934,"column_start":5,"column_end":40}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564334,"byte_end":564375,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564380,"byte_end":564383,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ // Some kind of loop: `while` or `for` or `loop`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564388,"byte_end":564441,"line_start":937,"line_end":937,"column_start":5,"column_end":58}},{"value":"/ struct Loop {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564446,"byte_end":564463,"line_start":938,"line_end":938,"column_start":5,"column_end":22}},{"value":"/     expr: Expr,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564468,"byte_end":564487,"line_start":939,"line_end":939,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564492,"byte_end":564497,"line_start":940,"line_end":940,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564502,"byte_end":564505,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ impl Parse for Loop {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564510,"byte_end":564535,"line_start":942,"line_end":942,"column_start":5,"column_end":30}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564540,"byte_end":564594,"line_start":943,"line_end":943,"column_start":5,"column_end":59}},{"value":"/         if input.peek(Token![while])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564599,"byte_end":564639,"line_start":944,"line_end":944,"column_start":5,"column_end":45}},{"value":"/             || input.peek(Token![for])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564644,"byte_end":564686,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/             || input.peek(Token![loop])","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564691,"byte_end":564734,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/         {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564739,"byte_end":564752,"line_start":947,"line_end":947,"column_start":5,"column_end":18}},{"value":"/             Ok(Loop {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564757,"byte_end":564782,"line_start":948,"line_end":948,"column_start":5,"column_end":30}},{"value":"/                 expr: input.parse()?,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564787,"byte_end":564828,"line_start":949,"line_end":949,"column_start":5,"column_end":46}},{"value":"/             })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564833,"byte_end":564851,"line_start":950,"line_end":950,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564856,"byte_end":564876,"line_start":951,"line_end":951,"column_start":5,"column_end":25}},{"value":"/             Err(input.error(\"expected some kind of loop\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564881,"byte_end":564943,"line_start":952,"line_end":952,"column_start":5,"column_end":67}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564948,"byte_end":564961,"line_start":953,"line_end":953,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564966,"byte_end":564975,"line_start":954,"line_end":954,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564980,"byte_end":564985,"line_start":955,"line_end":955,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":564990,"byte_end":564997,"line_start":956,"line_end":956,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566852,"byte_end":566856,"line_start":1006,"line_end":1006,"column_start":12,"column_end":16},"name":"step","qualname":"<ParseBuffer>::step","value":"fn step<F, R>(&Self, F) -> Result<R> where F: for<'c> FnOnce(StepCursor) ->\nResult<(R, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" Speculatively parses tokens from this parse stream, advancing the\n position of this stream only if parsing succeeds.","sig":null,"attributes":[{"value":"/ Speculatively parses tokens from this parse stream, advancing the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565126,"byte_end":565195,"line_start":961,"line_end":961,"column_start":5,"column_end":74}},{"value":"/ position of this stream only if parsing succeeds.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565200,"byte_end":565253,"line_start":962,"line_end":962,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565258,"byte_end":565261,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ This is a powerful low-level API used for defining the `Parse` impls of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565266,"byte_end":565341,"line_start":964,"line_end":964,"column_start":5,"column_end":80}},{"value":"/ the basic built-in token types. It is not something that will be used","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565346,"byte_end":565419,"line_start":965,"line_end":965,"column_start":5,"column_end":78}},{"value":"/ widely outside of the Syn codebase.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565424,"byte_end":565463,"line_start":966,"line_end":966,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565468,"byte_end":565471,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565476,"byte_end":565489,"line_start":968,"line_end":968,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565494,"byte_end":565497,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565502,"byte_end":565509,"line_start":970,"line_end":970,"column_start":5,"column_end":12}},{"value":"/ use proc_macro2::TokenTree;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565514,"byte_end":565545,"line_start":971,"line_end":971,"column_start":5,"column_end":36}},{"value":"/ use syn::Result;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565550,"byte_end":565570,"line_start":972,"line_end":972,"column_start":5,"column_end":25}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565575,"byte_end":565607,"line_start":973,"line_end":973,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565612,"byte_end":565615,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ // This function advances the stream past the next occurrence of `@`. If","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565620,"byte_end":565696,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/ // no `@` is present in the stream, the stream position is unchanged and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565701,"byte_end":565777,"line_start":976,"line_end":976,"column_start":5,"column_end":81}},{"value":"/ // an error is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565782,"byte_end":565810,"line_start":977,"line_end":977,"column_start":5,"column_end":33}},{"value":"/ fn skip_past_next_at(input: ParseStream) -> Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565815,"byte_end":565875,"line_start":978,"line_end":978,"column_start":5,"column_end":65}},{"value":"/     input.step(|cursor| {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565880,"byte_end":565909,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/         let mut rest = *cursor;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565914,"byte_end":565949,"line_start":980,"line_end":980,"column_start":5,"column_end":40}},{"value":"/         while let Some((tt, next)) = rest.token_tree() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":565954,"byte_end":566014,"line_start":981,"line_end":981,"column_start":5,"column_end":65}},{"value":"/             match &tt {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566019,"byte_end":566046,"line_start":982,"line_end":982,"column_start":5,"column_end":32}},{"value":"/                 TokenTree::Punct(punct) if punct.as_char() == '@' => {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566051,"byte_end":566125,"line_start":983,"line_end":983,"column_start":5,"column_end":79}},{"value":"/                     return Ok(((), next));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566130,"byte_end":566176,"line_start":984,"line_end":984,"column_start":5,"column_end":51}},{"value":"/                 }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566181,"byte_end":566202,"line_start":985,"line_end":985,"column_start":5,"column_end":26}},{"value":"/                 _ => rest = next,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566207,"byte_end":566244,"line_start":986,"line_end":986,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566249,"byte_end":566266,"line_start":987,"line_end":987,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566271,"byte_end":566284,"line_start":988,"line_end":988,"column_start":5,"column_end":18}},{"value":"/         Err(cursor.error(\"no `@` was found after this point\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566289,"byte_end":566355,"line_start":989,"line_end":989,"column_start":5,"column_end":71}},{"value":"/     })","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566360,"byte_end":566370,"line_start":990,"line_end":990,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566375,"byte_end":566380,"line_start":991,"line_end":991,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566385,"byte_end":566390,"line_start":992,"line_end":992,"column_start":5,"column_end":10}},{"value":"/ # fn remainder_after_skipping_past_next_at(","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566395,"byte_end":566442,"line_start":993,"line_end":993,"column_start":5,"column_end":52}},{"value":"/ #     input: ParseStream,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566447,"byte_end":566476,"line_start":994,"line_end":994,"column_start":5,"column_end":34}},{"value":"/ # ) -> Result<proc_macro2::TokenStream> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566481,"byte_end":566526,"line_start":995,"line_end":995,"column_start":5,"column_end":50}},{"value":"/ #     skip_past_next_at(input)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566531,"byte_end":566567,"line_start":996,"line_end":996,"column_start":5,"column_end":41}},{"value":"/ #     input.parse()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566572,"byte_end":566595,"line_start":997,"line_end":997,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566600,"byte_end":566607,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566612,"byte_end":566617,"line_start":999,"line_end":999,"column_start":5,"column_end":10}},{"value":"/ # use syn::parse::Parser;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566622,"byte_end":566651,"line_start":1000,"line_end":1000,"column_start":5,"column_end":34}},{"value":"/ # let remainder = remainder_after_skipping_past_next_at","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566656,"byte_end":566715,"line_start":1001,"line_end":1001,"column_start":5,"column_end":64}},{"value":"/ #     .parse_str(\"a @ b c\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566720,"byte_end":566751,"line_start":1002,"line_end":1002,"column_start":5,"column_end":36}},{"value":"/ #     .unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566756,"byte_end":566776,"line_start":1003,"line_end":1003,"column_start":5,"column_end":25}},{"value":"/ # assert_eq!(remainder.to_string(), \"b c\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566781,"byte_end":566828,"line_start":1004,"line_end":1004,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":566833,"byte_end":566840,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568516,"byte_end":568520,"line_start":1039,"line_end":1039,"column_start":12,"column_end":16},"name":"span","qualname":"<ParseBuffer>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` of the next token in the parse stream, or\n `Span::call_site()` if this parse stream has completely exhausted its\n input `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Returns the `Span` of the next token in the parse stream, or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568333,"byte_end":568397,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ `Span::call_site()` if this parse stream has completely exhausted its","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568402,"byte_end":568475,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ input `TokenStream`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568480,"byte_end":568504,"line_start":1038,"line_end":1038,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568960,"byte_end":568966,"line_start":1053,"line_end":1053,"column_start":12,"column_end":18},"name":"cursor","qualname":"<ParseBuffer>::cursor","value":"fn cursor(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Provides low-level access to the token representation underlying this\n parse stream.","sig":null,"attributes":[{"value":"/ Provides low-level access to the token representation underlying this","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568715,"byte_end":568788,"line_start":1048,"line_end":1048,"column_start":5,"column_end":78}},{"value":"/ parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568793,"byte_end":568810,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568815,"byte_end":568818,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ Cursors are immutable so no operations you perform against the cursor","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568823,"byte_end":568896,"line_start":1051,"line_end":1051,"column_start":5,"column_end":78}},{"value":"/ will affect the state of this parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":568901,"byte_end":568948,"line_start":1052,"line_end":1052,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569318,"byte_end":569323,"line_start":1067,"line_end":1067,"column_start":8,"column_end":13},"name":"parse","qualname":"<Box<T> as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569511,"byte_end":569516,"line_start":1074,"line_end":1074,"column_start":8,"column_end":13},"name":"parse","qualname":"<Option<T> as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569774,"byte_end":569779,"line_start":1085,"line_end":1085,"column_start":8,"column_end":13},"name":"parse","qualname":"<TokenStream as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569987,"byte_end":569992,"line_start":1092,"line_end":1092,"column_start":8,"column_end":13},"name":"parse","qualname":"<TokenTree as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":570299,"byte_end":570304,"line_start":1102,"line_end":1102,"column_start":8,"column_end":13},"name":"parse","qualname":"<Group as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":570894,"byte_end":570899,"line_start":1118,"line_end":1118,"column_start":8,"column_end":13},"name":"parse","qualname":"<Punct as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571216,"byte_end":571221,"line_start":1128,"line_end":1128,"column_start":8,"column_end":13},"name":"parse","qualname":"<Literal as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3150},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571740,"byte_end":571746,"line_start":1143,"line_end":1143,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parse::Parser","value":"Parser: Sized","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156}],"decl_id":null,"docs":" Parser that can parse Rust tokens into a particular syntax tree node.","sig":null,"attributes":[{"value":"/ Parser that can parse Rust tokens into a particular syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571456,"byte_end":571529,"line_start":1136,"line_end":1136,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571530,"byte_end":571533,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571534,"byte_end":571607,"line_start":1138,"line_end":1138,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571608,"byte_end":571611,"line_start":1139,"line_end":1139,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571612,"byte_end":571644,"line_start":1140,"line_end":1140,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571645,"byte_end":571648,"line_start":1141,"line_end":1141,"column_start":1,"column_end":4}},{"value":"/ *This trait is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571649,"byte_end":571729,"line_start":1142,"line_end":1142,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571765,"byte_end":571771,"line_start":1144,"line_end":1144,"column_start":10,"column_end":16},"name":"Output","qualname":"::parse::Parser::Output","value":"type Output;","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572018,"byte_end":572024,"line_start":1150,"line_end":1150,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse::Parser::parse2","value":"fn parse2(Self, TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a proc-macro2 token stream into the chosen syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571778,"byte_end":571848,"line_start":1146,"line_end":1146,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571853,"byte_end":571856,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571861,"byte_end":571934,"line_start":1148,"line_end":1148,"column_start":5,"column_end":78}},{"value":"/ any unparsed tokens at the end of the stream, an error is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571939,"byte_end":572010,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572588,"byte_end":572593,"line_start":1163,"line_end":1163,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse::Parser::parse","value":"fn parse(Self, proc_macro::TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse tokens of source code into the chosen syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572082,"byte_end":572147,"line_start":1152,"line_end":1152,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572152,"byte_end":572155,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572160,"byte_end":572233,"line_start":1154,"line_end":1154,"column_start":5,"column_end":78}},{"value":"/ any unparsed tokens at the end of the stream, an error is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572238,"byte_end":572309,"line_start":1155,"line_end":1155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572314,"byte_end":572317,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ *This method is available only if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572322,"byte_end":572402,"line_start":1157,"line_end":1157,"column_start":5,"column_end":85}},{"value":"/ `\"proc-macro\"` features.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572407,"byte_end":572436,"line_start":1158,"line_end":1158,"column_start":5,"column_end":34}},{"value":"cfg(all(not(all(target_arch = \"wasm32\",\nany(target_os = \"unknown\", target_os = \"wasi\"))), feature = \"proc-macro\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572441,"byte_end":572580,"line_start":1159,"line_end":1162,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573102,"byte_end":573111,"line_start":1176,"line_end":1176,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse::Parser::parse_str","value":"fn parse_str(Self, &str) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a string of Rust code into the chosen syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572730,"byte_end":572795,"line_start":1167,"line_end":1167,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572800,"byte_end":572803,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572808,"byte_end":572881,"line_start":1169,"line_end":1169,"column_start":5,"column_end":78}},{"value":"/ any unparsed tokens at the end of the string, an error is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572886,"byte_end":572957,"line_start":1170,"line_end":1170,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572962,"byte_end":572965,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ # Hygiene","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572970,"byte_end":572983,"line_start":1172,"line_end":1172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572988,"byte_end":572991,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ Every span in the resulting syntax tree will be set to resolve at the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":572996,"byte_end":573069,"line_start":1174,"line_end":1174,"column_start":5,"column_end":78}},{"value":"/ macro call site.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573074,"byte_end":573094,"line_start":1175,"line_end":1175,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573323,"byte_end":573337,"line_start":1183,"line_end":1183,"column_start":8,"column_end":22},"name":"__parse_scoped","qualname":"::parse::Parser::__parse_scoped","value":"fn __parse_scoped(Self, Span, TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573266,"byte_end":573315,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573565,"byte_end":573579,"line_start":1191,"line_end":1191,"column_start":8,"column_end":22},"name":"__parse_stream","qualname":"::parse::Parser::__parse_stream","value":"fn __parse_stream(Self, ParseStream) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573508,"byte_end":573557,"line_start":1190,"line_end":1190,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":574047,"byte_end":574053,"line_start":1209,"line_end":1209,"column_start":8,"column_end":14},"name":"parse2","qualname":"<F as parse::Parser>::parse2","value":"fn parse2(Self, TokenStream) -> Result<T>","parent":{"krate":0,"index":3150},"children":[],"decl_id":{"krate":0,"index":3152},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":574532,"byte_end":574546,"line_start":1222,"line_end":1222,"column_start":8,"column_end":22},"name":"__parse_scoped","qualname":"<F as parse::Parser>::__parse_scoped","value":"fn __parse_scoped(Self, Span, TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":{"krate":0,"index":3155},"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":574475,"byte_end":574524,"line_start":1221,"line_end":1221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575161,"byte_end":575175,"line_start":1237,"line_end":1237,"column_start":8,"column_end":22},"name":"__parse_stream","qualname":"<F as parse::Parser>::__parse_stream","value":"fn __parse_stream(Self, ParseStream) -> Result<Self::Output>","parent":{"krate":0,"index":3150},"children":[],"decl_id":{"krate":0,"index":3156},"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575104,"byte_end":575153,"line_start":1236,"line_end":1236,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576345,"byte_end":576352,"line_start":1282,"line_end":1282,"column_start":12,"column_end":19},"name":"Nothing","qualname":"::parse::Nothing","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty syntax tree node that consumes no tokens when parsed.","sig":null,"attributes":[{"value":"/ An empty syntax tree node that consumes no tokens when parsed.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575615,"byte_end":575681,"line_start":1252,"line_end":1252,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575682,"byte_end":575685,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ This is useful for attribute macros that want to ensure they are not","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575686,"byte_end":575758,"line_start":1254,"line_end":1254,"column_start":1,"column_end":73}},{"value":"/ provided any attribute args.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575759,"byte_end":575791,"line_start":1255,"line_end":1255,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575792,"byte_end":575795,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575796,"byte_end":575803,"line_start":1257,"line_end":1257,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575804,"byte_end":575834,"line_start":1258,"line_end":1258,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575835,"byte_end":575840,"line_start":1259,"line_end":1259,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575841,"byte_end":575873,"line_start":1260,"line_end":1260,"column_start":1,"column_end":33}},{"value":"/ use syn::parse_macro_input;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575874,"byte_end":575905,"line_start":1261,"line_end":1261,"column_start":1,"column_end":32}},{"value":"/ use syn::parse::Nothing;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575906,"byte_end":575934,"line_start":1262,"line_end":1262,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575935,"byte_end":575938,"line_start":1263,"line_end":1263,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575939,"byte_end":575978,"line_start":1264,"line_end":1264,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_attribute]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":575979,"byte_end":576006,"line_start":1265,"line_end":1265,"column_start":1,"column_end":28}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576007,"byte_end":576015,"line_start":1266,"line_end":1266,"column_start":1,"column_end":9}},{"value":"/ pub fn my_attr(args: TokenStream, input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576016,"byte_end":576090,"line_start":1267,"line_end":1267,"column_start":1,"column_end":75}},{"value":"/     parse_macro_input!(args as Nothing);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576091,"byte_end":576135,"line_start":1268,"line_end":1268,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576136,"byte_end":576139,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576140,"byte_end":576157,"line_start":1270,"line_end":1270,"column_start":1,"column_end":18}},{"value":"/ #   \"\".parse().unwrap()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576158,"byte_end":576185,"line_start":1271,"line_end":1271,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576186,"byte_end":576191,"line_start":1272,"line_end":1272,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576192,"byte_end":576199,"line_start":1273,"line_end":1273,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576200,"byte_end":576203,"line_start":1274,"line_end":1274,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576204,"byte_end":576215,"line_start":1275,"line_end":1275,"column_start":1,"column_end":12}},{"value":"/ error: unexpected token","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576216,"byte_end":576243,"line_start":1276,"line_end":1276,"column_start":1,"column_end":28}},{"value":"/  --> src/main.rs:3:19","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576244,"byte_end":576269,"line_start":1277,"line_end":1277,"column_start":1,"column_end":26}},{"value":"/   |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576270,"byte_end":576277,"line_start":1278,"line_end":1278,"column_start":1,"column_end":8}},{"value":"/ 3 | #[my_attr(asdf)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576278,"byte_end":576302,"line_start":1279,"line_end":1279,"column_start":1,"column_end":25}},{"value":"/   |           ^^^^","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576303,"byte_end":576325,"line_start":1280,"line_end":1280,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576326,"byte_end":576333,"line_start":1281,"line_end":1281,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576387,"byte_end":576392,"line_start":1285,"line_end":1285,"column_start":8,"column_end":13},"name":"parse","qualname":"<Nothing as parse::Parse>::parse","value":"fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":3036},"children":[],"decl_id":{"krate":0,"index":3037},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587089,"byte_end":587095,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a Syn parser.\n","sig":null,"attributes":[{"value":"/ The result of a Syn parser.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587048,"byte_end":587079,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589336,"byte_end":589341,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":3276}],"decl_id":null,"docs":" Error returned when a Syn parser cannot parse the input tokens.","sig":null,"attributes":[{"value":"/ Error returned when a Syn parser cannot parse the input tokens.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587133,"byte_end":587200,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587201,"byte_end":587204,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Error reporting in proc macros","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587205,"byte_end":587241,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587242,"byte_end":587245,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The correct way to report errors back to the compiler from a procedural","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587246,"byte_end":587321,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ macro is by emitting an appropriately spanned invocation of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587322,"byte_end":587385,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`compile_error!`] in the generated code. This produces a better diagnostic","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587386,"byte_end":587465,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ message than simply panicking the macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587466,"byte_end":587510,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587511,"byte_end":587514,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`compile_error!`]: std::compile_error!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587515,"byte_end":587558,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587559,"byte_end":587562,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When parsing macro input, the [`parse_macro_input!`] macro handles the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587563,"byte_end":587637,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ conversion to `compile_error!` automatically.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587638,"byte_end":587687,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587688,"byte_end":587691,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`parse_macro_input!`]: crate::parse_macro_input!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587692,"byte_end":587745,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587746,"byte_end":587749,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587750,"byte_end":587757,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587758,"byte_end":587788,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587789,"byte_end":587794,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587795,"byte_end":587827,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ use syn::{parse_macro_input, AttributeArgs, ItemFn};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587828,"byte_end":587884,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587885,"byte_end":587888,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587889,"byte_end":587928,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_attribute]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587929,"byte_end":587956,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587957,"byte_end":587965,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ pub fn my_attr(args: TokenStream, input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":587966,"byte_end":588040,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/     let args = parse_macro_input!(args as AttributeArgs);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588041,"byte_end":588102,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/     let input = parse_macro_input!(input as ItemFn);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588103,"byte_end":588159,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588160,"byte_end":588163,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588164,"byte_end":588181,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/     # TokenStream::new()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588182,"byte_end":588210,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588211,"byte_end":588216,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588217,"byte_end":588224,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588225,"byte_end":588228,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ For errors that arise later than the initial parsing stage, the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588229,"byte_end":588296,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ [`.to_compile_error()`] or [`.into_compile_error()`] methods can be used to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588297,"byte_end":588376,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ perform an explicit conversion to `compile_error!`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588377,"byte_end":588432,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588433,"byte_end":588436,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`.to_compile_error()`]: Error::to_compile_error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588437,"byte_end":588489,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/ [`.into_compile_error()`]: Error::into_compile_error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588490,"byte_end":588546,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588547,"byte_end":588550,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588551,"byte_end":588558,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588559,"byte_end":588589,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588590,"byte_end":588595,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588596,"byte_end":588630,"line_start":61,"line_end":61,"column_start":1,"column_end":35}},{"value":"/ # use syn::{parse_macro_input, DeriveInput};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588631,"byte_end":588679,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588680,"byte_end":588685,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588686,"byte_end":588725,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_derive(MyDerive)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588726,"byte_end":588760,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588761,"byte_end":588769,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ pub fn my_derive(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588770,"byte_end":588827,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588828,"byte_end":588889,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588890,"byte_end":588893,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     // fn(DeriveInput) -> syn::Result<proc_macro2::TokenStream>","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588894,"byte_end":588961,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/     expand::my_derive(input)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588962,"byte_end":588994,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/         .unwrap_or_else(syn::Error::into_compile_error)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":588995,"byte_end":589054,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/         .into()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589055,"byte_end":589074,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589075,"byte_end":589080,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589081,"byte_end":589086,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ # mod expand {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589087,"byte_end":589105,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ #     use proc_macro2::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589106,"byte_end":589145,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ #     use syn::{DeriveInput, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589146,"byte_end":589187,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589188,"byte_end":589193,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ #     pub fn my_derive(input: DeriveInput) -> Result<TokenStream> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589194,"byte_end":589265,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ #         unimplemented!()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589266,"byte_end":589296,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589297,"byte_end":589308,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589309,"byte_end":589316,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589317,"byte_end":589324,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591195,"byte_end":591198,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn new<T>(Span, T) -> Self where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Usually the [`ParseStream::error`] method will be used instead, which\n automatically uses the correct span from the current position of the\n parse stream.","sig":null,"attributes":[{"value":"/ Usually the [`ParseStream::error`] method will be used instead, which","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589931,"byte_end":590004,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ automatically uses the correct span from the current position of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590009,"byte_end":590081,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ parse stream.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590086,"byte_end":590103,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590108,"byte_end":590111,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Use `Error::new` when the error needs to be triggered on some span other","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590116,"byte_end":590192,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ than where the parse stream is currently positioned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590197,"byte_end":590253,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590258,"byte_end":590261,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`ParseStream::error`]: crate::parse::ParseBuffer::error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590266,"byte_end":590326,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590331,"byte_end":590334,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590339,"byte_end":590352,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590357,"byte_end":590360,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590365,"byte_end":590372,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use syn::{Error, Ident, LitStr, Result, Token};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590377,"byte_end":590428,"line_start":118,"line_end":118,"column_start":5,"column_end":56}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590433,"byte_end":590465,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590470,"byte_end":590473,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ // Parses input that looks like `name = \"string\"` where the key must be","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590478,"byte_end":590553,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ // the identifier `name` and the value may be any string literal.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590558,"byte_end":590627,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ // Returns the string literal.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590632,"byte_end":590666,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ fn parse_name(input: ParseStream) -> Result<LitStr> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590671,"byte_end":590728,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/     let name_token: Ident = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590733,"byte_end":590780,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/     if name_token != \"name\" {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590785,"byte_end":590818,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/         // Trigger an error not on the current position of the stream,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590823,"byte_end":590897,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/         // but on the position of the unexpected identifier.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590902,"byte_end":590966,"line_start":128,"line_end":128,"column_start":5,"column_end":69}},{"value":"/         return Err(Error::new(name_token.span(), \"expected `name`\"));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":590971,"byte_end":591044,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591049,"byte_end":591058,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"/     input.parse::<Token![=]>()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591063,"byte_end":591099,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     let s: LitStr = input.parse()?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591104,"byte_end":591143,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/     Ok(s)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591148,"byte_end":591161,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591166,"byte_end":591171,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591176,"byte_end":591183,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592335,"byte_end":592346,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"new_spanned","qualname":"<Error>::new_spanned","value":"fn new_spanned<T, U>(T, U) -> Self where T: ToTokens, U: Display","parent":null,"children":[],"decl_id":null,"docs":" Creates an error with the specified message spanning the given syntax\n tree node.","sig":null,"attributes":[{"value":"/ Creates an error with the specified message spanning the given syntax","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591608,"byte_end":591681,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591686,"byte_end":591700,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591705,"byte_end":591708,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Unlike the `Error::new` constructor, this constructor takes an argument","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591713,"byte_end":591788,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ `tokens` which is a syntax tree node. This allows the resulting `Error`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591793,"byte_end":591868,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ to attempt to span all tokens inside of `tokens`. While you would","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591873,"byte_end":591942,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ typically be able to use the `Spanned` trait with the above `Error::new`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":591947,"byte_end":592023,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ constructor, implementation limitations today mean that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592028,"byte_end":592087,"line_start":157,"line_end":157,"column_start":5,"column_end":64}},{"value":"/ `Error::new_spanned` may provide a higher-quality error message on","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592092,"byte_end":592162,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ stable Rust.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592167,"byte_end":592183,"line_start":159,"line_end":159,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592188,"byte_end":592191,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ When in doubt it's recommended to stick to `Error::new` (or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592196,"byte_end":592259,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/ `ParseStream::error`)!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592264,"byte_end":592290,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":592295,"byte_end":592323,"line_start":163,"line_end":163,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593249,"byte_end":593253,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" The source location of the error.","sig":null,"attributes":[{"value":"/ The source location of the error.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593005,"byte_end":593042,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593047,"byte_end":593050,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Spans are not thread-safe so this function returns `Span::call_site()`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593055,"byte_end":593129,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ if called from a different thread than the one on which the `Error` was","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593134,"byte_end":593209,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ originally created.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593214,"byte_end":593237,"line_start":185,"line_end":185,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593947,"byte_end":593963,"line_start":205,"line_end":205,"column_start":12,"column_end":28},"name":"to_compile_error","qualname":"<Error>::to_compile_error","value":"fn to_compile_error(&Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Render the error as an invocation of [`compile_error!`].","sig":null,"attributes":[{"value":"/ Render the error as an invocation of [`compile_error!`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593623,"byte_end":593683,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593688,"byte_end":593691,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The [`parse_macro_input!`] macro provides a convenient way to invoke","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593696,"byte_end":593768,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ this method correctly in a procedural macro.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593773,"byte_end":593821,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593826,"byte_end":593829,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`compile_error!`]: std::compile_error!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593834,"byte_end":593877,"line_start":203,"line_end":203,"column_start":5,"column_end":48}},{"value":"/ [`parse_macro_input!`]: crate::parse_macro_input!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":593882,"byte_end":593935,"line_start":204,"line_end":204,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595088,"byte_end":595106,"line_start":244,"line_end":244,"column_start":12,"column_end":30},"name":"into_compile_error","qualname":"<Error>::into_compile_error","value":"fn into_compile_error(Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Render the error as an invocation of [`compile_error!`].","sig":null,"attributes":[{"value":"/ Render the error as an invocation of [`compile_error!`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594113,"byte_end":594173,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594178,"byte_end":594181,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`compile_error!`]: std::compile_error!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594186,"byte_end":594229,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594234,"byte_end":594237,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594242,"byte_end":594255,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594260,"byte_end":594263,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594268,"byte_end":594275,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594280,"byte_end":594310,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594315,"byte_end":594320,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594325,"byte_end":594357,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ use syn::{parse_macro_input, DeriveInput, Error};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594362,"byte_end":594415,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594420,"byte_end":594423,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # const _: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594428,"byte_end":594462,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ #[proc_macro_derive(MyTrait)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594467,"byte_end":594500,"line_start":225,"line_end":225,"column_start":5,"column_end":38}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594505,"byte_end":594513,"line_start":226,"line_end":226,"column_start":5,"column_end":13}},{"value":"/ pub fn derive_my_trait(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594518,"byte_end":594581,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594586,"byte_end":594647,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/     my_trait::expand(input)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594652,"byte_end":594683,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/         .unwrap_or_else(Error::into_compile_error)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594688,"byte_end":594742,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/         .into()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594747,"byte_end":594766,"line_start":231,"line_end":231,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594771,"byte_end":594776,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594781,"byte_end":594784,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ mod my_trait {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594789,"byte_end":594807,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/     use proc_macro2::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594812,"byte_end":594849,"line_start":235,"line_end":235,"column_start":5,"column_end":42}},{"value":"/     use syn::{DeriveInput, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594854,"byte_end":594893,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594898,"byte_end":594901,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/     pub(crate) fn expand(input: DeriveInput) -> Result<TokenStream> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594906,"byte_end":594979,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/         /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":594984,"byte_end":595005,"line_start":239,"line_end":239,"column_start":5,"column_end":26}},{"value":"/         # unimplemented!()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595010,"byte_end":595040,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595045,"byte_end":595054,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595059,"byte_end":595064,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595069,"byte_end":595076,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595315,"byte_end":595322,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"combine","qualname":"<Error>::combine","value":"fn combine(&mut Self, Error)","parent":null,"children":[],"decl_id":null,"docs":" Add another error message to self such that when `to_compile_error()` is\n called, both errors will be emitted together.\n","sig":null,"attributes":[{"value":"/ Add another error message to self such that when `to_compile_error()` is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595173,"byte_end":595249,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ called, both errors will be emitted together.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595254,"byte_end":595303,"line_start":249,"line_end":249,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597292,"byte_end":597295,"line_start":313,"line_end":313,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597862,"byte_end":597865,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598016,"byte_end":598021,"line_start":341,"line_end":341,"column_start":8,"column_end":13},"name":"clone","qualname":"<Error as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598650,"byte_end":598654,"line_start":367,"line_end":367,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(LexError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598824,"byte_end":598833,"line_start":376,"line_end":376,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Error as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598958,"byte_end":598966,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::error::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":3320}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599075,"byte_end":599079,"line_start":390,"line_end":390,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599306,"byte_end":599315,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Error as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3329},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599431,"byte_end":599435,"line_start":408,"line_end":408,"column_start":12,"column_end":16},"name":"Iter","qualname":"::error::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3331}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599554,"byte_end":599558,"line_start":415,"line_end":415,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8481},"children":[],"decl_id":{"krate":2,"index":8483},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599732,"byte_end":599738,"line_start":423,"line_end":423,"column_start":8,"column_end":14},"name":"extend","qualname":"<Error as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = Error>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3346},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28659,"byte_end":28664,"line_start":868,"line_end":868,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"fn parse<T>(proc_macro::TokenStream) -> Result<T> where T: parse::Parse","parent":null,"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse tokens of source code into the chosen syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27104,"byte_end":27169,"line_start":821,"line_end":821,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27170,"byte_end":27173,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ This is preferred over parsing a string because tokens are able to preserve","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27174,"byte_end":27253,"line_start":823,"line_end":823,"column_start":1,"column_end":80}},{"value":"/ information about where in the user's code they were originally written (the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27254,"byte_end":27334,"line_start":824,"line_end":824,"column_start":1,"column_end":81}},{"value":"/ \"span\" of the token), possibly allowing the compiler to produce better error","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27335,"byte_end":27415,"line_start":825,"line_end":825,"column_start":1,"column_end":81}},{"value":"/ messages.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27416,"byte_end":27429,"line_start":826,"line_end":826,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27430,"byte_end":27433,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ This function parses a `proc_macro::TokenStream` which is the type used for","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27434,"byte_end":27513,"line_start":828,"line_end":828,"column_start":1,"column_end":80}},{"value":"/ interop with the compiler in a procedural macro. To parse a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27514,"byte_end":27577,"line_start":829,"line_end":829,"column_start":1,"column_end":64}},{"value":"/ `proc_macro2::TokenStream`, use [`syn::parse2`] instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27578,"byte_end":27638,"line_start":830,"line_end":830,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27639,"byte_end":27642,"line_start":831,"line_end":831,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse2`]: parse2","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27643,"byte_end":27670,"line_start":832,"line_end":832,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27671,"byte_end":27674,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ *This function is available only if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27675,"byte_end":27757,"line_start":834,"line_end":834,"column_start":1,"column_end":83}},{"value":"/ `\"proc-macro\"` features.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27758,"byte_end":27787,"line_start":835,"line_end":835,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27788,"byte_end":27791,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27792,"byte_end":27806,"line_start":837,"line_end":837,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27807,"byte_end":27810,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27811,"byte_end":27818,"line_start":839,"line_end":839,"column_start":1,"column_end":8}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27819,"byte_end":27849,"line_start":840,"line_end":840,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27850,"byte_end":27855,"line_start":841,"line_end":841,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27856,"byte_end":27888,"line_start":842,"line_end":842,"column_start":1,"column_end":33}},{"value":"/ use quote::quote;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27889,"byte_end":27910,"line_start":843,"line_end":843,"column_start":1,"column_end":22}},{"value":"/ use syn::DeriveInput;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27911,"byte_end":27936,"line_start":844,"line_end":844,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27937,"byte_end":27940,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27941,"byte_end":27987,"line_start":846,"line_end":846,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":27988,"byte_end":28021,"line_start":847,"line_end":847,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28022,"byte_end":28030,"line_start":848,"line_end":848,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28031,"byte_end":28087,"line_start":849,"line_end":849,"column_start":1,"column_end":57}},{"value":"/     // Parse the tokens into a syntax tree","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28088,"byte_end":28134,"line_start":850,"line_end":850,"column_start":1,"column_end":47}},{"value":"/     let ast: DeriveInput = syn::parse(input).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28135,"byte_end":28193,"line_start":851,"line_end":851,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28194,"byte_end":28197,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28198,"byte_end":28257,"line_start":853,"line_end":853,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28258,"byte_end":28289,"line_start":854,"line_end":854,"column_start":1,"column_end":32}},{"value":"/         /* ... */","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28290,"byte_end":28311,"line_start":855,"line_end":855,"column_start":1,"column_end":22}},{"value":"/     };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28312,"byte_end":28322,"line_start":856,"line_end":856,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28323,"byte_end":28326,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/     // Convert into a token stream and return it","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28327,"byte_end":28379,"line_start":858,"line_end":858,"column_start":1,"column_end":53}},{"value":"/     expanded.into()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28380,"byte_end":28403,"line_start":859,"line_end":859,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28404,"byte_end":28409,"line_start":860,"line_end":860,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28410,"byte_end":28417,"line_start":861,"line_end":861,"column_start":1,"column_end":8}},{"value":"cfg(all(not(all(target_arch = \"wasm32\",\nany(target_os = \"unknown\", target_os = \"wasi\"))), feature = \"parsing\", feature\n= \"proc-macro\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28418,"byte_end":28570,"line_start":862,"line_end":866,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3348},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29528,"byte_end":29534,"line_start":888,"line_end":888,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse2","value":"fn parse2<T>(proc_macro2::TokenStream) -> Result<T> where T: parse::Parse","parent":null,"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a proc-macro2 token stream into the chosen syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28776,"byte_end":28846,"line_start":872,"line_end":872,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28847,"byte_end":28850,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28851,"byte_end":28924,"line_start":874,"line_end":874,"column_start":1,"column_end":74}},{"value":"/ any unparsed tokens at the end of the stream, an error is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28925,"byte_end":28996,"line_start":875,"line_end":875,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":28997,"byte_end":29000,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ This function parses a `proc_macro2::TokenStream` which is commonly useful","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29001,"byte_end":29079,"line_start":877,"line_end":877,"column_start":1,"column_end":79}},{"value":"/ when the input comes from a node of the Syn syntax tree, for example the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29080,"byte_end":29156,"line_start":878,"line_end":878,"column_start":1,"column_end":77}},{"value":"/ body tokens of a [`Macro`] node. When in a procedural macro parsing the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29157,"byte_end":29232,"line_start":879,"line_end":879,"column_start":1,"column_end":76}},{"value":"/ `proc_macro::TokenStream` provided by the compiler, use [`syn::parse`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29233,"byte_end":29307,"line_start":880,"line_end":880,"column_start":1,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29308,"byte_end":29320,"line_start":881,"line_end":881,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29321,"byte_end":29324,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse`]: parse()","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29325,"byte_end":29352,"line_start":883,"line_end":883,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29353,"byte_end":29356,"line_start":884,"line_end":884,"column_start":1,"column_end":4}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29357,"byte_end":29440,"line_start":885,"line_end":885,"column_start":1,"column_end":84}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29441,"byte_end":29468,"line_start":886,"line_end":886,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":3350},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30294,"byte_end":30303,"line_start":917,"line_end":917,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse_str","value":"fn parse_str<T>(&str) -> Result<T> where T: parse::Parse","parent":null,"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a string of Rust code into the chosen syntax tree node.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29648,"byte_end":29713,"line_start":892,"line_end":892,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29714,"byte_end":29717,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ *This function is available only if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29718,"byte_end":29801,"line_start":894,"line_end":894,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29802,"byte_end":29805,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ # Hygiene","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29806,"byte_end":29819,"line_start":896,"line_end":896,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29820,"byte_end":29823,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ Every span in the resulting syntax tree will be set to resolve at the macro","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29824,"byte_end":29903,"line_start":898,"line_end":898,"column_start":1,"column_end":80}},{"value":"/ call site.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29904,"byte_end":29918,"line_start":899,"line_end":899,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29919,"byte_end":29922,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29923,"byte_end":29937,"line_start":901,"line_end":901,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29938,"byte_end":29941,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29942,"byte_end":29949,"line_start":903,"line_end":903,"column_start":1,"column_end":8}},{"value":"/ use syn::{Expr, Result};","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29950,"byte_end":29978,"line_start":904,"line_end":904,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29979,"byte_end":29982,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ fn run() -> Result<()> {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":29983,"byte_end":30011,"line_start":906,"line_end":906,"column_start":1,"column_end":29}},{"value":"/     let code = \"assert_eq!(u8::max_value(), 255)\";","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30012,"byte_end":30066,"line_start":907,"line_end":907,"column_start":1,"column_end":55}},{"value":"/     let expr = syn::parse_str::<Expr>(code)?;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30067,"byte_end":30116,"line_start":908,"line_end":908,"column_start":1,"column_end":50}},{"value":"/     println!(\"{:#?}\", expr);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30117,"byte_end":30149,"line_start":909,"line_end":909,"column_start":1,"column_end":33}},{"value":"/     Ok(())","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30150,"byte_end":30164,"line_start":910,"line_end":910,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30165,"byte_end":30170,"line_start":911,"line_end":911,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30171,"byte_end":30176,"line_start":912,"line_end":912,"column_start":1,"column_end":6}},{"value":"/ # run().unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30177,"byte_end":30198,"line_start":913,"line_end":913,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30199,"byte_end":30206,"line_start":914,"line_end":914,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":30207,"byte_end":30234,"line_start":915,"line_end":915,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":49087,"byte_end":49092,"line_start":151,"line_end":151,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51220,"byte_end":51221,"line_start":228,"line_end":228,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51285,"byte_end":51286,"line_start":231,"line_end":231,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61523,"byte_end":61533,"line_start":562,"line_end":562,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61743,"byte_end":61753,"line_start":570,"line_end":570,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62334,"byte_end":62344,"line_start":589,"line_end":589,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62723,"byte_end":62733,"line_start":606,"line_end":606,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62781,"byte_end":62786,"line_start":609,"line_end":609,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63007,"byte_end":63012,"line_start":620,"line_end":620,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63228,"byte_end":63235,"line_start":631,"line_end":631,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63456,"byte_end":63461,"line_start":642,"line_end":642,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":80759,"byte_end":80764,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81145,"byte_end":81150,"line_start":53,"line_end":53,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81803,"byte_end":81808,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87925,"byte_end":87934,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95576,"byte_end":95580,"line_start":398,"line_end":398,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":100637,"byte_end":100641,"line_start":558,"line_end":558,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":100891,"byte_end":100899,"line_start":566,"line_end":566,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":101154,"byte_end":101167,"line_start":574,"line_end":574,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":101428,"byte_end":101438,"line_start":582,"line_end":582,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103046,"byte_end":103055,"line_start":631,"line_end":631,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103531,"byte_end":103539,"line_start":645,"line_end":645,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103855,"byte_end":103868,"line_start":655,"line_end":655,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/bigint.rs","byte_start":104216,"byte_end":104222,"line_start":8,"line_end":8,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/bigint.rs","byte_start":104992,"byte_end":104998,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/bigint.rs","byte_start":105355,"byte_end":105361,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107887,"byte_end":107893,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":109357,"byte_end":109363,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":113074,"byte_end":113081,"line_start":247,"line_end":247,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114077,"byte_end":114088,"line_start":276,"line_end":276,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114433,"byte_end":114446,"line_start":287,"line_end":287,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114738,"byte_end":114743,"line_start":297,"line_end":297,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":115844,"byte_end":115854,"line_start":328,"line_end":328,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":116639,"byte_end":116649,"line_start":351,"line_end":351,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":119274,"byte_end":119281,"line_start":424,"line_end":424,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":119728,"byte_end":119739,"line_start":437,"line_end":437,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120013,"byte_end":120026,"line_start":446,"line_end":446,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120302,"byte_end":120307,"line_start":455,"line_end":455,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120757,"byte_end":120766,"line_start":468,"line_end":468,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120967,"byte_end":120975,"line_start":475,"line_end":475,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":121178,"byte_end":121191,"line_start":482,"line_end":482,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":145743,"byte_end":145747,"line_start":783,"line_end":783,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148844,"byte_end":148850,"line_start":859,"line_end":859,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148950,"byte_end":148956,"line_start":865,"line_end":865,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149058,"byte_end":149064,"line_start":871,"line_end":871,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149170,"byte_end":149176,"line_start":877,"line_end":877,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149200,"byte_end":149206,"line_start":879,"line_end":879,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149489,"byte_end":149495,"line_start":889,"line_end":889,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149733,"byte_end":149739,"line_start":899,"line_end":899,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150505,"byte_end":150510,"line_start":927,"line_end":927,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150719,"byte_end":150724,"line_start":937,"line_end":937,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150748,"byte_end":150753,"line_start":939,"line_end":939,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150854,"byte_end":150859,"line_start":945,"line_end":945,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":151002,"byte_end":151007,"line_start":952,"line_end":952,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":155812,"byte_end":155822,"line_start":1128,"line_end":1128,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":157056,"byte_end":157060,"line_start":1160,"line_end":1160,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":157197,"byte_end":157201,"line_start":1166,"line_end":1166,"column_start":10,"column_end":14},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160693,"byte_end":160704,"line_start":1254,"line_end":1254,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160728,"byte_end":160739,"line_start":1256,"line_end":1256,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160829,"byte_end":160839,"line_start":1262,"line_end":1262,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160863,"byte_end":160873,"line_start":1264,"line_end":1264,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160968,"byte_end":160978,"line_start":1270,"line_end":1270,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":161107,"byte_end":161117,"line_start":1276,"line_end":1276,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":190015,"byte_end":190022,"line_start":2064,"line_end":2064,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":215016,"byte_end":215024,"line_start":2819,"line_end":2819,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":215468,"byte_end":215474,"line_start":2833,"line_end":2833,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":217128,"byte_end":217133,"line_start":2880,"line_end":2880,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":221518,"byte_end":221526,"line_start":3009,"line_end":3009,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":223871,"byte_end":223881,"line_start":3073,"line_end":3073,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224214,"byte_end":224223,"line_start":3083,"line_end":3083,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224514,"byte_end":224521,"line_start":3092,"line_end":3092,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224772,"byte_end":224780,"line_start":3100,"line_end":3100,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":233586,"byte_end":233595,"line_start":3339,"line_end":3339,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":233936,"byte_end":233942,"line_start":3349,"line_end":3349,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":234268,"byte_end":234273,"line_start":3359,"line_end":3359,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":234571,"byte_end":234580,"line_start":3368,"line_end":3368,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":235687,"byte_end":235695,"line_start":3401,"line_end":3401,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":239254,"byte_end":239263,"line_start":3502,"line_end":3502,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244240,"byte_end":244248,"line_start":95,"line_end":95,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244448,"byte_end":244456,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247418,"byte_end":247428,"line_start":184,"line_end":184,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247855,"byte_end":247868,"line_start":202,"line_end":202,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248292,"byte_end":248301,"line_start":220,"line_end":220,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248729,"byte_end":248741,"line_start":238,"line_end":238,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249169,"byte_end":249180,"line_start":256,"line_end":256,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249612,"byte_end":249626,"line_start":274,"line_end":274,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251082,"byte_end":251090,"line_start":324,"line_end":324,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":253776,"byte_end":253788,"line_start":411,"line_end":411,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254572,"byte_end":254586,"line_start":435,"line_end":435,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254834,"byte_end":254845,"line_start":446,"line_end":446,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255078,"byte_end":255087,"line_start":457,"line_end":457,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259530,"byte_end":259538,"line_start":598,"line_end":598,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":261713,"byte_end":261725,"line_start":661,"line_end":661,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":262611,"byte_end":262622,"line_start":688,"line_end":688,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":263988,"byte_end":264002,"line_start":726,"line_end":726,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":264772,"byte_end":264778,"line_start":748,"line_end":748,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":265085,"byte_end":265094,"line_start":759,"line_end":759,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":266985,"byte_end":266999,"line_start":813,"line_end":813,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":267585,"byte_end":267599,"line_start":831,"line_end":831,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":268452,"byte_end":268462,"line_start":857,"line_end":857,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":270393,"byte_end":270411,"line_start":906,"line_end":906,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":270741,"byte_end":270751,"line_start":917,"line_end":917,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":271577,"byte_end":271588,"line_start":941,"line_end":941,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":272767,"byte_end":272773,"line_start":972,"line_end":972,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":273079,"byte_end":273093,"line_start":983,"line_end":983,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":276072,"byte_end":276080,"line_start":1058,"line_end":1058,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":277498,"byte_end":277510,"line_start":1095,"line_end":1095,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":279858,"byte_end":279870,"line_start":1150,"line_end":1150,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":281822,"byte_end":281831,"line_start":1198,"line_end":1198,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282162,"byte_end":282176,"line_start":1208,"line_end":1208,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282513,"byte_end":282524,"line_start":1218,"line_end":1218,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282947,"byte_end":282956,"line_start":1230,"line_end":1230,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":284782,"byte_end":284792,"line_start":1269,"line_end":1269,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286019,"byte_end":286037,"line_start":1301,"line_end":1301,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286347,"byte_end":286357,"line_start":1311,"line_end":1311,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286915,"byte_end":286926,"line_start":1326,"line_end":1326,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287243,"byte_end":287256,"line_start":1336,"line_end":1336,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287595,"byte_end":287612,"line_start":1346,"line_end":1346,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287903,"byte_end":287914,"line_start":1355,"line_end":1355,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288755,"byte_end":288763,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289947,"byte_end":289955,"line_start":73,"line_end":73,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290112,"byte_end":290120,"line_start":80,"line_end":80,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290290,"byte_end":290298,"line_start":89,"line_end":89,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290403,"byte_end":290411,"line_start":95,"line_end":95,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290436,"byte_end":290444,"line_start":97,"line_end":97,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290565,"byte_end":290573,"line_start":103,"line_end":103,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290686,"byte_end":290694,"line_start":109,"line_end":109,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":291122,"byte_end":291130,"line_start":128,"line_end":128,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":291618,"byte_end":291626,"line_start":146,"line_end":146,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294357,"byte_end":294363,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298414,"byte_end":298424,"line_start":250,"line_end":250,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299207,"byte_end":299214,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299982,"byte_end":299989,"line_start":320,"line_end":320,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300759,"byte_end":300765,"line_start":355,"line_end":355,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302692,"byte_end":302698,"line_start":430,"line_end":430,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303140,"byte_end":303146,"line_start":447,"line_end":447,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303269,"byte_end":303277,"line_start":453,"line_end":453,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304519,"byte_end":304527,"line_start":506,"line_end":506,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304972,"byte_end":304980,"line_start":523,"line_end":523,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305103,"byte_end":305110,"line_start":529,"line_end":529,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":308080,"byte_end":308087,"line_start":630,"line_end":630,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":308340,"byte_end":308350,"line_start":641,"line_end":641,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":308647,"byte_end":308659,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":311079,"byte_end":311082,"line_start":745,"line_end":745,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":313449,"byte_end":313455,"line_start":817,"line_end":817,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":313801,"byte_end":313811,"line_start":828,"line_end":828,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314166,"byte_end":314173,"line_start":839,"line_end":839,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314518,"byte_end":314525,"line_start":850,"line_end":850,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314875,"byte_end":314881,"line_start":861,"line_end":861,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":315228,"byte_end":315236,"line_start":872,"line_end":872,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":315592,"byte_end":315599,"line_start":883,"line_end":883,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316093,"byte_end":316099,"line_start":901,"line_end":901,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316301,"byte_end":316311,"line_start":908,"line_end":908,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316513,"byte_end":316520,"line_start":915,"line_end":915,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316722,"byte_end":316729,"line_start":922,"line_end":922,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316931,"byte_end":316937,"line_start":929,"line_end":929,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317139,"byte_end":317147,"line_start":936,"line_end":936,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317349,"byte_end":317356,"line_start":943,"line_end":943,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317603,"byte_end":317606,"line_start":956,"line_end":956,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341475,"byte_end":341480,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":346295,"byte_end":346300,"line_start":178,"line_end":178,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":346954,"byte_end":346959,"line_start":202,"line_end":202,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":350338,"byte_end":350349,"line_start":96,"line_end":96,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":355031,"byte_end":355042,"line_start":232,"line_end":232,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":361250,"byte_end":361255,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":362596,"byte_end":362600,"line_start":166,"line_end":166,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":363280,"byte_end":363285,"line_start":189,"line_end":189,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":365020,"byte_end":365024,"line_start":225,"line_end":225,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376027,"byte_end":376031,"line_start":343,"line_end":343,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376255,"byte_end":376259,"line_start":351,"line_end":351,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":388957,"byte_end":388966,"line_start":657,"line_end":657,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":389284,"byte_end":389293,"line_start":668,"line_end":668,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":389696,"byte_end":389703,"line_start":681,"line_end":681,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":390453,"byte_end":390466,"line_start":704,"line_end":704,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":390925,"byte_end":390935,"line_start":717,"line_end":717,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":392862,"byte_end":392871,"line_start":778,"line_end":778,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":393107,"byte_end":393116,"line_start":787,"line_end":787,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":393358,"byte_end":393367,"line_start":796,"line_end":796,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":394439,"byte_end":394448,"line_start":829,"line_end":829,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":394677,"byte_end":394685,"line_start":838,"line_end":838,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":395987,"byte_end":395997,"line_start":868,"line_end":868,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":396733,"byte_end":396743,"line_start":888,"line_end":888,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":396971,"byte_end":396986,"line_start":896,"line_end":896,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":397148,"byte_end":397163,"line_start":903,"line_end":903,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":399036,"byte_end":399049,"line_start":950,"line_end":950,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":399211,"byte_end":399224,"line_start":957,"line_end":957,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":400598,"byte_end":400607,"line_start":993,"line_end":993,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":400946,"byte_end":400955,"line_start":1004,"line_end":1004,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":401118,"byte_end":401127,"line_start":1011,"line_end":1011,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":401603,"byte_end":401612,"line_start":1025,"line_end":1025,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":404338,"byte_end":404341,"line_start":1099,"line_end":1099,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":404611,"byte_end":404617,"line_start":1109,"line_end":1109,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405135,"byte_end":405144,"line_start":1129,"line_end":1129,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405419,"byte_end":405428,"line_start":1138,"line_end":1138,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405798,"byte_end":405805,"line_start":1149,"line_end":1149,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":406269,"byte_end":406282,"line_start":1163,"line_end":1163,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":406616,"byte_end":406626,"line_start":1173,"line_end":1173,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407441,"byte_end":407450,"line_start":1194,"line_end":1194,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407652,"byte_end":407661,"line_start":1201,"line_end":1201,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407935,"byte_end":407943,"line_start":1210,"line_end":1210,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408171,"byte_end":408186,"line_start":1217,"line_end":1217,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408430,"byte_end":408443,"line_start":1225,"line_end":1225,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408688,"byte_end":408697,"line_start":1233,"line_end":1233,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408970,"byte_end":408979,"line_start":1242,"line_end":1242,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409252,"byte_end":409261,"line_start":1251,"line_end":1251,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409469,"byte_end":409478,"line_start":1258,"line_end":1258,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409673,"byte_end":409683,"line_start":1265,"line_end":1265,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410073,"byte_end":410082,"line_start":1278,"line_end":1278,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410476,"byte_end":410484,"line_start":1290,"line_end":1290,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410731,"byte_end":410734,"line_start":1298,"line_end":1298,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411397,"byte_end":411401,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412060,"byte_end":412071,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412988,"byte_end":413001,"line_start":77,"line_end":77,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413073,"byte_end":413086,"line_start":83,"line_end":83,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417455,"byte_end":417459,"line_start":219,"line_end":219,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417654,"byte_end":417669,"line_start":226,"line_end":226,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":422078,"byte_end":422108,"line_start":359,"line_end":359,"column_start":20,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423046,"byte_end":423075,"line_start":386,"line_end":386,"column_start":20,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423502,"byte_end":423513,"line_start":398,"line_end":398,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423642,"byte_end":423653,"line_start":404,"line_end":404,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":424621,"byte_end":424628,"line_start":431,"line_end":431,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":425790,"byte_end":425794,"line_start":471,"line_end":471,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":433947,"byte_end":433951,"line_start":694,"line_end":694,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434201,"byte_end":434212,"line_start":702,"line_end":702,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434455,"byte_end":434468,"line_start":710,"line_end":710,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434961,"byte_end":434976,"line_start":725,"line_end":725,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":436191,"byte_end":436221,"line_start":753,"line_end":753,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":437849,"byte_end":437856,"line_start":794,"line_end":794,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":438137,"byte_end":438147,"line_start":803,"line_end":803,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":438435,"byte_end":438464,"line_start":812,"line_end":812,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441506,"byte_end":441517,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444631,"byte_end":444637,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":445224,"byte_end":445239,"line_start":131,"line_end":131,"column_start":30,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453050,"byte_end":453056,"line_start":340,"line_end":340,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453084,"byte_end":453090,"line_start":342,"line_end":342,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453166,"byte_end":453172,"line_start":348,"line_end":348,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453204,"byte_end":453210,"line_start":350,"line_end":350,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453321,"byte_end":453327,"line_start":356,"line_end":356,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":454622,"byte_end":454628,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":454790,"byte_end":454796,"line_start":19,"line_end":19,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":454916,"byte_end":454922,"line_start":26,"line_end":26,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455071,"byte_end":455076,"line_start":34,"line_end":34,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455118,"byte_end":455122,"line_start":35,"line_end":35,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455168,"byte_end":455175,"line_start":36,"line_end":36,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455222,"byte_end":455230,"line_start":37,"line_end":37,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455277,"byte_end":455285,"line_start":38,"line_end":38,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458865,"byte_end":458870,"line_start":89,"line_end":89,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459350,"byte_end":459356,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459428,"byte_end":459436,"line_start":111,"line_end":111,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459618,"byte_end":459624,"line_start":121,"line_end":121,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459717,"byte_end":459722,"line_start":128,"line_end":128,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459794,"byte_end":459800,"line_start":133,"line_end":133,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459823,"byte_end":459829,"line_start":134,"line_end":134,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461568,"byte_end":461578,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":471741,"byte_end":471751,"line_start":372,"line_end":372,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473226,"byte_end":473236,"line_start":437,"line_end":437,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473437,"byte_end":473447,"line_start":448,"line_end":448,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473652,"byte_end":473662,"line_start":459,"line_end":459,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473859,"byte_end":473869,"line_start":467,"line_end":467,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":474574,"byte_end":474584,"line_start":490,"line_end":490,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475372,"byte_end":475382,"line_start":523,"line_end":523,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475773,"byte_end":475778,"line_start":539,"line_end":539,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476167,"byte_end":476172,"line_start":554,"line_end":554,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476434,"byte_end":476439,"line_start":563,"line_end":563,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476587,"byte_end":476592,"line_start":570,"line_end":570,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477092,"byte_end":477100,"line_start":589,"line_end":589,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477497,"byte_end":477505,"line_start":604,"line_end":604,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477767,"byte_end":477775,"line_start":613,"line_end":613,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478166,"byte_end":478175,"line_start":629,"line_end":629,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478548,"byte_end":478557,"line_start":644,"line_end":644,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478811,"byte_end":478820,"line_start":653,"line_end":653,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478931,"byte_end":478940,"line_start":659,"line_end":659,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479374,"byte_end":479382,"line_start":681,"line_end":681,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479620,"byte_end":479628,"line_start":693,"line_end":693,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479756,"byte_end":479764,"line_start":699,"line_end":699,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479851,"byte_end":479859,"line_start":705,"line_end":705,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480816,"byte_end":480827,"line_start":739,"line_end":739,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481164,"byte_end":481168,"line_start":754,"line_end":754,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481310,"byte_end":481314,"line_start":762,"line_end":762,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481564,"byte_end":481568,"line_start":774,"line_end":774,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481704,"byte_end":481708,"line_start":780,"line_end":780,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481809,"byte_end":481820,"line_start":786,"line_end":786,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2479},{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482066,"byte_end":482077,"line_start":797,"line_end":797,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482294,"byte_end":482305,"line_start":805,"line_end":805,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482453,"byte_end":482464,"line_start":812,"line_end":812,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482660,"byte_end":482661,"line_start":821,"line_end":821,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483512,"byte_end":483526,"line_start":854,"line_end":854,"column_start":32,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483859,"byte_end":483866,"line_start":868,"line_end":868,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484120,"byte_end":484127,"line_start":880,"line_end":880,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484263,"byte_end":484270,"line_start":886,"line_end":886,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484371,"byte_end":484385,"line_start":892,"line_end":892,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484639,"byte_end":484653,"line_start":903,"line_end":903,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484874,"byte_end":484888,"line_start":911,"line_end":911,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485021,"byte_end":485022,"line_start":917,"line_end":917,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485428,"byte_end":485432,"line_start":935,"line_end":935,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487873,"byte_end":487877,"line_start":1013,"line_end":1013,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":488146,"byte_end":488156,"line_start":1026,"line_end":1026,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":488498,"byte_end":488508,"line_start":1041,"line_end":1041,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":489046,"byte_end":489056,"line_start":1061,"line_end":1061,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":489324,"byte_end":489328,"line_start":1072,"line_end":1072,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493811,"byte_end":493812,"line_start":130,"line_end":130,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":494297,"byte_end":494306,"line_start":146,"line_end":146,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":494603,"byte_end":494613,"line_start":156,"line_end":156,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498906,"byte_end":498907,"line_start":148,"line_end":148,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":499313,"byte_end":499326,"line_start":161,"line_end":161,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503434,"byte_end":503435,"line_start":110,"line_end":110,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2699}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12767364,"byte_end":12767367,"line_start":8,"line_end":8,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6499}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12767643,"byte_end":12767673,"line_start":18,"line_end":18,"column_start":16,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768477,"byte_end":12768486,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768611,"byte_end":12768620,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6504}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768796,"byte_end":12768805,"line_start":54,"line_end":54,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6506}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769220,"byte_end":12769229,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6508}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769529,"byte_end":12769534,"line_start":78,"line_end":78,"column_start":15,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769659,"byte_end":12769664,"line_start":81,"line_end":81,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6511}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769840,"byte_end":12769847,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6513}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12770412,"byte_end":12770426,"line_start":109,"line_end":109,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12770807,"byte_end":12770817,"line_start":121,"line_end":121,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6517}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771311,"byte_end":12771321,"line_start":136,"line_end":136,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6519}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771622,"byte_end":12771626,"line_start":147,"line_end":147,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6521}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771964,"byte_end":12771972,"line_start":158,"line_end":158,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772285,"byte_end":12772295,"line_start":169,"line_end":169,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6525}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772608,"byte_end":12772617,"line_start":180,"line_end":180,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6527}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772878,"byte_end":12772889,"line_start":190,"line_end":190,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12773278,"byte_end":12773282,"line_start":203,"line_end":203,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6531}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12778633,"byte_end":12778643,"line_start":342,"line_end":342,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6533}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12779914,"byte_end":12779922,"line_start":388,"line_end":388,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12780277,"byte_end":12780285,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6537}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12781518,"byte_end":12781527,"line_start":440,"line_end":440,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12783038,"byte_end":12783047,"line_start":491,"line_end":491,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6541}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12783784,"byte_end":12783791,"line_start":516,"line_end":516,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6543}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12785527,"byte_end":12785536,"line_start":576,"line_end":576,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6545}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12785855,"byte_end":12785863,"line_start":587,"line_end":587,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6547}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12789269,"byte_end":12789278,"line_start":706,"line_end":706,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12790570,"byte_end":12790575,"line_start":752,"line_end":752,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12791646,"byte_end":12791652,"line_start":789,"line_end":789,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6553}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12792011,"byte_end":12792022,"line_start":800,"line_end":800,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6555}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12792306,"byte_end":12792319,"line_start":810,"line_end":810,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6557}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12795389,"byte_end":12795404,"line_start":908,"line_end":908,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6559}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12796372,"byte_end":12796384,"line_start":931,"line_end":931,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6561}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12796797,"byte_end":12796805,"line_start":942,"line_end":942,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6563}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12799630,"byte_end":12799635,"line_start":1028,"line_end":1028,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6565}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12808937,"byte_end":12808948,"line_start":1314,"line_end":1314,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6567}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12809268,"byte_end":12809271,"line_start":1325,"line_end":1325,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6569}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12809842,"byte_end":12809849,"line_start":1340,"line_end":1340,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12810490,"byte_end":12810495,"line_start":1363,"line_end":1363,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6573}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12810857,"byte_end":12810871,"line_start":1375,"line_end":1375,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6575}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811296,"byte_end":12811302,"line_start":1386,"line_end":1386,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811619,"byte_end":12811623,"line_start":1396,"line_end":1396,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6579}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811988,"byte_end":12811996,"line_start":1407,"line_end":1407,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6581}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12812316,"byte_end":12812329,"line_start":1418,"line_end":1418,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6583}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12813010,"byte_end":12813020,"line_start":1441,"line_end":1441,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6585}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12813343,"byte_end":12813372,"line_start":1451,"line_end":1451,"column_start":16,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12819421,"byte_end":12819425,"line_start":1656,"line_end":1656,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6589}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12819712,"byte_end":12819725,"line_start":1666,"line_end":1666,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820187,"byte_end":12820198,"line_start":1679,"line_end":1679,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6593}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820478,"byte_end":12820489,"line_start":1689,"line_end":1689,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6595}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820810,"byte_end":12820827,"line_start":1700,"line_end":1700,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6597}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12821164,"byte_end":12821177,"line_start":1711,"line_end":1711,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6599}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12821561,"byte_end":12821566,"line_start":1723,"line_end":1723,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6601}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12822597,"byte_end":12822607,"line_start":1758,"line_end":1758,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6603}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824001,"byte_end":12824011,"line_start":1799,"line_end":1799,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6605}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824383,"byte_end":12824401,"line_start":1811,"line_end":1811,"column_start":15,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824526,"byte_end":12824544,"line_start":1814,"line_end":1814,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12827002,"byte_end":12827006,"line_start":1890,"line_end":1890,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6610}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12828144,"byte_end":12828153,"line_start":1915,"line_end":1915,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12828521,"byte_end":12828531,"line_start":1927,"line_end":1927,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6614}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829074,"byte_end":12829083,"line_start":1943,"line_end":1943,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829363,"byte_end":12829376,"line_start":1953,"line_end":1953,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829662,"byte_end":12829671,"line_start":1963,"line_end":1963,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6620}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829924,"byte_end":12829933,"line_start":1972,"line_end":1972,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6622}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830139,"byte_end":12830148,"line_start":1979,"line_end":1979,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830389,"byte_end":12830398,"line_start":1988,"line_end":1988,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830848,"byte_end":12830862,"line_start":2002,"line_end":2002,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831213,"byte_end":12831222,"line_start":2012,"line_end":2012,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831502,"byte_end":12831510,"line_start":2022,"line_end":2022,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6632}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831777,"byte_end":12831784,"line_start":2032,"line_end":2032,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6634}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832160,"byte_end":12832173,"line_start":2044,"line_end":2044,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6636}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832547,"byte_end":12832556,"line_start":2056,"line_end":2056,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6638}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832840,"byte_end":12832855,"line_start":2066,"line_end":2066,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6640}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833141,"byte_end":12833150,"line_start":2076,"line_end":2076,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6642}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833431,"byte_end":12833435,"line_start":2086,"line_end":2086,"column_start":15,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833560,"byte_end":12833564,"line_start":2089,"line_end":2089,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6645}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12835519,"byte_end":12835527,"line_start":2159,"line_end":2159,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6647}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12835794,"byte_end":12835801,"line_start":2169,"line_end":2169,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6649}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836163,"byte_end":12836171,"line_start":2181,"line_end":2181,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6651}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836413,"byte_end":12836422,"line_start":2190,"line_end":2190,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836661,"byte_end":12836674,"line_start":2199,"line_end":2199,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6655}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837050,"byte_end":12837060,"line_start":2211,"line_end":2211,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6657}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837529,"byte_end":12837540,"line_start":2223,"line_end":2223,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6659}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837834,"byte_end":12837848,"line_start":2233,"line_end":2233,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6661}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525193,"byte_end":525197,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525293,"byte_end":525297,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525399,"byte_end":525403,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":526642,"byte_end":526653,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":526768,"byte_end":526779,"line_start":15,"line_end":15,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":526795,"byte_end":526806,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":527152,"byte_end":527163,"line_start":34,"line_end":34,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530051,"byte_end":530061,"line_start":88,"line_end":88,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532389,"byte_end":532390,"line_start":153,"line_end":153,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532466,"byte_end":532477,"line_start":159,"line_end":159,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532713,"byte_end":532714,"line_start":169,"line_end":169,"column_start":63,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583571,"byte_end":583582,"line_start":160,"line_end":160,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541954,"byte_end":541965,"line_start":270,"line_end":270,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542299,"byte_end":542310,"line_start":281,"line_end":281,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542459,"byte_end":542470,"line_start":287,"line_end":287,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544624,"byte_end":544634,"line_start":352,"line_end":352,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544767,"byte_end":544777,"line_start":360,"line_end":360,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544813,"byte_end":544823,"line_start":362,"line_end":362,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544900,"byte_end":544910,"line_start":368,"line_end":368,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":546203,"byte_end":546213,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":546292,"byte_end":546302,"line_start":413,"line_end":413,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":547771,"byte_end":547782,"line_start":464,"line_end":464,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":3114},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569302,"byte_end":569305,"line_start":1066,"line_end":1066,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569492,"byte_end":569498,"line_start":1073,"line_end":1073,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569753,"byte_end":569764,"line_start":1084,"line_end":1084,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569968,"byte_end":569977,"line_start":1091,"line_end":1091,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":570284,"byte_end":570289,"line_start":1101,"line_end":1101,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":570879,"byte_end":570884,"line_start":1117,"line_end":1117,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571199,"byte_end":571206,"line_start":1127,"line_end":1127,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573967,"byte_end":573968,"line_start":1203,"line_end":1203,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576370,"byte_end":576377,"line_start":1284,"line_end":1284,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/print.rs","byte_start":586449,"byte_end":586464,"line_start":6,"line_end":6,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589919,"byte_end":589924,"line_start":105,"line_end":105,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595414,"byte_end":595426,"line_start":255,"line_end":255,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597277,"byte_end":597282,"line_start":312,"line_end":312,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597694,"byte_end":597706,"line_start":328,"line_end":328,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3305}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597847,"byte_end":597852,"line_start":334,"line_end":334,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598001,"byte_end":598006,"line_start":340,"line_end":340,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598134,"byte_end":598146,"line_start":348,"line_end":348,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598601,"byte_end":598606,"line_start":364,"line_end":364,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598635,"byte_end":598640,"line_start":366,"line_end":366,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598755,"byte_end":598760,"line_start":372,"line_end":372,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599033,"byte_end":599041,"line_start":387,"line_end":387,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599512,"byte_end":599516,"line_start":412,"line_end":412,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599717,"byte_end":599722,"line_start":422,"line_end":422,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":11053,"byte_end":11058,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":66}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15260,"byte_end":15266,"line_start":431,"line_end":431,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1996}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15367,"byte_end":15370,"line_start":435,"line_end":435,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2155}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15380,"byte_end":15390,"line_start":436,"line_end":436,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2205}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15584,"byte_end":15595,"line_start":443,"line_end":443,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2616}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15831,"byte_end":15848,"line_start":452,"line_end":452,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":2658}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":15993,"byte_end":16000,"line_start":456,"line_end":456,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2688}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":26520,"byte_end":26529,"line_start":792,"line_end":792,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2703}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lib.rs","byte_start":26743,"byte_end":26748,"line_start":805,"line_end":805,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2939}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":538954,"byte_end":538965,"line_start":187,"line_end":187,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2940}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":48584,"byte_end":48590,"line_start":126,"line_end":126,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":49087,"byte_end":49092,"line_start":151,"line_end":151,"column_start":26,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":21,"index":1070},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51220,"byte_end":51221,"line_start":228,"line_end":228,"column_start":42,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":180},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":51285,"byte_end":51286,"line_start":231,"line_end":231,"column_start":32,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61523,"byte_end":61533,"line_start":562,"line_end":562,"column_start":19,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3414},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":61743,"byte_end":61753,"line_start":570,"line_end":570,"column_start":16,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62334,"byte_end":62344,"line_start":589,"line_end":589,"column_start":16,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62723,"byte_end":62733,"line_start":606,"line_end":606,"column_start":26,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":62781,"byte_end":62786,"line_start":609,"line_end":609,"column_start":16,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5420},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63007,"byte_end":63012,"line_start":620,"line_end":620,"column_start":16,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5392},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63228,"byte_end":63235,"line_start":631,"line_end":631,"column_start":16,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5406},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/token.rs","byte_start":63456,"byte_end":63461,"line_start":642,"line_end":642,"column_start":16,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5434},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":80759,"byte_end":80764,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":21,"index":1070},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81145,"byte_end":81150,"line_start":53,"line_end":53,"column_start":16,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":21,"index":1070},"to":{"krate":0,"index":153}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ident.rs","byte_start":81803,"byte_end":81808,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":21,"index":1070},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":87925,"byte_end":87934,"line_start":158,"line_end":158,"column_start":6,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":95576,"byte_end":95580,"line_start":398,"line_end":398,"column_start":6,"column_end":10},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":100637,"byte_end":100641,"line_start":558,"line_end":558,"column_start":20,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5471},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":100891,"byte_end":100899,"line_start":566,"line_end":566,"column_start":20,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5489},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":101154,"byte_end":101167,"line_start":574,"line_end":574,"column_start":20,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5493},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":101428,"byte_end":101438,"line_start":582,"line_end":582,"column_start":20,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5497},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103046,"byte_end":103055,"line_start":631,"line_end":631,"column_start":23,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5459},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103531,"byte_end":103539,"line_start":645,"line_end":645,"column_start":23,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5489},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/attr.rs","byte_start":103855,"byte_end":103868,"line_start":655,"line_end":655,"column_start":23,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5493},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/bigint.rs","byte_start":104216,"byte_end":104222,"line_start":8,"line_end":8,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/bigint.rs","byte_start":104992,"byte_end":104998,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/bigint.rs","byte_start":105355,"byte_end":105361,"line_start":54,"line_end":54,"column_start":24,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":3286}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":107887,"byte_end":107893,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":109357,"byte_end":109363,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5515},"to":{"krate":2,"index":8286}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":113074,"byte_end":113081,"line_start":247,"line_end":247,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5510},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114077,"byte_end":114088,"line_start":276,"line_end":276,"column_start":20,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5530},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114433,"byte_end":114446,"line_start":287,"line_end":287,"column_start":20,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5533},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":114738,"byte_end":114743,"line_start":297,"line_end":297,"column_start":10,"column_end":15},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":115844,"byte_end":115854,"line_start":328,"line_end":328,"column_start":20,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5542},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":116639,"byte_end":116649,"line_start":351,"line_end":351,"column_start":10,"column_end":20},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":119274,"byte_end":119281,"line_start":424,"line_end":424,"column_start":23,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5510},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":119728,"byte_end":119739,"line_start":437,"line_end":437,"column_start":23,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5530},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120013,"byte_end":120026,"line_start":446,"line_end":446,"column_start":23,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5533},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120302,"byte_end":120307,"line_start":455,"line_end":455,"column_start":23,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5536},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120757,"byte_end":120766,"line_start":468,"line_end":468,"column_start":23,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5562},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":120967,"byte_end":120975,"line_start":475,"line_end":475,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5564},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/data.rs","byte_start":121178,"byte_end":121191,"line_start":482,"line_end":482,"column_start":23,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5566},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":145743,"byte_end":145747,"line_start":783,"line_end":783,"column_start":6,"column_end":10},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148844,"byte_end":148850,"line_start":859,"line_end":859,"column_start":22,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":148950,"byte_end":148956,"line_start":865,"line_end":865,"column_start":22,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149058,"byte_end":149064,"line_start":871,"line_end":871,"column_start":22,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149170,"byte_end":149176,"line_start":877,"line_end":877,"column_start":13,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149200,"byte_end":149206,"line_start":879,"line_end":879,"column_start":20,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149489,"byte_end":149495,"line_start":889,"line_end":889,"column_start":15,"column_end":21},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":10331}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":149733,"byte_end":149739,"line_start":899,"line_end":899,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5932},"to":{"krate":23,"index":63}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150505,"byte_end":150510,"line_start":927,"line_end":927,"column_start":22,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5939},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150719,"byte_end":150724,"line_start":937,"line_end":937,"column_start":13,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5939},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150748,"byte_end":150753,"line_start":939,"line_end":939,"column_start":20,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5939},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":150854,"byte_end":150859,"line_start":945,"line_end":945,"column_start":15,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5939},"to":{"krate":2,"index":10331}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":151002,"byte_end":151007,"line_start":952,"line_end":952,"column_start":24,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5939},"to":{"krate":23,"index":63}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":155812,"byte_end":155822,"line_start":1128,"line_end":1128,"column_start":10,"column_end":20},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":157056,"byte_end":157060,"line_start":1160,"line_end":1160,"column_start":20,"column_end":24},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5571},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":157197,"byte_end":157201,"line_start":1166,"line_end":1166,"column_start":10,"column_end":14},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160693,"byte_end":160704,"line_start":1254,"line_end":1254,"column_start":19,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160728,"byte_end":160739,"line_start":1256,"line_end":1256,"column_start":20,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160829,"byte_end":160839,"line_start":1262,"line_end":1262,"column_start":19,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160863,"byte_end":160873,"line_start":1264,"line_end":1264,"column_start":20,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":160968,"byte_end":160978,"line_start":1270,"line_end":1270,"column_start":24,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":161107,"byte_end":161117,"line_start":1276,"line_end":1276,"column_start":25,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":190015,"byte_end":190022,"line_start":2064,"line_end":2064,"column_start":20,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5853},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":215016,"byte_end":215024,"line_start":2819,"line_end":2819,"column_start":20,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5876},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":215468,"byte_end":215474,"line_start":2833,"line_end":2833,"column_start":20,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5932},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":217128,"byte_end":217133,"line_start":2880,"line_end":2880,"column_start":20,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5939},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":221518,"byte_end":221526,"line_start":3009,"line_end":3009,"column_start":23,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5809},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":223871,"byte_end":223881,"line_start":3073,"line_end":3073,"column_start":23,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5792},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224214,"byte_end":224223,"line_start":3083,"line_end":3083,"column_start":23,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5916},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224514,"byte_end":224521,"line_start":3092,"line_end":3092,"column_start":23,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5853},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":224772,"byte_end":224780,"line_start":3100,"line_end":3100,"column_start":23,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5814},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":233586,"byte_end":233595,"line_start":3339,"line_end":3339,"column_start":23,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5827},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":233936,"byte_end":233942,"line_start":3349,"line_end":3349,"column_start":23,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5932},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":234268,"byte_end":234273,"line_start":3359,"line_end":3359,"column_start":23,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5939},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":234571,"byte_end":234580,"line_start":3368,"line_end":3368,"column_start":23,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5844},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":235687,"byte_end":235695,"line_start":3401,"line_end":3401,"column_start":23,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5876},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/expr.rs","byte_start":239254,"byte_end":239263,"line_start":3502,"line_end":3502,"column_start":23,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5872},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244240,"byte_end":244248,"line_start":95,"line_end":95,"column_start":18,"column_end":26},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5960},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":244448,"byte_end":244456,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247418,"byte_end":247428,"line_start":184,"line_end":184,"column_start":23,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":247855,"byte_end":247868,"line_start":202,"line_end":202,"column_start":23,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248292,"byte_end":248301,"line_start":220,"line_end":220,"column_start":23,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":248729,"byte_end":248741,"line_start":238,"line_end":238,"column_start":23,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249169,"byte_end":249180,"line_start":256,"line_end":256,"column_start":23,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":249612,"byte_end":249626,"line_start":274,"line_end":274,"column_start":23,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":956},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":251082,"byte_end":251090,"line_start":324,"line_end":324,"column_start":6,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":253776,"byte_end":253788,"line_start":411,"line_end":411,"column_start":10,"column_end":22},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254572,"byte_end":254586,"line_start":435,"line_end":435,"column_start":18,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6012},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":254834,"byte_end":254845,"line_start":446,"line_end":446,"column_start":6,"column_end":17},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":255078,"byte_end":255087,"line_start":457,"line_end":457,"column_start":22,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5983},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":259530,"byte_end":259538,"line_start":598,"line_end":598,"column_start":20,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5960},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":261713,"byte_end":261725,"line_start":661,"line_end":661,"column_start":20,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5965},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":262611,"byte_end":262622,"line_start":688,"line_end":688,"column_start":20,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5990},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":263988,"byte_end":264002,"line_start":726,"line_end":726,"column_start":20,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6012},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":264772,"byte_end":264778,"line_start":748,"line_end":748,"column_start":20,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":2,"index":40562},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":265085,"byte_end":265094,"line_start":759,"line_end":759,"column_start":20,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5983},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":266985,"byte_end":266999,"line_start":813,"line_end":813,"column_start":20,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6017},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":267585,"byte_end":267599,"line_start":831,"line_end":831,"column_start":10,"column_end":24},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":268452,"byte_end":268462,"line_start":857,"line_end":857,"column_start":20,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6030},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":270393,"byte_end":270411,"line_start":906,"line_end":906,"column_start":20,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6035},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":270741,"byte_end":270751,"line_start":917,"line_end":917,"column_start":20,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5995},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":271577,"byte_end":271588,"line_start":941,"line_end":941,"column_start":20,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6041},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":272767,"byte_end":272773,"line_start":972,"line_end":972,"column_start":20,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":2,"index":40562},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":273079,"byte_end":273093,"line_start":983,"line_end":983,"column_start":20,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6044},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":276072,"byte_end":276080,"line_start":1058,"line_end":1058,"column_start":23,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5960},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":277498,"byte_end":277510,"line_start":1095,"line_end":1095,"column_start":27,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":964},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":279858,"byte_end":279870,"line_start":1150,"line_end":1150,"column_start":27,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":968},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":281822,"byte_end":281831,"line_start":1198,"line_end":1198,"column_start":27,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":972},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282162,"byte_end":282176,"line_start":1208,"line_end":1208,"column_start":23,"column_end":37},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6012},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282513,"byte_end":282524,"line_start":1218,"line_end":1218,"column_start":23,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5990},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":282947,"byte_end":282956,"line_start":1230,"line_end":1230,"column_start":23,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5983},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":284782,"byte_end":284792,"line_start":1269,"line_end":1269,"column_start":23,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6030},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286019,"byte_end":286037,"line_start":1301,"line_end":1301,"column_start":23,"column_end":41},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6035},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286347,"byte_end":286357,"line_start":1311,"line_end":1311,"column_start":23,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5995},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":286915,"byte_end":286926,"line_start":1326,"line_end":1326,"column_start":23,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6041},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287243,"byte_end":287256,"line_start":1336,"line_end":1336,"column_start":23,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6062},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287595,"byte_end":287612,"line_start":1346,"line_end":1346,"column_start":23,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6067},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/generics.rs","byte_start":287903,"byte_end":287914,"line_start":1355,"line_end":1355,"column_start":23,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6071},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":288755,"byte_end":288763,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":289947,"byte_end":289955,"line_start":73,"line_end":73,"column_start":18,"column_end":26},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290112,"byte_end":290120,"line_start":80,"line_end":80,"column_start":16,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290290,"byte_end":290298,"line_start":89,"line_end":89,"column_start":20,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290403,"byte_end":290411,"line_start":95,"line_end":95,"column_start":13,"column_end":21},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290436,"byte_end":290444,"line_start":97,"line_end":97,"column_start":21,"column_end":29},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290565,"byte_end":290573,"line_start":103,"line_end":103,"column_start":14,"column_end":22},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":290686,"byte_end":290694,"line_start":109,"line_end":109,"column_start":15,"column_end":23},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":10331}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":291122,"byte_end":291130,"line_start":128,"line_end":128,"column_start":20,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lifetime.rs","byte_start":291618,"byte_end":291626,"line_start":146,"line_end":146,"column_start":23,"column_end":31},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1162},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":294357,"byte_end":294363,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":298414,"byte_end":298424,"line_start":250,"line_end":250,"column_start":6,"column_end":16},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299207,"byte_end":299214,"line_start":285,"line_end":285,"column_start":6,"column_end":13},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":299982,"byte_end":299989,"line_start":320,"line_end":320,"column_start":6,"column_end":13},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":300759,"byte_end":300765,"line_start":355,"line_end":355,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":302692,"byte_end":302698,"line_start":430,"line_end":430,"column_start":24,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6124},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303140,"byte_end":303146,"line_start":447,"line_end":447,"column_start":18,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6124},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":303269,"byte_end":303277,"line_start":453,"line_end":453,"column_start":6,"column_end":14},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304519,"byte_end":304527,"line_start":506,"line_end":506,"column_start":24,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6126},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":304972,"byte_end":304980,"line_start":523,"line_end":523,"column_start":18,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6126},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":305103,"byte_end":305110,"line_start":529,"line_end":529,"column_start":6,"column_end":13},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":308080,"byte_end":308087,"line_start":630,"line_end":630,"column_start":16,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":308340,"byte_end":308350,"line_start":641,"line_end":641,"column_start":16,"column_end":26},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":308647,"byte_end":308659,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":311079,"byte_end":311082,"line_start":745,"line_end":745,"column_start":20,"column_end":23},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6075},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":313449,"byte_end":313455,"line_start":817,"line_end":817,"column_start":20,"column_end":26},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6116},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":313801,"byte_end":313811,"line_start":828,"line_end":828,"column_start":20,"column_end":30},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6118},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314166,"byte_end":314173,"line_start":839,"line_end":839,"column_start":20,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314518,"byte_end":314525,"line_start":850,"line_end":850,"column_start":20,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6122},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":314875,"byte_end":314881,"line_start":861,"line_end":861,"column_start":20,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6124},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":315228,"byte_end":315236,"line_start":872,"line_end":872,"column_start":20,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6126},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":315592,"byte_end":315599,"line_start":883,"line_end":883,"column_start":20,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6128},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316093,"byte_end":316099,"line_start":901,"line_end":901,"column_start":23,"column_end":29},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6116},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316301,"byte_end":316311,"line_start":908,"line_end":908,"column_start":23,"column_end":33},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6118},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316513,"byte_end":316520,"line_start":915,"line_end":915,"column_start":23,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6120},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316722,"byte_end":316729,"line_start":922,"line_end":922,"column_start":23,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6122},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":316931,"byte_end":316937,"line_start":929,"line_end":929,"column_start":23,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6124},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317139,"byte_end":317147,"line_start":936,"line_end":936,"column_start":23,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6126},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317349,"byte_end":317356,"line_start":943,"line_end":943,"column_start":23,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6128},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lit.rs","byte_start":317603,"byte_end":317606,"line_start":956,"line_end":956,"column_start":10,"column_end":13},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":341475,"byte_end":341480,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":346295,"byte_end":346300,"line_start":178,"line_end":178,"column_start":20,"column_end":25},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6155},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/mac.rs","byte_start":346954,"byte_end":346959,"line_start":202,"line_end":202,"column_start":23,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6155},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":350338,"byte_end":350349,"line_start":96,"line_end":96,"column_start":20,"column_end":31},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6170},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/derive.rs","byte_start":355031,"byte_end":355042,"line_start":232,"line_end":232,"column_start":23,"column_end":34},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6170},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":361250,"byte_end":361255,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6203},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":362596,"byte_end":362600,"line_start":166,"line_end":166,"column_start":20,"column_end":24},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6288},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":363280,"byte_end":363285,"line_start":189,"line_end":189,"column_start":23,"column_end":28},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6203},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/op.rs","byte_start":365020,"byte_end":365024,"line_start":225,"line_end":225,"column_start":23,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6288},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376027,"byte_end":376031,"line_start":343,"line_end":343,"column_start":20,"column_end":24},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6298},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":376255,"byte_end":376259,"line_start":351,"line_end":351,"column_start":10,"column_end":14},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":388957,"byte_end":388966,"line_start":657,"line_end":657,"column_start":20,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6416},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":389284,"byte_end":389293,"line_start":668,"line_end":668,"column_start":20,"column_end":29},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6374},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":389696,"byte_end":389703,"line_start":681,"line_end":681,"column_start":20,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6406},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":390453,"byte_end":390466,"line_start":704,"line_end":704,"column_start":20,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6411},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":390925,"byte_end":390935,"line_start":717,"line_end":717,"column_start":20,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6379},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":392862,"byte_end":392871,"line_start":778,"line_end":778,"column_start":20,"column_end":29},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6398},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":393107,"byte_end":393116,"line_start":787,"line_end":787,"column_start":20,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6394},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":393358,"byte_end":393367,"line_start":796,"line_end":796,"column_start":20,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6422},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":394439,"byte_end":394448,"line_start":829,"line_end":829,"column_start":20,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6396},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":394677,"byte_end":394685,"line_start":838,"line_end":838,"column_start":20,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6403},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":395987,"byte_end":395997,"line_start":868,"line_end":868,"column_start":10,"column_end":20},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":396733,"byte_end":396743,"line_start":888,"line_end":888,"column_start":20,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6435},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":396971,"byte_end":396986,"line_start":896,"line_end":896,"column_start":20,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6419},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":397148,"byte_end":397163,"line_start":903,"line_end":903,"column_start":10,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":399036,"byte_end":399049,"line_start":950,"line_end":950,"column_start":20,"column_end":33},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6391},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":399211,"byte_end":399224,"line_start":957,"line_end":957,"column_start":10,"column_end":23},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":400598,"byte_end":400607,"line_start":993,"line_end":993,"column_start":20,"column_end":29},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":400946,"byte_end":400955,"line_start":1004,"line_end":1004,"column_start":20,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6400},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":401118,"byte_end":401127,"line_start":1011,"line_end":1011,"column_start":10,"column_end":19},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":401603,"byte_end":401612,"line_start":1025,"line_end":1025,"column_start":20,"column_end":29},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6428},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":404338,"byte_end":404341,"line_start":1099,"line_end":1099,"column_start":20,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6425},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":404611,"byte_end":404617,"line_start":1109,"line_end":1109,"column_start":20,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":2,"index":40562},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405135,"byte_end":405144,"line_start":1129,"line_end":1129,"column_start":23,"column_end":32},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6416},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405419,"byte_end":405428,"line_start":1138,"line_end":1138,"column_start":23,"column_end":32},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":6374},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":405798,"byte_end":405805,"line_start":1149,"line_end":1149,"column_start":23,"column_end":30},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":6406},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":406269,"byte_end":406282,"line_start":1163,"line_end":1163,"column_start":23,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":6411},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":406616,"byte_end":406626,"line_start":1173,"line_end":1173,"column_start":23,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6379},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407441,"byte_end":407450,"line_start":1194,"line_end":1194,"column_start":23,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6398},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407652,"byte_end":407661,"line_start":1201,"line_end":1201,"column_start":23,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6422},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":407935,"byte_end":407943,"line_start":1210,"line_end":1210,"column_start":23,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6403},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408171,"byte_end":408186,"line_start":1217,"line_end":1217,"column_start":23,"column_end":38},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6419},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408430,"byte_end":408443,"line_start":1225,"line_end":1225,"column_start":23,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":6391},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408688,"byte_end":408697,"line_start":1233,"line_end":1233,"column_start":23,"column_end":32},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":6388},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":408970,"byte_end":408979,"line_start":1242,"line_end":1242,"column_start":23,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":6400},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409252,"byte_end":409261,"line_start":1251,"line_end":1251,"column_start":23,"column_end":32},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6394},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409469,"byte_end":409478,"line_start":1258,"line_end":1258,"column_start":23,"column_end":32},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6396},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":409673,"byte_end":409683,"line_start":1265,"line_end":1265,"column_start":23,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":6435},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410073,"byte_end":410082,"line_start":1278,"line_end":1278,"column_start":23,"column_end":32},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6428},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410476,"byte_end":410484,"line_start":1290,"line_end":1290,"column_start":23,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":6432},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ty.rs","byte_start":410731,"byte_end":410734,"line_start":1298,"line_end":1298,"column_start":23,"column_end":26},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6425},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":411397,"byte_end":411401,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6442},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412060,"byte_end":412071,"line_start":42,"line_end":42,"column_start":21,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6445},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":412988,"byte_end":413001,"line_start":77,"line_end":77,"column_start":18,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6448},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":413073,"byte_end":413086,"line_start":83,"line_end":83,"column_start":6,"column_end":19},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417455,"byte_end":417459,"line_start":219,"line_end":219,"column_start":20,"column_end":24},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":6442},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":417654,"byte_end":417669,"line_start":226,"line_end":226,"column_start":20,"column_end":35},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":6457},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":422078,"byte_end":422108,"line_start":359,"line_end":359,"column_start":20,"column_end":50},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6473},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423046,"byte_end":423075,"line_start":386,"line_end":386,"column_start":20,"column_end":49},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":6486},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423502,"byte_end":423513,"line_start":398,"line_end":398,"column_start":20,"column_end":31},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":6445},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":423642,"byte_end":423653,"line_start":404,"line_end":404,"column_start":10,"column_end":21},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":6445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":424621,"byte_end":424628,"line_start":431,"line_end":431,"column_start":20,"column_end":27},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":6478},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":425790,"byte_end":425794,"line_start":471,"line_end":471,"column_start":10,"column_end":14},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":6442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":433947,"byte_end":433951,"line_start":694,"line_end":694,"column_start":23,"column_end":27},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":6442},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434201,"byte_end":434212,"line_start":702,"line_end":702,"column_start":23,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6445},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434455,"byte_end":434468,"line_start":710,"line_end":710,"column_start":23,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6448},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":434961,"byte_end":434976,"line_start":725,"line_end":725,"column_start":23,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6457},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":436191,"byte_end":436221,"line_start":753,"line_end":753,"column_start":23,"column_end":53},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6473},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":437849,"byte_end":437856,"line_start":794,"line_end":794,"column_start":23,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6478},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":438137,"byte_end":438147,"line_start":803,"line_end":803,"column_start":23,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6482},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/path.rs","byte_start":438435,"byte_end":438464,"line_start":812,"line_end":812,"column_start":23,"column_end":52},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6486},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":441506,"byte_end":441517,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":444631,"byte_end":444637,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":445224,"byte_end":445239,"line_start":131,"line_end":131,"column_start":30,"column_end":45},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2069},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453050,"byte_end":453056,"line_start":340,"line_end":340,"column_start":19,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453084,"byte_end":453090,"line_start":342,"line_end":342,"column_start":20,"column_end":26},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453166,"byte_end":453172,"line_start":348,"line_end":348,"column_start":17,"column_end":23},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453204,"byte_end":453210,"line_start":350,"line_end":350,"column_start":24,"column_end":30},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/buffer.rs","byte_start":453321,"byte_end":453327,"line_start":356,"line_end":356,"column_start":25,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2061},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":454622,"byte_end":454628,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":454790,"byte_end":454796,"line_start":19,"line_end":19,"column_start":27,"column_end":33},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":454916,"byte_end":454922,"line_start":26,"line_end":26,"column_start":30,"column_end":36},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455071,"byte_end":455076,"line_start":34,"line_end":34,"column_start":31,"column_end":36},"kind":{"Impl":{"id":261}},"from":{"krate":2,"index":7989},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455118,"byte_end":455122,"line_start":35,"line_end":35,"column_start":36,"column_end":40},"kind":{"Impl":{"id":262}},"from":{"krate":2,"index":10915},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455168,"byte_end":455175,"line_start":36,"line_end":36,"column_start":36,"column_end":43},"kind":{"Impl":{"id":263}},"from":{"krate":2,"index":10939},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455222,"byte_end":455230,"line_start":37,"line_end":37,"column_start":37,"column_end":45},"kind":{"Impl":{"id":264}},"from":{"krate":2,"index":40620},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/drops.rs","byte_start":455277,"byte_end":455285,"line_start":38,"line_end":38,"column_start":37,"column_end":45},"kind":{"Impl":{"id":265}},"from":{"krate":2,"index":40620},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456510,"byte_end":456515,"line_start":18,"line_end":18,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":2178}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":456527,"byte_end":456533,"line_start":18,"line_end":18,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":2196},"to":{"krate":0,"index":2178}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":458865,"byte_end":458870,"line_start":89,"line_end":89,"column_start":19,"column_end":24},"kind":{"Impl":{"id":266}},"from":{"krate":21,"index":1070},"to":{"krate":0,"index":2178}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459350,"byte_end":459356,"line_start":107,"line_end":107,"column_start":24,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":2925}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459428,"byte_end":459436,"line_start":111,"line_end":111,"column_start":31,"column_end":39},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2200},"to":{"krate":0,"index":176}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459618,"byte_end":459624,"line_start":121,"line_end":121,"column_start":37,"column_end":43},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":2807}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459717,"byte_end":459722,"line_start":128,"line_end":128,"column_start":21,"column_end":26},"kind":{"Impl":{"id":270}},"from":{"krate":21,"index":1070},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459794,"byte_end":459800,"line_start":133,"line_end":133,"column_start":19,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2198},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/ext.rs","byte_start":459823,"byte_end":459829,"line_start":134,"line_end":134,"column_start":20,"column_end":26},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2198},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":461568,"byte_end":461578,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":471741,"byte_end":471751,"line_start":372,"line_end":372,"column_start":22,"column_end":32},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473226,"byte_end":473236,"line_start":437,"line_end":437,"column_start":32,"column_end":42},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":8282}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473437,"byte_end":473447,"line_start":448,"line_end":448,"column_start":26,"column_end":36},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":8295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473652,"byte_end":473662,"line_start":459,"line_end":459,"column_start":41,"column_end":51},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":8282}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":473859,"byte_end":473869,"line_start":467,"line_end":467,"column_start":35,"column_end":45},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":8295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":474574,"byte_end":474584,"line_start":490,"line_end":490,"column_start":29,"column_end":39},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":8286}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475372,"byte_end":475382,"line_start":523,"line_end":523,"column_start":24,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":475773,"byte_end":475778,"line_start":539,"line_end":539,"column_start":29,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2333},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476167,"byte_end":476172,"line_start":554,"line_end":554,"column_start":40,"column_end":45},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2333},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476434,"byte_end":476439,"line_start":563,"line_end":563,"column_start":38,"column_end":43},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2333},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":476587,"byte_end":476592,"line_start":570,"line_end":570,"column_start":26,"column_end":31},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2333},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477092,"byte_end":477100,"line_start":589,"line_end":589,"column_start":29,"column_end":37},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2365},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477497,"byte_end":477505,"line_start":604,"line_end":604,"column_start":40,"column_end":48},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2365},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":477767,"byte_end":477775,"line_start":613,"line_end":613,"column_start":38,"column_end":46},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2365},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478166,"byte_end":478175,"line_start":629,"line_end":629,"column_start":25,"column_end":34},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478548,"byte_end":478557,"line_start":644,"line_end":644,"column_start":36,"column_end":45},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478811,"byte_end":478820,"line_start":653,"line_end":653,"column_start":34,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":478931,"byte_end":478940,"line_start":659,"line_end":659,"column_start":22,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2392},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479374,"byte_end":479382,"line_start":681,"line_end":681,"column_start":22,"column_end":30},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479620,"byte_end":479628,"line_start":693,"line_end":693,"column_start":33,"column_end":41},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479756,"byte_end":479764,"line_start":699,"line_end":699,"column_start":31,"column_end":39},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":479851,"byte_end":479859,"line_start":705,"line_end":705,"column_start":19,"column_end":27},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2419},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480518,"byte_end":480537,"line_start":729,"line_end":729,"column_start":5,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":8330},"to":{"krate":0,"index":2440}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480554,"byte_end":480571,"line_start":729,"line_end":729,"column_start":41,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":8355},"to":{"krate":0,"index":2440}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":480816,"byte_end":480827,"line_start":739,"line_end":739,"column_start":32,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2444},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481164,"byte_end":481168,"line_start":754,"line_end":754,"column_start":23,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481310,"byte_end":481314,"line_start":762,"line_end":762,"column_start":26,"column_end":30},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481564,"byte_end":481568,"line_start":774,"line_end":774,"column_start":37,"column_end":41},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481704,"byte_end":481708,"line_start":780,"line_end":780,"column_start":35,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":481809,"byte_end":481820,"line_start":786,"line_end":786,"column_start":29,"column_end":40},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482066,"byte_end":482077,"line_start":797,"line_end":797,"column_start":40,"column_end":51},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482294,"byte_end":482305,"line_start":805,"line_end":805,"column_start":38,"column_end":49},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482453,"byte_end":482464,"line_start":812,"line_end":812,"column_start":26,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":482660,"byte_end":482661,"line_start":821,"line_end":821,"column_start":37,"column_end":38},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2503},"to":{"krate":0,"index":2440}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483277,"byte_end":483296,"line_start":845,"line_end":845,"column_start":5,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":8330},"to":{"krate":0,"index":2509}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483317,"byte_end":483334,"line_start":845,"line_end":845,"column_start":45,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":8355},"to":{"krate":0,"index":2509}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483512,"byte_end":483526,"line_start":854,"line_end":854,"column_start":32,"column_end":46},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2512},"to":{"krate":0,"index":2140}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":483859,"byte_end":483866,"line_start":868,"line_end":868,"column_start":26,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2505},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484120,"byte_end":484127,"line_start":880,"line_end":880,"column_start":37,"column_end":44},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2505},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484263,"byte_end":484270,"line_start":886,"line_end":886,"column_start":35,"column_end":42},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2505},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484371,"byte_end":484385,"line_start":892,"line_end":892,"column_start":29,"column_end":43},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2512},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484639,"byte_end":484653,"line_start":903,"line_end":903,"column_start":40,"column_end":54},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2512},"to":{"krate":2,"index":8330}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":484874,"byte_end":484888,"line_start":911,"line_end":911,"column_start":38,"column_end":52},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2512},"to":{"krate":2,"index":8355}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485021,"byte_end":485022,"line_start":917,"line_end":917,"column_start":40,"column_end":41},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2562},"to":{"krate":0,"index":2509}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":485428,"byte_end":485432,"line_start":935,"line_end":935,"column_start":12,"column_end":16},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":487873,"byte_end":487877,"line_start":1013,"line_end":1013,"column_start":22,"column_end":26},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2563},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":488146,"byte_end":488156,"line_start":1026,"line_end":1026,"column_start":29,"column_end":39},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":3483}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":488498,"byte_end":488508,"line_start":1041,"line_end":1041,"column_start":32,"column_end":42},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2248},"to":{"krate":2,"index":3487}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":489046,"byte_end":489056,"line_start":1061,"line_end":1061,"column_start":29,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2248},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/punctuated.rs","byte_start":489324,"byte_end":489328,"line_start":1072,"line_end":1072,"column_start":29,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2563},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493720,"byte_end":493725,"line_start":126,"line_end":126,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":493811,"byte_end":493812,"line_start":130,"line_end":130,"column_start":31,"column_end":32},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2640},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":494297,"byte_end":494306,"line_start":146,"line_end":146,"column_start":21,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5459},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_quote.rs","byte_start":494603,"byte_end":494613,"line_start":156,"line_end":156,"column_start":41,"column_end":51},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2248},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498810,"byte_end":498815,"line_start":144,"line_end":144,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":2678}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":498906,"byte_end":498907,"line_start":148,"line_end":148,"column_start":36,"column_end":37},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2681},"to":{"krate":0,"index":2678}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse_macro_input.rs","byte_start":499313,"byte_end":499326,"line_start":161,"line_end":161,"column_start":26,"column_end":39},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":365},"to":{"krate":0,"index":2678}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/spanned.rs","byte_start":503434,"byte_end":503435,"line_start":110,"line_end":110,"column_start":40,"column_end":41},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2698},"to":{"krate":0,"index":2695}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12767364,"byte_end":12767367,"line_start":8,"line_end":8,"column_start":16,"column_end":19},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6425},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12767643,"byte_end":12767673,"line_start":18,"line_end":18,"column_start":16,"column_end":46},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768477,"byte_end":12768486,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5465},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768611,"byte_end":12768620,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5465},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12768796,"byte_end":12768805,"line_start":54,"line_end":54,"column_start":16,"column_end":25},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769220,"byte_end":12769229,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6428},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769529,"byte_end":12769534,"line_start":78,"line_end":78,"column_start":15,"column_end":20},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769659,"byte_end":12769664,"line_start":81,"line_end":81,"column_start":16,"column_end":21},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12769840,"byte_end":12769847,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12770412,"byte_end":12770426,"line_start":109,"line_end":109,"column_start":16,"column_end":30},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6012},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12770807,"byte_end":12770817,"line_start":121,"line_end":121,"column_start":16,"column_end":26},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5995},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771311,"byte_end":12771321,"line_start":136,"line_end":136,"column_start":16,"column_end":26},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6482},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771622,"byte_end":12771626,"line_start":147,"line_end":147,"column_start":16,"column_end":20},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12771964,"byte_end":12771972,"line_start":158,"line_end":158,"column_start":16,"column_end":24},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6196},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772285,"byte_end":12772295,"line_start":169,"line_end":169,"column_start":16,"column_end":26},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772608,"byte_end":12772617,"line_start":180,"line_end":180,"column_start":16,"column_end":25},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12772878,"byte_end":12772889,"line_start":190,"line_end":190,"column_start":16,"column_end":27},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6170},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12773278,"byte_end":12773282,"line_start":203,"line_end":203,"column_start":16,"column_end":20},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5571},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12778633,"byte_end":12778643,"line_start":342,"line_end":342,"column_start":16,"column_end":26},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12779914,"byte_end":12779922,"line_start":388,"line_end":388,"column_start":16,"column_end":24},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5809},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12780277,"byte_end":12780285,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5814},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12781518,"byte_end":12781527,"line_start":440,"line_end":440,"column_start":16,"column_end":25},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5827},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12783038,"byte_end":12783047,"line_start":491,"line_end":491,"column_start":16,"column_end":25},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5844},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12783784,"byte_end":12783791,"line_start":516,"line_end":516,"column_start":16,"column_end":23},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5853},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12785527,"byte_end":12785536,"line_start":576,"line_end":576,"column_start":16,"column_end":25},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5872},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12785855,"byte_end":12785863,"line_start":587,"line_end":587,"column_start":16,"column_end":24},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5876},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12789269,"byte_end":12789278,"line_start":706,"line_end":706,"column_start":16,"column_end":25},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5916},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12790570,"byte_end":12790575,"line_start":752,"line_end":752,"column_start":16,"column_end":21},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5536},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12791646,"byte_end":12791652,"line_start":789,"line_end":789,"column_start":16,"column_end":22},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5515},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12792011,"byte_end":12792022,"line_start":800,"line_end":800,"column_start":16,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5530},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12792306,"byte_end":12792319,"line_start":810,"line_end":810,"column_start":16,"column_end":29},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5533},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12795389,"byte_end":12795404,"line_start":908,"line_end":908,"column_start":16,"column_end":31},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6457},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12796372,"byte_end":12796384,"line_start":931,"line_end":931,"column_start":16,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5965},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12796797,"byte_end":12796805,"line_start":942,"line_end":942,"column_start":16,"column_end":24},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5960},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12799630,"byte_end":12799635,"line_start":1028,"line_end":1028,"column_start":16,"column_end":21},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5939},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12808937,"byte_end":12808948,"line_start":1314,"line_end":1314,"column_start":16,"column_end":27},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5990},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12809268,"byte_end":12809271,"line_start":1325,"line_end":1325,"column_start":16,"column_end":19},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12809842,"byte_end":12809849,"line_start":1340,"line_end":1340,"column_start":16,"column_end":23},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6128},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12810490,"byte_end":12810495,"line_start":1363,"line_end":1363,"column_start":16,"column_end":21},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6155},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12810857,"byte_end":12810871,"line_start":1375,"line_end":1375,"column_start":16,"column_end":30},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811296,"byte_end":12811302,"line_start":1386,"line_end":1386,"column_start":16,"column_end":22},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5932},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811619,"byte_end":12811623,"line_start":1396,"line_end":1396,"column_start":16,"column_end":20},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5471},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12811988,"byte_end":12811996,"line_start":1407,"line_end":1407,"column_start":16,"column_end":24},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5489},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12812316,"byte_end":12812329,"line_start":1418,"line_end":1418,"column_start":16,"column_end":29},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5493},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12813010,"byte_end":12813020,"line_start":1441,"line_end":1441,"column_start":16,"column_end":26},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5497},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12813343,"byte_end":12813372,"line_start":1451,"line_end":1451,"column_start":16,"column_end":45},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6486},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12819421,"byte_end":12819425,"line_start":1656,"line_end":1656,"column_start":16,"column_end":20},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6442},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12819712,"byte_end":12819725,"line_start":1666,"line_end":1666,"column_start":16,"column_end":29},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6448},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820187,"byte_end":12820198,"line_start":1679,"line_end":1679,"column_start":16,"column_end":27},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6445},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820478,"byte_end":12820489,"line_start":1689,"line_end":1689,"column_start":16,"column_end":27},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6071},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12820810,"byte_end":12820827,"line_start":1700,"line_end":1700,"column_start":16,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12821164,"byte_end":12821177,"line_start":1711,"line_end":1711,"column_start":16,"column_end":29},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6062},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12821561,"byte_end":12821566,"line_start":1723,"line_end":1723,"column_start":16,"column_end":21},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6490},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12822597,"byte_end":12822607,"line_start":1758,"line_end":1758,"column_start":16,"column_end":26},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6435},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824001,"byte_end":12824011,"line_start":1799,"line_end":1799,"column_start":16,"column_end":26},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6030},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824383,"byte_end":12824401,"line_start":1811,"line_end":1811,"column_start":15,"column_end":33},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12824526,"byte_end":12824544,"line_start":1814,"line_end":1814,"column_start":16,"column_end":34},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12827002,"byte_end":12827006,"line_start":1890,"line_end":1890,"column_start":16,"column_end":20},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6298},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12828144,"byte_end":12828153,"line_start":1915,"line_end":1915,"column_start":16,"column_end":25},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6374},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12828521,"byte_end":12828531,"line_start":1927,"line_end":1927,"column_start":16,"column_end":26},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6379},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829074,"byte_end":12829083,"line_start":1943,"line_end":1943,"column_start":16,"column_end":25},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6388},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829363,"byte_end":12829376,"line_start":1953,"line_end":1953,"column_start":16,"column_end":29},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6391},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829662,"byte_end":12829671,"line_start":1963,"line_end":1963,"column_start":16,"column_end":25},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6394},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12829924,"byte_end":12829933,"line_start":1972,"line_end":1972,"column_start":16,"column_end":25},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6396},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830139,"byte_end":12830148,"line_start":1979,"line_end":1979,"column_start":16,"column_end":25},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6398},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830389,"byte_end":12830398,"line_start":1988,"line_end":1988,"column_start":16,"column_end":25},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5983},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12830848,"byte_end":12830862,"line_start":2002,"line_end":2002,"column_start":16,"column_end":30},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6017},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831213,"byte_end":12831222,"line_start":2012,"line_end":2012,"column_start":16,"column_end":25},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6400},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831502,"byte_end":12831510,"line_start":2022,"line_end":2022,"column_start":16,"column_end":24},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6403},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12831777,"byte_end":12831784,"line_start":2032,"line_end":2032,"column_start":16,"column_end":23},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6406},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832160,"byte_end":12832173,"line_start":2044,"line_end":2044,"column_start":16,"column_end":29},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6411},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832547,"byte_end":12832556,"line_start":2056,"line_end":2056,"column_start":16,"column_end":25},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12832840,"byte_end":12832855,"line_start":2066,"line_end":2066,"column_start":16,"column_end":31},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833141,"byte_end":12833150,"line_start":2076,"line_end":2076,"column_start":16,"column_end":25},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833431,"byte_end":12833435,"line_start":2086,"line_end":2086,"column_start":15,"column_end":19},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6288},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12833560,"byte_end":12833564,"line_start":2089,"line_end":2089,"column_start":16,"column_end":20},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6288},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12835519,"byte_end":12835527,"line_start":2159,"line_end":2159,"column_start":16,"column_end":24},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6432},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12835794,"byte_end":12835801,"line_start":2169,"line_end":2169,"column_start":16,"column_end":23},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5510},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836163,"byte_end":12836171,"line_start":2181,"line_end":2181,"column_start":16,"column_end":24},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836413,"byte_end":12836422,"line_start":2190,"line_end":2190,"column_start":16,"column_end":25},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5562},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12836661,"byte_end":12836674,"line_start":2199,"line_end":2199,"column_start":16,"column_end":29},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5566},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837050,"byte_end":12837060,"line_start":2211,"line_end":2211,"column_start":16,"column_end":26},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5542},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837529,"byte_end":12837540,"line_start":2223,"line_end":2223,"column_start":16,"column_end":27},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6041},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/gen/clone.rs","byte_start":12837834,"byte_end":12837848,"line_start":2233,"line_end":2233,"column_start":16,"column_end":30},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6044},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/sealed.rs","byte_start":525070,"byte_end":525074,"line_start":3,"line_end":3,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3189},"to":{"krate":0,"index":2807}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525193,"byte_end":525197,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"kind":{"Impl":{"id":410}},"from":{"krate":21,"index":1003},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525293,"byte_end":525297,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"kind":{"Impl":{"id":411}},"from":{"krate":21,"index":1003},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525399,"byte_end":525403,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"kind":{"Impl":{"id":412}},"from":{"krate":21,"index":1003},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/span.rs","byte_start":525839,"byte_end":525844,"line_start":44,"line_end":44,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":2842}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":526642,"byte_end":526653,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":526768,"byte_end":526779,"line_start":15,"line_end":15,"column_start":31,"column_end":42},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":526795,"byte_end":526806,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":2868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/thread.rs","byte_start":527152,"byte_end":527163,"line_start":34,"line_end":34,"column_start":26,"column_end":37},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":530051,"byte_end":530061,"line_start":88,"line_end":88,"column_start":10,"column_end":20},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532252,"byte_end":532258,"line_start":147,"line_end":147,"column_start":17,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":2807},"to":{"krate":0,"index":2925}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532389,"byte_end":532390,"line_start":153,"line_end":153,"column_start":61,"column_end":62},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":2928},"to":{"krate":0,"index":2925}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532466,"byte_end":532477,"line_start":159,"line_end":159,"column_start":26,"column_end":37},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":2931},"to":{"krate":0,"index":2812}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/lookahead.rs","byte_start":532713,"byte_end":532714,"line_start":169,"line_end":169,"column_start":63,"column_end":64},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":2937},"to":{"krate":0,"index":2807}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/discouraged.rs","byte_start":583571,"byte_end":583582,"line_start":160,"line_end":160,"column_start":26,"column_end":37},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":3040},"to":{"krate":0,"index":2942}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":539935,"byte_end":539940,"line_start":220,"line_end":220,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":541954,"byte_end":541965,"line_start":270,"line_end":270,"column_start":19,"column_end":30},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542299,"byte_end":542310,"line_start":281,"line_end":281,"column_start":22,"column_end":33},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":542459,"byte_end":542470,"line_start":287,"line_end":287,"column_start":20,"column_end":31},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544624,"byte_end":544634,"line_start":352,"line_end":352,"column_start":24,"column_end":34},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544767,"byte_end":544777,"line_start":360,"line_end":360,"column_start":23,"column_end":33},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544813,"byte_end":544823,"line_start":362,"line_end":362,"column_start":24,"column_end":34},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":544900,"byte_end":544910,"line_start":368,"line_end":368,"column_start":14,"column_end":24},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":546203,"byte_end":546213,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":546292,"byte_end":546302,"line_start":413,"line_end":413,"column_start":16,"column_end":26},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":547771,"byte_end":547782,"line_start":464,"line_end":464,"column_start":10,"column_end":21},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569302,"byte_end":569305,"line_start":1066,"line_end":1066,"column_start":26,"column_end":29},"kind":{"Impl":{"id":432}},"from":{"krate":5,"index":421},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569492,"byte_end":569498,"line_start":1073,"line_end":1073,"column_start":34,"column_end":40},"kind":{"Impl":{"id":433}},"from":{"krate":2,"index":40562},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569753,"byte_end":569764,"line_start":1084,"line_end":1084,"column_start":16,"column_end":27},"kind":{"Impl":{"id":434}},"from":{"krate":21,"index":998},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":569968,"byte_end":569977,"line_start":1091,"line_end":1091,"column_start":16,"column_end":25},"kind":{"Impl":{"id":435}},"from":{"krate":21,"index":1009},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":570284,"byte_end":570289,"line_start":1101,"line_end":1101,"column_start":16,"column_end":21},"kind":{"Impl":{"id":436}},"from":{"krate":21,"index":1024},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":570879,"byte_end":570884,"line_start":1117,"line_end":1117,"column_start":16,"column_end":21},"kind":{"Impl":{"id":437}},"from":{"krate":21,"index":1048},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571199,"byte_end":571206,"line_start":1127,"line_end":1127,"column_start":16,"column_end":23},"kind":{"Impl":{"id":438}},"from":{"krate":21,"index":1075},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":571748,"byte_end":571753,"line_start":1143,"line_end":1143,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3150}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":573967,"byte_end":573968,"line_start":1203,"line_end":1203,"column_start":23,"column_end":24},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3160},"to":{"krate":0,"index":3150}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/parse.rs","byte_start":576370,"byte_end":576377,"line_start":1284,"line_end":1284,"column_start":16,"column_end":23},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3170},"to":{"krate":0,"index":3036}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/print.rs","byte_start":586449,"byte_end":586464,"line_start":6,"line_end":6,"column_start":26,"column_end":41},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":3204},"to":{"krate":23,"index":117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":589919,"byte_end":589924,"line_start":105,"line_end":105,"column_start":6,"column_end":11},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":595414,"byte_end":595426,"line_start":255,"line_end":255,"column_start":6,"column_end":18},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597277,"byte_end":597282,"line_start":312,"line_end":312,"column_start":16,"column_end":21},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597694,"byte_end":597706,"line_start":328,"line_end":328,"column_start":16,"column_end":28},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3277},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":597847,"byte_end":597852,"line_start":334,"line_end":334,"column_start":18,"column_end":23},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598001,"byte_end":598006,"line_start":340,"line_end":340,"column_start":16,"column_end":21},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598134,"byte_end":598146,"line_start":348,"line_end":348,"column_start":16,"column_end":28},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3277},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598601,"byte_end":598606,"line_start":364,"line_end":364,"column_start":28,"column_end":33},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3275},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598635,"byte_end":598640,"line_start":366,"line_end":366,"column_start":25,"column_end":30},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":598755,"byte_end":598760,"line_start":372,"line_end":372,"column_start":23,"column_end":28},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":8286}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599033,"byte_end":599041,"line_start":387,"line_end":387,"column_start":19,"column_end":27},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3319},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599512,"byte_end":599516,"line_start":412,"line_end":412,"column_start":23,"column_end":27},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":3329},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.105/src/error.rs","byte_start":599717,"byte_end":599722,"line_start":422,"line_end":422,"column_start":24,"column_end":29},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":8295}}]}