{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10","program":"/Users/alexbilson/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","toml","--edition=2018","/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=91a547480a22f4c6","-C","extra-filename=-91a547480a22f4c6","--out-dir","/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps","-L","dependency=/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps","--extern","serde=/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps/libserde-20315e1e92cb7437.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/alexbilson/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/alexbilson/source/chaos-webhook/tagparser_r/target/rls/debug/deps/libtoml-91a547480a22f4c6.rmeta"},"prelude":{"crate_id":{"name":"toml","disambiguator":[9391673306178500718,0]},"crate_root":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src","external_crates":[{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12487381855063813090,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13467426375328407781,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8659080599643642399,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1796284392260788893,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6983393744351521083,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3250764090425844219,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18067812386044263164,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6811782277583973308,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[17503089037827845404,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15332210557822847131,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[9019949222091243314,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17527021512170473469,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[9435842560075755921,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4270248722430337885,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[17099984453502544643,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[9380643280414578943,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15215801742335923154,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[2627650859626512514,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12189808815098789143,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","num":20,"id":{"name":"serde","disambiguator":[4131947796619601682,0]}},{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","num":21,"id":{"name":"serde_derive","disambiguator":[12523761373334266852,0]}}],"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":0,"byte_end":4627,"line_start":1,"line_end":176,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1795},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21510,"byte_end":21514,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1776},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21516,"byte_end":21524,"line_start":16,"line_end":16,"column_start":33,"column_end":41},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1789},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21526,"byte_end":21544,"line_start":16,"line_end":16,"column_start":43,"column_end":61},"alias_span":null,"name":"DatetimeParseError","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21546,"byte_end":21552,"line_start":16,"line_end":16,"column_start":63,"column_end":69},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1808},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21554,"byte_end":21558,"line_start":16,"line_end":16,"column_start":71,"column_end":75},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21583,"byte_end":21588,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21590,"byte_end":21593,"line_start":18,"line_end":18,"column_start":29,"column_end":32},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1674},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4200,"byte_end":4205,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4274,"byte_end":4283,"line_start":160,"line_end":160,"column_start":22,"column_end":31},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":655},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4285,"byte_end":4301,"line_start":160,"line_end":160,"column_start":33,"column_end":49},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4303,"byte_end":4309,"line_start":160,"line_end":160,"column_start":51,"column_end":57},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4311,"byte_end":4321,"line_start":160,"line_end":160,"column_start":59,"column_end":69},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4374,"byte_end":4384,"line_start":163,"line_end":163,"column_start":21,"column_end":31},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4386,"byte_end":4394,"line_start":163,"line_end":163,"column_start":33,"column_end":41},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4396,"byte_end":4408,"line_start":163,"line_end":163,"column_start":43,"column_end":55},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1588},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/macros.rs","byte_start":220724,"byte_end":220735,"line_start":1,"line_end":1,"column_start":21,"column_end":32},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1514}},{"kind":"Use","ref_id":{"krate":20,"index":1806},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/macros.rs","byte_start":220737,"byte_end":220753,"line_start":1,"line_end":1,"column_start":34,"column_end":50},"alias_span":null,"name":"IntoDeserializer","value":"","parent":{"krate":0,"index":1514}},{"kind":"Use","ref_id":{"krate":0,"index":2462},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4493,"byte_end":4500,"line_start":170,"line_end":170,"column_start":25,"column_end":32},"alias_span":null,"name":"Spanned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":0,"byte_end":4627,"line_start":1,"line_end":176,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":188},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":624},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1514},{"krate":0,"index":1538},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619}],"decl_id":null,"docs":" A [serde]-compatible [TOML]-parsing library","sig":null,"attributes":[{"value":"/ A [serde]-compatible [TOML]-parsing library","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":0,"byte_end":47,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":48,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ TOML itself is a simple, ergonomic, and readable configuration format:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":52,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":127,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":131,"byte_end":142,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ [package]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":143,"byte_end":156,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/ name = \"toml\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":157,"byte_end":174,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"/ version = \"0.4.2\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":175,"byte_end":196,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/ authors = [\"Alex Crichton <alex@alexcrichton.com>\"]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":197,"byte_end":252,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":253,"byte_end":256,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [dependencies]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":257,"byte_end":275,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ serde = \"1.0\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":276,"byte_end":293,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":294,"byte_end":301,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":302,"byte_end":305,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The TOML format tends to be relatively common throughout the Rust community","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":306,"byte_end":385,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ for configuration, notably being used by [Cargo], Rust's package manager.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":386,"byte_end":463,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":464,"byte_end":467,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## TOML values","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":468,"byte_end":486,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":487,"byte_end":490,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ A value in TOML is represented with the [`Value`] enum in this crate:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":491,"byte_end":564,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":565,"byte_end":568,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":569,"byte_end":587,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ pub enum Value {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":588,"byte_end":608,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/     String(String),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":609,"byte_end":632,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     Integer(i64),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":633,"byte_end":654,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     Float(f64),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":655,"byte_end":674,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/     Boolean(bool),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":675,"byte_end":697,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/     Datetime(Datetime),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":698,"byte_end":725,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/     Array(Array),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":726,"byte_end":747,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     Table(Table),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":748,"byte_end":769,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":770,"byte_end":775,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":776,"byte_end":783,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":784,"byte_end":787,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ TOML is similar to JSON with the notable addition of a [`Datetime`]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":788,"byte_end":859,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ type. In general, TOML and JSON are interchangeable in terms of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":860,"byte_end":927,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ formats.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":928,"byte_end":940,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":941,"byte_end":944,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Parsing TOML","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":945,"byte_end":964,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":965,"byte_end":968,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The easiest way to parse a TOML document is via the [`Value`] type:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":969,"byte_end":1040,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1041,"byte_end":1044,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1045,"byte_end":1056,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/ use toml::Value;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1057,"byte_end":1077,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1078,"byte_end":1081,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = \"foo = 'bar'\".parse::<Value>().unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1082,"byte_end":1138,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1139,"byte_end":1142,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(value[\"foo\"].as_str(), Some(\"bar\"));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1143,"byte_end":1194,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1195,"byte_end":1202,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1203,"byte_end":1206,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The [`Value`] type implements a number of convenience methods and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1207,"byte_end":1276,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ traits; the example above uses [`FromStr`] to parse a [`str`] into a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1277,"byte_end":1349,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ [`Value`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1350,"byte_end":1364,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1365,"byte_end":1368,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Deserialization and Serialization","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1369,"byte_end":1409,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1410,"byte_end":1413,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This crate supports [`serde`] 1.0 with a number of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1414,"byte_end":1468,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/ implementations of the `Deserialize`, `Serialize`, `Deserializer`, and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1469,"byte_end":1543,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ `Serializer` traits. Namely, you'll find:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1544,"byte_end":1589,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1590,"byte_end":1593,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * `Deserialize for Value`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1594,"byte_end":1623,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"/ * `Serialize for Value`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1624,"byte_end":1651,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/ * `Deserialize for Datetime`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1652,"byte_end":1684,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ * `Serialize for Datetime`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1685,"byte_end":1715,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/ * `Deserializer for de::Deserializer`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1716,"byte_end":1757,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/ * `Serializer for ser::Serializer`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1758,"byte_end":1796,"line_start":65,"line_end":65,"column_start":1,"column_end":39}},{"value":"/ * `Deserializer for Value`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1797,"byte_end":1827,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1828,"byte_end":1831,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This means that you can use Serde to deserialize/serialize the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1832,"byte_end":1898,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ [`Value`] type as well as the [`Datetime`] type in this crate. You can also","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1899,"byte_end":1978,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ use the [`Deserializer`], [`Serializer`], or [`Value`] type itself to act as","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":1979,"byte_end":2059,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ a deserializer/serializer for arbitrary types.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2060,"byte_end":2110,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2111,"byte_end":2114,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ An example of deserializing with TOML is:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2115,"byte_end":2160,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2161,"byte_end":2164,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2165,"byte_end":2176,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2177,"byte_end":2211,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2212,"byte_end":2215,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2216,"byte_end":2242,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2243,"byte_end":2262,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2263,"byte_end":2282,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2283,"byte_end":2309,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2310,"byte_end":2329,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2330,"byte_end":2335,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2336,"byte_end":2339,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2340,"byte_end":2366,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/ struct Keys {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2367,"byte_end":2384,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2385,"byte_end":2408,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2409,"byte_end":2440,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2441,"byte_end":2446,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2447,"byte_end":2450,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2451,"byte_end":2466,"line_start":91,"line_end":91,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2467,"byte_end":2514,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/         ip = '127.0.0.1'","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2515,"byte_end":2543,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2544,"byte_end":2547,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/         [keys]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2548,"byte_end":2566,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/         github = 'xxxxxxxxxxxxxxxxx'","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2567,"byte_end":2607,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/         travis = 'yyyyyyyyyyyyyyyyy'","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2608,"byte_end":2648,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"/     \"#).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2649,"byte_end":2670,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2671,"byte_end":2674,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.ip, \"127.0.0.1\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2675,"byte_end":2718,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(config.port, None);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2719,"byte_end":2757,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(config.keys.github, \"xxxxxxxxxxxxxxxxx\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2758,"byte_end":2818,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(config.keys.travis.as_ref().unwrap(), \"yyyyyyyyyyyyyyyyy\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2819,"byte_end":2897,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2898,"byte_end":2903,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2904,"byte_end":2911,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2912,"byte_end":2915,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ You can serialize types in a similar fashion:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2916,"byte_end":2965,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2966,"byte_end":2969,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2970,"byte_end":2981,"line_start":109,"line_end":109,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":2982,"byte_end":3014,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3015,"byte_end":3018,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3019,"byte_end":3043,"line_start":112,"line_end":112,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3044,"byte_end":3063,"line_start":113,"line_end":113,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3064,"byte_end":3083,"line_start":114,"line_end":114,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3084,"byte_end":3110,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3111,"byte_end":3130,"line_start":116,"line_end":116,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3131,"byte_end":3136,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3137,"byte_end":3140,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3141,"byte_end":3165,"line_start":119,"line_end":119,"column_start":1,"column_end":25}},{"value":"/ struct Keys {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3166,"byte_end":3183,"line_start":120,"line_end":120,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3184,"byte_end":3207,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3208,"byte_end":3239,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3240,"byte_end":3245,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3246,"byte_end":3249,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3250,"byte_end":3265,"line_start":125,"line_end":125,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3266,"byte_end":3295,"line_start":126,"line_end":126,"column_start":1,"column_end":30}},{"value":"/         ip: \"127.0.0.1\".to_string(),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3296,"byte_end":3336,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/         port: None,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3337,"byte_end":3360,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/         keys: Keys {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3361,"byte_end":3385,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/             github: \"xxxxxxxxxxxxxxxxx\".to_string(),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3386,"byte_end":3442,"line_start":130,"line_end":130,"column_start":1,"column_end":57}},{"value":"/             travis: Some(\"yyyyyyyyyyyyyyyyy\".to_string()),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3443,"byte_end":3505,"line_start":131,"line_end":131,"column_start":1,"column_end":63}},{"value":"/         },","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3506,"byte_end":3520,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3521,"byte_end":3531,"line_start":133,"line_end":133,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3532,"byte_end":3535,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3536,"byte_end":3589,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3590,"byte_end":3595,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3596,"byte_end":3603,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3604,"byte_end":3607,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [TOML]: https://github.com/toml-lang/toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3608,"byte_end":3653,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ [Cargo]: https://crates.io/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3654,"byte_end":3685,"line_start":140,"line_end":140,"column_start":1,"column_end":32}},{"value":"/ [`serde`]: https://serde.rs/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3686,"byte_end":3718,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [serde]: https://serde.rs/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3719,"byte_end":3749,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3751,"byte_end":3773,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":3774,"byte_end":3800,"line_start":145,"line_end":145,"column_start":1,"column_end":27}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4107,"byte_end":4130,"line_start":150,"line_end":150,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":1622},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":1633},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":1644},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":1652},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":1663},{"krate":0,"index":1668},{"krate":0,"index":1671}],"decl_id":null,"docs":" A map of String to toml::Value.","sig":null,"attributes":[{"value":"/ A map of String to toml::Value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":4968,"byte_end":5003,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5004,"byte_end":5007,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ By default the map is backed by a [`BTreeMap`]. Enable the `preserve_order`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5008,"byte_end":5087,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ feature of toml-rs to use [`LinkedHashMap`] instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5088,"byte_end":5144,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5145,"byte_end":5148,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5149,"byte_end":5229,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`LinkedHashMap`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5230,"byte_end":5328,"line_start":15,"line_end":15,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5699,"byte_end":5702,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Represents a TOML key/value type.\n","sig":null,"attributes":[{"value":"/ Represents a TOML key/value type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5650,"byte_end":5687,"line_start":31,"line_end":31,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5970,"byte_end":5973,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<String, Value>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map.\n","sig":null,"attributes":[{"value":"/ Makes a new empty Map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5918,"byte_end":5944,"line_start":42,"line_end":42,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5949,"byte_end":5958,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6182,"byte_end":6195,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Map<String, Value>>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map with the given initial capacity.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6054,"byte_end":6093,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ Makes a new empty Map with the given initial capacity.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6098,"byte_end":6156,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6161,"byte_end":6170,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6677,"byte_end":6682,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map<String, Value>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the map, removing all values.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6611,"byte_end":6651,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6656,"byte_end":6665,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6981,"byte_end":6984,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<String, Value>>::get","value":"fn get<Q>(&Self, &Q) -> Option<&Value> where Q: ?Sized, String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6732,"byte_end":6794,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6799,"byte_end":6802,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6807,"byte_end":6883,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6888,"byte_end":6955,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":6960,"byte_end":6969,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7392,"byte_end":7404,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Map<String, Value>>::contains_key","value":"fn contains_key<Q>(&Self, &Q) -> bool where Q: ?Sized, String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7138,"byte_end":7205,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7210,"byte_end":7213,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7218,"byte_end":7294,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7299,"byte_end":7366,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7371,"byte_end":7380,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7814,"byte_end":7821,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<String, Value>>::get_mut","value":"fn get_mut<Q>(&mut Self, &Q) -> Option<&mut Value> where Q: ?Sized,\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7557,"byte_end":7627,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7632,"byte_end":7635,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7640,"byte_end":7716,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7721,"byte_end":7788,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7793,"byte_end":7802,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8353,"byte_end":8359,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map<String, Value>>::insert","value":"fn insert(&mut Self, String, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":7987,"byte_end":8029,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8034,"byte_end":8037,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8042,"byte_end":8107,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8112,"byte_end":8115,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8120,"byte_end":8195,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8200,"byte_end":8271,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8276,"byte_end":8327,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8332,"byte_end":8341,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8747,"byte_end":8753,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map<String, Value>>::remove","value":"fn remove<Q>(&mut Self, &Q) -> Option<Value> where Q: ?Sized,\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8452,"byte_end":8525,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8530,"byte_end":8560,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8565,"byte_end":8568,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8573,"byte_end":8649,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8654,"byte_end":8721,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8726,"byte_end":8735,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9015,"byte_end":9020,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"entry","qualname":"<Map<String, Value>>::entry","value":"fn entry<S>(&mut Self, S) -> Entry where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place\n manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8913,"byte_end":8981,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/ manipulation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":8986,"byte_end":9003,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9603,"byte_end":9606,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"len","qualname":"<Map<String, Value>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9531,"byte_end":9577,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9582,"byte_end":9591,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9734,"byte_end":9742,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map<String, Value>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9659,"byte_end":9708,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9713,"byte_end":9722,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9874,"byte_end":9878,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"iter","qualname":"<Map<String, Value>>::iter","value":"fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9799,"byte_end":9848,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9853,"byte_end":9862,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10053,"byte_end":10061,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Map<String, Value>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets a mutable iterator over the entries of the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":9971,"byte_end":10027,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10032,"byte_end":10041,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10240,"byte_end":10244,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map<String, Value>>::keys","value":"fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10168,"byte_end":10214,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10219,"byte_end":10228,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10411,"byte_end":10417,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"values","qualname":"<Map<String, Value>>::values","value":"fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10337,"byte_end":10385,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10390,"byte_end":10399,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10573,"byte_end":10580,"line_start":205,"line_end":205,"column_start":8,"column_end":15},"name":"default","qualname":"<Map<String, Value> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10556,"byte_end":10565,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10716,"byte_end":10721,"line_start":214,"line_end":214,"column_start":8,"column_end":13},"name":"clone","qualname":"<Map<String, Value> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10699,"byte_end":10708,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10868,"byte_end":10870,"line_start":223,"line_end":223,"column_start":8,"column_end":10},"name":"eq","qualname":"<Map<String, Value> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10851,"byte_end":10860,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11182,"byte_end":11187,"line_start":237,"line_end":237,"column_start":8,"column_end":13},"name":"index","qualname":"<Map<String, Value> as std::ops::Index>::index","value":"fn index(&Self, &Q) -> &Value","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11481,"byte_end":11490,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Map<String, Value> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, &Q) -> &mut Value","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11660,"byte_end":11663,"line_start":256,"line_end":256,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<String, Value> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11643,"byte_end":11652,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11842,"byte_end":11851,"line_start":263,"line_end":263,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Map<String, Value> as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":20,"index":2128},"children":[],"decl_id":{"krate":20,"index":2129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11825,"byte_end":11834,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":12268,"byte_end":12279,"line_start":279,"line_end":279,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Map<String, Value> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":20,"index":1588},"children":[],"decl_id":{"krate":20,"index":1590},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":12251,"byte_end":12260,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":13365,"byte_end":13374,"line_start":320,"line_end":320,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Map<String, Value> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = (String, Value)>","parent":{"krate":2,"index":8282},"children":[],"decl_id":{"krate":2,"index":8284},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":13602,"byte_end":13608,"line_start":331,"line_end":331,"column_start":8,"column_end":14},"name":"extend","qualname":"<Map<String, Value> as std::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = (String, Value)>","parent":{"krate":2,"index":8295},"children":[],"decl_id":{"krate":2,"index":8297},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14953,"byte_end":14959,"line_start":378,"line_end":378,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14929,"byte_end":14948,"line_start":377,"line_end":377,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":119},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14960,"byte_end":14975,"line_start":378,"line_end":378,"column_start":12,"column_end":27},"name":"0","qualname":"::map::Entry::Vacant::0","value":"map::VacantEntry<'a>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15009,"byte_end":15017,"line_start":380,"line_end":380,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14982,"byte_end":15004,"line_start":379,"line_end":379,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":122},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15018,"byte_end":15035,"line_start":380,"line_end":380,"column_start":14,"column_end":31},"name":"0","qualname":"::map::Entry::Occupied::0","value":"map::OccupiedEntry<'a>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":115},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14913,"byte_end":14918,"line_start":376,"line_end":376,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"enum Entry<'a> { Vacant(VacantEntry), Occupied(OccupiedEntry), }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This enum is constructed from the [`entry`] method on [`Map`].","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14679,"byte_end":14759,"line_start":371,"line_end":371,"column_start":1,"column_end":81}},{"value":"/ This enum is constructed from the [`entry`] method on [`Map`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14760,"byte_end":14826,"line_start":372,"line_end":372,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14827,"byte_end":14830,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ [`entry`]: struct.Map.html#method.entry","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14831,"byte_end":14874,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/ [`Map`]: struct.Map.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":14875,"byte_end":14903,"line_start":375,"line_end":375,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15141,"byte_end":15152,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" A vacant Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A vacant Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15041,"byte_end":15094,"line_start":383,"line_end":383,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15095,"byte_end":15098,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15099,"byte_end":15129,"line_start":385,"line_end":385,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15298,"byte_end":15311,"line_start":393,"line_end":393,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" An occupied Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ An occupied Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15195,"byte_end":15251,"line_start":390,"line_end":390,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15252,"byte_end":15255,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15256,"byte_end":15286,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15887,"byte_end":15890,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15831,"byte_end":15875,"line_start":408,"line_end":408,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16195,"byte_end":16204,"line_start":418,"line_end":418,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16046,"byte_end":16120,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16125,"byte_end":16183,"line_start":417,"line_end":417,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16583,"byte_end":16597,"line_start":428,"line_end":428,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn or_insert_with<F>(Self, F) -> &'a mut Value where F: FnOnce() -> Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in the\n entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16403,"byte_end":16477,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16482,"byte_end":16556,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16561,"byte_end":16571,"line_start":427,"line_end":427,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17002,"byte_end":17005,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the VacantEntry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16870,"byte_end":16943,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ through the VacantEntry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16948,"byte_end":16976,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16981,"byte_end":16990,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17195,"byte_end":17201,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key, and returns a\n mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key, and returns a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17063,"byte_end":17136,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ mutable reference to it.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17141,"byte_end":17169,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17174,"byte_end":17183,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17388,"byte_end":17391,"line_start":458,"line_end":458,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17317,"byte_end":17362,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17367,"byte_end":17376,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17524,"byte_end":17527,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn get(&Self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17451,"byte_end":17498,"line_start":462,"line_end":462,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17503,"byte_end":17512,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17667,"byte_end":17674,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn get_mut(&mut Self) -> &mut Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17586,"byte_end":17641,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17646,"byte_end":17655,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17832,"byte_end":17840,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17745,"byte_end":17806,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17811,"byte_end":17820,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18042,"byte_end":18048,"line_start":483,"line_end":483,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn insert(&mut Self, Value) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `OccupiedEntry`'s key, and returns\n the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `OccupiedEntry`'s key, and returns","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17910,"byte_end":17985,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ the entry's old value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17990,"byte_end":18016,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18021,"byte_end":18030,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18222,"byte_end":18228,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn remove(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the map, and returns it.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18132,"byte_end":18196,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18201,"byte_end":18210,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18509,"byte_end":18518,"line_start":500,"line_end":500,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Map<String, Value> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18492,"byte_end":18501,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18669,"byte_end":18673,"line_start":508,"line_end":508,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" An iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's entries.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":18614,"byte_end":18657,"line_start":507,"line_end":507,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19193,"byte_end":19202,"line_start":525,"line_end":525,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut Map<String, Value> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19176,"byte_end":19185,"line_start":524,"line_end":524,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19367,"byte_end":19374,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" A mutable iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a toml::Map's entries.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19305,"byte_end":19355,"line_start":532,"line_end":532,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19889,"byte_end":19898,"line_start":550,"line_end":550,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Map<String, Value> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8286},"children":[],"decl_id":{"krate":2,"index":8289},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19872,"byte_end":19881,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":20065,"byte_end":20073,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" An owning iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a toml::Map's entries.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":20003,"byte_end":20053,"line_start":557,"line_end":557,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":20479,"byte_end":20483,"line_start":572,"line_end":572,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" An iterator over a toml::Map's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's keys.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":20427,"byte_end":20467,"line_start":571,"line_end":571,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":20890,"byte_end":20896,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" An iterator over a toml::Map's values.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's values.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":20836,"byte_end":20878,"line_start":585,"line_end":585,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":1674},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":308},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":357},{"krate":0,"index":389},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":483},{"krate":0,"index":489},{"krate":0,"index":495},{"krate":0,"index":501},{"krate":0,"index":509},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":524}],"decl_id":null,"docs":" Definition of a TOML value\n","sig":null,"attributes":[{"value":"/ Definition of a TOML value","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21180,"byte_end":21210,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21722,"byte_end":21728,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML string\n","sig":null,"attributes":[{"value":"/ Represents a TOML string","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21689,"byte_end":21717,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21729,"byte_end":21735,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"0","qualname":"::value::Value::String::0","value":"std::string::String","parent":{"krate":0,"index":1675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21776,"byte_end":21783,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML integer\n","sig":null,"attributes":[{"value":"/ Represents a TOML integer","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21742,"byte_end":21771,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21784,"byte_end":21787,"line_start":26,"line_end":26,"column_start":13,"column_end":16},"name":"0","qualname":"::value::Value::Integer::0","value":"i64","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21826,"byte_end":21831,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML float\n","sig":null,"attributes":[{"value":"/ Represents a TOML float","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21794,"byte_end":21821,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21832,"byte_end":21835,"line_start":28,"line_end":28,"column_start":11,"column_end":14},"name":"0","qualname":"::value::Value::Float::0","value":"f64","parent":{"krate":0,"index":1681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21876,"byte_end":21883,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML boolean\n","sig":null,"attributes":[{"value":"/ Represents a TOML boolean","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21842,"byte_end":21871,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21884,"byte_end":21888,"line_start":30,"line_end":30,"column_start":13,"column_end":17},"name":"0","qualname":"::value::Value::Boolean::0","value":"bool","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21930,"byte_end":21938,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::value::Value::Datetime","value":"Value::Datetime(Datetime)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML datetime\n","sig":null,"attributes":[{"value":"/ Represents a TOML datetime","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21895,"byte_end":21925,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21939,"byte_end":21947,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"name":"0","qualname":"::value::Value::Datetime::0","value":"datetime::Datetime","parent":{"krate":0,"index":1687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21986,"byte_end":21991,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML array\n","sig":null,"attributes":[{"value":"/ Represents a TOML array","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21954,"byte_end":21981,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21992,"byte_end":21997,"line_start":34,"line_end":34,"column_start":11,"column_end":16},"name":"0","qualname":"::value::Value::Array::0","value":"std::vec::Vec<value::Value>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22036,"byte_end":22041,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":1674},"children":[],"decl_id":null,"docs":" Represents a TOML table\n","sig":null,"attributes":[{"value":"/ Represents a TOML table","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22004,"byte_end":22031,"line_start":35,"line_end":35,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22042,"byte_end":22047,"line_start":36,"line_end":36,"column_start":11,"column_end":16},"name":"0","qualname":"::value::Value::Table::0","value":"map::Map<std::string::String, value::Value>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21677,"byte_end":21682,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"enum Value {\n    String(String),\n    Integer(i64),\n    Float(f64),\n    Boolean(bool),\n    Datetime(Datetime),\n    Array(Array),\n    Table(Table),\n}","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1693}],"decl_id":null,"docs":" Representation of a TOML value.\n","sig":null,"attributes":[{"value":"/ Representation of a TOML value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":21597,"byte_end":21632,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":253},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22136,"byte_end":22141,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Array","qualname":"::value::Array","value":"Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML array, payload of the `Value::Array` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML array, payload of the `Value::Array` variant","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22053,"byte_end":22126,"line_start":39,"line_end":39,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22356,"byte_end":22361,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Table","qualname":"::value::Table","value":"Map<String, Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML table, payload of the `Value::Table` variant.\n By default it is backed by a BTreeMap, enable the `preserve_order` feature\n to use a LinkedHashMap instead.\n","sig":null,"attributes":[{"value":"/ Type representing a TOML table, payload of the `Value::Table` variant.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22157,"byte_end":22231,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ By default it is backed by a BTreeMap, enable the `preserve_order` feature","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22232,"byte_end":22310,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ to use a LinkedHashMap instead.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22311,"byte_end":22346,"line_start":44,"line_end":44,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22667,"byte_end":22675,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Value>::try_from","value":"fn try_from<T>(T) -> Result<Value, crate::ser::Error> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `toml::Value` which is an enum that can represent\n any valid TOML data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `toml::Value` which is an enum that can represent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22402,"byte_end":22474,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ any valid TOML data.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22479,"byte_end":22503,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22508,"byte_end":22511,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22516,"byte_end":22594,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22599,"byte_end":22655,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23411,"byte_end":23419,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"try_into","qualname":"<Value>::try_into","value":"fn try_into<'de, T>(Self) -> Result<T, crate::de::Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `toml::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `toml::Value` as an instance of type `T`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22815,"byte_end":22872,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22877,"byte_end":22880,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if the structure of the `Value` does not match the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22885,"byte_end":22964,"line_start":62,"line_end":62,"column_start":5,"column_end":84}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22969,"byte_end":23043,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ `Value` contains something other than a TOML table. It can also fail if the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23048,"byte_end":23127,"line_start":64,"line_end":64,"column_start":5,"column_end":84}},{"value":"/ structure is correct but `T`'s implementation of `Deserialize` decides that","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23132,"byte_end":23211,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ something is wrong with the data, for example required struct fields are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23216,"byte_end":23292,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ missing from the TOML map or some number is too big to fit in the expected","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23297,"byte_end":23375,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ primitive type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23380,"byte_end":23399,"line_start":68,"line_end":68,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24059,"byte_end":24062,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"fn get<I>(&Self, I) -> Option<&Value> where I: Index","parent":null,"children":[],"decl_id":null,"docs":" Index into a TOML array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a TOML array or map. A string index can be used to access a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23568,"byte_end":23642,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23647,"byte_end":23723,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23728,"byte_end":23738,"line_start":78,"line_end":78,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23743,"byte_end":23746,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23751,"byte_end":23822,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23827,"byte_end":23902,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23907,"byte_end":23981,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":23986,"byte_end":24047,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24646,"byte_end":24653,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"fn get_mut<I>(&mut Self, I) -> Option<&mut Value> where I: Index","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a TOML array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a TOML array or map. A string index can be used to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24147,"byte_end":24220,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24225,"byte_end":24296,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24301,"byte_end":24325,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24330,"byte_end":24333,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24338,"byte_end":24409,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24414,"byte_end":24489,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24494,"byte_end":24568,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24573,"byte_end":24634,"line_start":95,"line_end":95,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24813,"byte_end":24823,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Value>::as_integer","value":"fn as_integer(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the integer value if it is an integer.\n","sig":null,"attributes":[{"value":"/ Extracts the integer value if it is an integer.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24750,"byte_end":24801,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25011,"byte_end":25021,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Value>::is_integer","value":"fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an integer.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an integer.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":24956,"byte_end":24999,"line_start":108,"line_end":108,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25144,"byte_end":25152,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"as_float","qualname":"<Value>::as_float","value":"fn as_float(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the float value if it is a float.\n","sig":null,"attributes":[{"value":"/ Extracts the float value if it is a float.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25086,"byte_end":25132,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25335,"byte_end":25343,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Value>::is_float","value":"fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a float.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a float.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25283,"byte_end":25323,"line_start":121,"line_end":121,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25468,"byte_end":25475,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the boolean value if it is a boolean.\n","sig":null,"attributes":[{"value":"/ Extracts the boolean value if it is a boolean.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25406,"byte_end":25456,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25663,"byte_end":25670,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Value>::is_bool","value":"fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a boolean.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a boolean.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25609,"byte_end":25651,"line_start":134,"line_end":134,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25800,"byte_end":25806,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the string of this value if it is a string.\n","sig":null,"attributes":[{"value":"/ Extracts the string of this value if it is a string.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25732,"byte_end":25788,"line_start":139,"line_end":139,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25994,"byte_end":26000,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Value>::is_str","value":"fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this value is a string.\n","sig":null,"attributes":[{"value":"/ Tests if this value is a string.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":25946,"byte_end":25982,"line_start":147,"line_end":147,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26301,"byte_end":26312,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Value>::as_datetime","value":"fn as_datetime(&Self) -> Option<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the datetime value if it is a datetime.","sig":null,"attributes":[{"value":"/ Extracts the datetime value if it is a datetime.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26061,"byte_end":26113,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26118,"byte_end":26121,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that a parsed TOML value will only contain ISO 8601 dates. An","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26126,"byte_end":26196,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ example date is:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26201,"byte_end":26221,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26226,"byte_end":26229,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26234,"byte_end":26248,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ 1979-05-27T07:32:00Z","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26253,"byte_end":26277,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26282,"byte_end":26289,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26511,"byte_end":26522,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"is_datetime","qualname":"<Value>::is_datetime","value":"fn is_datetime(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a datetime.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a datetime.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26456,"byte_end":26499,"line_start":167,"line_end":167,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26647,"byte_end":26655,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"fn as_array(&Self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26588,"byte_end":26635,"line_start":172,"line_end":172,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26857,"byte_end":26869,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"fn as_array_mut(&mut Self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":26798,"byte_end":26845,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27077,"byte_end":27085,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an array.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an array.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27024,"byte_end":27065,"line_start":188,"line_end":188,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27206,"byte_end":27214,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"as_table","qualname":"<Value>::as_table","value":"fn as_table(&Self) -> Option<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27148,"byte_end":27194,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27410,"byte_end":27422,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"as_table_mut","qualname":"<Value>::as_table_mut","value":"fn as_table_mut(&mut Self) -> Option<&mut Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27352,"byte_end":27398,"line_start":201,"line_end":201,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27624,"byte_end":27632,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"is_table","qualname":"<Value>::is_table","value":"fn is_table(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a table.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a table.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27572,"byte_end":27612,"line_start":209,"line_end":209,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27767,"byte_end":27776,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"same_type","qualname":"<Value>::same_type","value":"fn same_type(&Self, &Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this and another value have the same type.\n","sig":null,"attributes":[{"value":"/ Tests whether this and another value have the same type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27695,"byte_end":27755,"line_start":214,"line_end":214,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27952,"byte_end":27960,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"type_str","qualname":"<Value>::type_str","value":"fn type_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable representation of the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable representation of the type of this value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":27870,"byte_end":27940,"line_start":219,"line_end":219,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28417,"byte_end":28422,"line_start":239,"line_end":239,"column_start":8,"column_end":13},"name":"index","qualname":"<Value as std::ops::Index>::index","value":"fn index(&Self, I) -> &Value","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28575,"byte_end":28584,"line_start":248,"line_end":248,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Value as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, I) -> &mut Value","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28741,"byte_end":28745,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"from","qualname":"<Value as std::convert::From>::from","value":"fn from(&'a str) -> Value","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28724,"byte_end":28733,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28872,"byte_end":28876,"line_start":261,"line_end":261,"column_start":8,"column_end":12},"name":"from","qualname":"<Value as std::convert::From>::from","value":"fn from(Vec<V>) -> Value","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":29054,"byte_end":29058,"line_start":267,"line_end":267,"column_start":8,"column_end":12},"name":"from","qualname":"<Value as std::convert::From>::from","value":"fn from(BTreeMap<S, V>) -> Value","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":29300,"byte_end":29304,"line_start":275,"line_end":275,"column_start":8,"column_end":12},"name":"from","qualname":"<Value as std::convert::From>::from","value":"fn from(HashMap<S, V>) -> Value","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30308,"byte_end":30313,"line_start":312,"line_end":312,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::Index","value":"Index: Sealed","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":311}],"decl_id":null,"docs":" Types that can be used to index a `toml::Value`","sig":null,"attributes":[{"value":"/ Types that can be used to index a `toml::Value`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30051,"byte_end":30102,"line_start":305,"line_end":305,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30103,"byte_end":30106,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Currently this is implemented for `usize` to index arrays and `str` to index","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30107,"byte_end":30187,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/ tables.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30188,"byte_end":30199,"line_start":308,"line_end":308,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30200,"byte_end":30203,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and not intended for implementation outside of the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30204,"byte_end":30279,"line_start":310,"line_end":310,"column_start":1,"column_end":76}},{"value":"/ `toml` crate.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30280,"byte_end":30297,"line_start":311,"line_end":311,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30350,"byte_end":30355,"line_start":314,"line_end":314,"column_start":8,"column_end":13},"name":"index","qualname":"::value::Index::index","value":"fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30431,"byte_end":30440,"line_start":316,"line_end":316,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::value::Index::index_mut","value":"fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":313},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30648,"byte_end":30654,"line_start":322,"line_end":322,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::value::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" An implementation detail that should not be implemented, this will change in\n the future and break code otherwise.\n","sig":null,"attributes":[{"value":"/ An implementation detail that should not be implemented, this will change in","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30501,"byte_end":30581,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/ the future and break code otherwise.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30582,"byte_end":30622,"line_start":320,"line_end":320,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30812,"byte_end":30817,"line_start":329,"line_end":329,"column_start":8,"column_end":13},"name":"index","qualname":"<usize as value::Index>::index","value":"fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30985,"byte_end":30994,"line_start":336,"line_end":336,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<usize as value::Index>::index_mut","value":"fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":311},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31201,"byte_end":31206,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"index","qualname":"<str as value::Index>::index","value":"fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31373,"byte_end":31382,"line_start":352,"line_end":352,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<str as value::Index>::index_mut","value":"fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":311},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31591,"byte_end":31596,"line_start":361,"line_end":361,"column_start":8,"column_end":13},"name":"index","qualname":"<String as value::Index>::index","value":"fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31689,"byte_end":31698,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<String as value::Index>::index_mut","value":"fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":311},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31863,"byte_end":31868,"line_start":374,"line_end":374,"column_start":8,"column_end":13},"name":"index","qualname":"<&'s T as value::Index>::index","value":"fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31961,"byte_end":31970,"line_start":378,"line_end":378,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<&'s T as value::Index>::index_mut","value":"fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":308},"children":[],"decl_id":{"krate":0,"index":311},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32107,"byte_end":32110,"line_start":384,"line_end":384,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Value as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32352,"byte_end":32360,"line_start":393,"line_end":393,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Value as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Value, Self::Err>","parent":{"krate":2,"index":12774},"children":[],"decl_id":{"krate":2,"index":12776},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32475,"byte_end":32484,"line_start":399,"line_end":399,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Value as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":20,"index":2128},"children":[],"decl_id":{"krate":20,"index":2129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":34215,"byte_end":34226,"line_start":446,"line_end":446,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Value as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Value, D::Error> where D: de::Deserializer","parent":{"krate":20,"index":1588},"children":[],"decl_id":{"krate":20,"index":1590},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":37751,"byte_end":37766,"line_start":548,"line_end":548,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<Value as serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value, crate::de::Error> where\nV: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":39138,"byte_end":39154,"line_start":584,"line_end":584,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<Value as serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &str, &'static [&'static str], V)\n-> Result<V::Value, crate::de::Error> where V: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1665},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":39121,"byte_end":39130,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":39724,"byte_end":39742,"line_start":604,"line_end":604,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"<Value as serde::Deserializer>::deserialize_option","value":"fn deserialize_option<V>(Self, V) -> Result<V::Value, crate::de::Error> where\nV: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1647},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":39894,"byte_end":39920,"line_start":611,"line_end":611,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"<Value as serde::Deserializer>::deserialize_newtype_struct","value":"fn deserialize_newtype_struct<V>(Self, &'static str, V)\n-> Result<V::Value, crate::de::Error> where V: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1653},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":42633,"byte_end":42650,"line_start":717,"line_end":717,"column_start":8,"column_end":25},"name":"into_deserializer","qualname":"<Value as serde::de::IntoDeserializer>::into_deserializer","value":"fn into_deserializer(Self) -> Self","parent":{"krate":20,"index":1806},"children":[],"decl_id":{"krate":20,"index":1810},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55440,"byte_end":55448,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"Datetime","qualname":"::datetime::Datetime","value":"Datetime { date, time, offset }","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779}],"decl_id":null,"docs":" A parsed TOML datetime value","sig":null,"attributes":[{"value":"/ A parsed TOML datetime value","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52284,"byte_end":52316,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52317,"byte_end":52320,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to represent the datetime primitive type that can","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52321,"byte_end":52401,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ be encoded into TOML documents. This type is a parsed version that contains","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52402,"byte_end":52481,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ all metadata internally.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52482,"byte_end":52510,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52511,"byte_end":52514,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently this type is intentionally conservative and only supports","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52515,"byte_end":52586,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ `to_string` as an accessor. Over time though it's intended that it'll grow","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52587,"byte_end":52665,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ more support!","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52666,"byte_end":52683,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52684,"byte_end":52687,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using `Deserialize` to deserialize a TOML document, you","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52688,"byte_end":52767,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ can use this as a placeholder for where you're expecting a datetime to be","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52768,"byte_end":52845,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52846,"byte_end":52860,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52861,"byte_end":52864,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Also note though that while this type implements `Serialize` and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52865,"byte_end":52933,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ `Deserialize` it's only recommended to use this type with the TOML format,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":52934,"byte_end":53012,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ otherwise encoded in other formats it may look a little odd.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53013,"byte_end":53077,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53078,"byte_end":53081,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Depending on how the option values are used, this struct will correspond","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53082,"byte_end":53158,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ with one of the following four datetimes from the [TOML v1.0.0 spec]:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53159,"byte_end":53232,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53233,"byte_end":53236,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ | `date`    | `time`    | `offset`  | TOML type          |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53237,"byte_end":53299,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ | --------- | --------- | --------- | ------------------ |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53300,"byte_end":53362,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ | `Some(_)` | `Some(_)` | `Some(_)` | [Offset Date-Time] |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53363,"byte_end":53425,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ | `Some(_)` | `Some(_)` | `None`    | [Local Date-Time]  |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53426,"byte_end":53488,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/ | `Some(_)` | `None`    | `None`    | [Local Date]       |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53489,"byte_end":53551,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ | `None`    | `Some(_)` | `None`    | [Local Time]       |","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53552,"byte_end":53614,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53615,"byte_end":53618,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **1. Offset Date-Time**: If all the optional values are used, `Datetime`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53619,"byte_end":53695,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ corresponds to an [Offset Date-Time]. From the TOML v1.0.0 spec:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53696,"byte_end":53764,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53765,"byte_end":53768,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ > To unambiguously represent a specific instant in time, you may use an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53769,"byte_end":53844,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ > RFC 3339 formatted date-time with offset.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53845,"byte_end":53892,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53893,"byte_end":53898,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53899,"byte_end":53912,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ > odt1 = 1979-05-27T07:32:00Z","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53913,"byte_end":53946,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ > odt2 = 1979-05-27T00:32:00-07:00","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53947,"byte_end":53985,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ > odt3 = 1979-05-27T00:32:00.999999-07:00","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":53986,"byte_end":54031,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ > ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54032,"byte_end":54041,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54042,"byte_end":54047,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ > For the sake of readability, you may replace the T delimiter between date","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54048,"byte_end":54127,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ > and time with a space character (as permitted by RFC 3339 section 5.6).","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54128,"byte_end":54205,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54206,"byte_end":54211,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54212,"byte_end":54225,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/ > odt4 = 1979-05-27 07:32:00Z","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54226,"byte_end":54259,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ > ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54260,"byte_end":54269,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54270,"byte_end":54273,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ **2. Local Date-Time**: If `date` and `time` are given but `offset` is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54274,"byte_end":54348,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ `None`, `Datetime` corresponds to a [Local Date-Time]. From the spec:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54349,"byte_end":54422,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54423,"byte_end":54426,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ > If you omit the offset from an RFC 3339 formatted date-time, it will","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54427,"byte_end":54501,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ > represent the given date-time without any relation to an offset or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54502,"byte_end":54574,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ > timezone. It cannot be converted to an instant in time without additional","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54575,"byte_end":54654,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ > information. Conversion to an instant, if required, is implementation-","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54655,"byte_end":54731,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ > specific.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54732,"byte_end":54747,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54748,"byte_end":54753,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54754,"byte_end":54767,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/ > ldt1 = 1979-05-27T07:32:00","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54768,"byte_end":54800,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ > ldt2 = 1979-05-27T00:32:00.999999","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54801,"byte_end":54840,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ > ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54841,"byte_end":54850,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54851,"byte_end":54854,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **3. Local Date**: If only `date` is given, `Datetime` corresponds to a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54855,"byte_end":54930,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ [Local Date]; see the docs for [`Date`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54931,"byte_end":54975,"line_start":69,"line_end":69,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54976,"byte_end":54979,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ **4. Local Time**: If only `time` is given, `Datetime` corresponds to a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":54980,"byte_end":55055,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ [Local Time]; see the docs for [`Time`].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55056,"byte_end":55100,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55101,"byte_end":55104,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [TOML v1.0.0 spec]: https://toml.io/en/v1.0.0","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55105,"byte_end":55154,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/ [Offset Date-Time]: https://toml.io/en/v1.0.0#offset-date-time","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55155,"byte_end":55221,"line_start":75,"line_end":75,"column_start":1,"column_end":67}},{"value":"/ [Local Date-Time]: https://toml.io/en/v1.0.0#local-date-time","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55222,"byte_end":55286,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ [Local Date]: https://toml.io/en/v1.0.0#local-date","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55287,"byte_end":55341,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/ [Local Time]: https://toml.io/en/v1.0.0#local-time","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55342,"byte_end":55396,"line_start":78,"line_end":78,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1777},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55557,"byte_end":55561,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"date","qualname":"::datetime::Datetime::date","value":"std::option::Option<datetime::Date>","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":" Optional date.\n Required for: *Offset Date-Time*, *Local Date-Time*, *Local Date*.\n","sig":null,"attributes":[{"value":"/ Optional date.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55455,"byte_end":55473,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ Required for: *Offset Date-Time*, *Local Date-Time*, *Local Date*.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55478,"byte_end":55548,"line_start":82,"line_end":82,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1778},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55684,"byte_end":55688,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"name":"time","qualname":"::datetime::Datetime::time","value":"std::option::Option<datetime::Time>","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":" Optional time.\n Required for: *Offset Date-Time*, *Local Date-Time*, *Local Time*.\n","sig":null,"attributes":[{"value":"/ Optional time.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55582,"byte_end":55600,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ Required for: *Offset Date-Time*, *Local Date-Time*, *Local Time*.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55605,"byte_end":55675,"line_start":86,"line_end":86,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1779},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55780,"byte_end":55786,"line_start":91,"line_end":91,"column_start":9,"column_end":15},"name":"offset","qualname":"::datetime::Datetime::offset","value":"std::option::Option<datetime::Offset>","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":" Optional offset.\n Required for: *Offset Date-Time*.\n","sig":null,"attributes":[{"value":"/ Optional offset.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55709,"byte_end":55729,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/ Required for: *Offset Date-Time*.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55734,"byte_end":55771,"line_start":90,"line_end":90,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55920,"byte_end":55938,"line_start":96,"line_end":96,"column_start":12,"column_end":30},"name":"DatetimeParseError","qualname":"::datetime::DatetimeParseError","value":"DatetimeParseError {  }","parent":null,"children":[{"krate":0,"index":1790}],"decl_id":null,"docs":" Error returned from parsing a `Datetime` in the `FromStr` implementation.\n","sig":null,"attributes":[{"value":"/ Error returned from parsing a `Datetime` in the `FromStr` implementation.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":55807,"byte_end":55884,"line_start":94,"line_end":94,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56868,"byte_end":56872,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"Date","qualname":"::datetime::Date","value":"Date { year, month, day }","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"decl_id":null,"docs":" A parsed TOML date value","sig":null,"attributes":[{"value":"/ A parsed TOML date value","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56393,"byte_end":56421,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56422,"byte_end":56425,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ May be part of a [`Datetime`]. Alone, `Date` corresponds to a [Local Date].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56426,"byte_end":56505,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ From the TOML v1.0.0 spec:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56506,"byte_end":56536,"line_start":112,"line_end":112,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56537,"byte_end":56540,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ > If you include only the date portion of an RFC 3339 formatted date-time,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56541,"byte_end":56619,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ > it will represent that entire day without any relation to an offset or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56620,"byte_end":56696,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ > timezone.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56697,"byte_end":56712,"line_start":116,"line_end":116,"column_start":1,"column_end":16}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56713,"byte_end":56718,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56719,"byte_end":56732,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ > ld1 = 1979-05-27","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56733,"byte_end":56755,"line_start":119,"line_end":119,"column_start":1,"column_end":23}},{"value":"/ > ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56756,"byte_end":56765,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56766,"byte_end":56769,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [Local Date]: https://toml.io/en/v1.0.0#local-date","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56770,"byte_end":56824,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56909,"byte_end":56913,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"year","qualname":"::datetime::Date::year","value":"u16","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Year: four digits\n","sig":null,"attributes":[{"value":"/ Year: four digits","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56879,"byte_end":56900,"line_start":125,"line_end":125,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56951,"byte_end":56956,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"month","qualname":"::datetime::Date::month","value":"u8","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Month: 1 to 12\n","sig":null,"attributes":[{"value":"/ Month: 1 to 12","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56924,"byte_end":56942,"line_start":127,"line_end":127,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57027,"byte_end":57030,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"name":"day","qualname":"::datetime::Date::day","value":"u8","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Day: 1 to {28, 29, 30, 31} (based on month/year)\n","sig":null,"attributes":[{"value":"/ Day: 1 to {28, 29, 30, 31} (based on month/year)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":56966,"byte_end":57018,"line_start":129,"line_end":129,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57827,"byte_end":57831,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"Time","qualname":"::datetime::Time","value":"Time { hour, minute, second, nanosecond }","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"decl_id":null,"docs":" A parsed TOML time value","sig":null,"attributes":[{"value":"/ A parsed TOML time value","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57039,"byte_end":57067,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57068,"byte_end":57071,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ May be part of a [`Datetime`]. Alone, `Time` corresponds to a [Local Time].","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57072,"byte_end":57151,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/ From the TOML v1.0.0 spec:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57152,"byte_end":57182,"line_start":136,"line_end":136,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57183,"byte_end":57186,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ > If you include only the time portion of an RFC 3339 formatted date-time,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57187,"byte_end":57265,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ > it will represent that time of day without any relation to a specific","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57266,"byte_end":57341,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ > day or any offset or timezone.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57342,"byte_end":57378,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57379,"byte_end":57384,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/ > ```toml","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57385,"byte_end":57398,"line_start":142,"line_end":142,"column_start":1,"column_end":14}},{"value":"/ > lt1 = 07:32:00","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57399,"byte_end":57419,"line_start":143,"line_end":143,"column_start":1,"column_end":21}},{"value":"/ > lt2 = 00:32:00.999999","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57420,"byte_end":57447,"line_start":144,"line_end":144,"column_start":1,"column_end":28}},{"value":"/ > ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57448,"byte_end":57457,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ >","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57458,"byte_end":57463,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ > Millisecond precision is required. Further precision of fractional","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57464,"byte_end":57536,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ > seconds is implementation-specific. If the value contains greater","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57537,"byte_end":57608,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/ > precision than the implementation can support, the additional precision","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57609,"byte_end":57686,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ > must be truncated, not rounded.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57687,"byte_end":57724,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57725,"byte_end":57728,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [Local Time]: https://toml.io/en/v1.0.0#local-time","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57729,"byte_end":57783,"line_start":152,"line_end":152,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57864,"byte_end":57868,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"hour","qualname":"::datetime::Time::hour","value":"u8","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Hour: 0 to 23\n","sig":null,"attributes":[{"value":"/ Hour: 0 to 23","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57838,"byte_end":57855,"line_start":155,"line_end":155,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57906,"byte_end":57912,"line_start":158,"line_end":158,"column_start":9,"column_end":15},"name":"minute","qualname":"::datetime::Time::minute","value":"u8","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Minute: 0 to 59\n","sig":null,"attributes":[{"value":"/ Minute: 0 to 59","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57878,"byte_end":57897,"line_start":157,"line_end":157,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57989,"byte_end":57995,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"name":"second","qualname":"::datetime::Time::second","value":"u8","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Second: 0 to {58, 59, 60} (based on leap second rules)\n","sig":null,"attributes":[{"value":"/ Second: 0 to {58, 59, 60} (based on leap second rules)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":57922,"byte_end":57980,"line_start":159,"line_end":159,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58046,"byte_end":58056,"line_start":162,"line_end":162,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::datetime::Time::nanosecond","value":"u32","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Nanosecond: 0 to 999_999_999\n","sig":null,"attributes":[{"value":"/ Nanosecond: 0 to 999_999_999","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58005,"byte_end":58037,"line_start":161,"line_end":161,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58460,"byte_end":58461,"line_start":174,"line_end":174,"column_start":5,"column_end":6},"name":"Z","qualname":"::datetime::Offset::Z","value":"Offset::Z","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":" > A suffix which, when applied to a time, denotes a UTC offset of 00:00;\n > often spoken \"Zulu\" from the ICAO phonetic alphabet representation of\n > the letter \"Z\". --- [RFC 3339 section 2]","sig":null,"attributes":[{"value":"/ > A suffix which, when applied to a time, denotes a UTC offset of 00:00;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58154,"byte_end":58230,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ > often spoken \"Zulu\" from the ICAO phonetic alphabet representation of","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58235,"byte_end":58310,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ > the letter \"Z\". --- [RFC 3339 section 2]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58315,"byte_end":58361,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58366,"byte_end":58369,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [RFC 3339 section 2]: https://datatracker.ietf.org/doc/html/rfc3339#section-2","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58374,"byte_end":58455,"line_start":173,"line_end":173,"column_start":5,"column_end":86}}]},{"kind":"StructVariant","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58510,"byte_end":58516,"line_start":177,"line_end":177,"column_start":5,"column_end":11},"name":"Custom","qualname":"::datetime::Offset::Custom","value":"Offset::Custom { hours, minutes }","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":" Offset between local time and UTC\n","sig":null,"attributes":[{"value":"/ Offset between local time and UTC","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58468,"byte_end":58505,"line_start":176,"line_end":176,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58557,"byte_end":58562,"line_start":179,"line_end":179,"column_start":9,"column_end":14},"name":"hours","qualname":"::datetime::Offset::Custom::hours","value":"i8","parent":{"krate":0,"index":1825},"children":[],"decl_id":null,"docs":" Hours: -12 to +12\n","sig":null,"attributes":[{"value":"/ Hours: -12 to +12","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58527,"byte_end":58548,"line_start":178,"line_end":178,"column_start":9,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58606,"byte_end":58613,"line_start":182,"line_end":182,"column_start":9,"column_end":16},"name":"minutes","qualname":"::datetime::Offset::Custom::minutes","value":"u8","parent":{"krate":0,"index":1825},"children":[],"decl_id":null,"docs":" Minutes: 0 to 59\n","sig":null,"attributes":[{"value":"/ Minutes: 0 to 59","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58577,"byte_end":58597,"line_start":181,"line_end":181,"column_start":9,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58141,"byte_end":58147,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Offset","qualname":"::datetime::Offset","value":"enum Offset {\n    Z,\n    Custom {\n            hours: i8,\n            minutes: u8,\n        },\n}","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1825}],"decl_id":null,"docs":" A parsed TOML time offset","sig":null,"attributes":[{"value":"/ A parsed TOML time offset","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58066,"byte_end":58095,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58096,"byte_end":58099,"line_start":166,"line_end":166,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58667,"byte_end":58670,"line_start":187,"line_end":187,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Datetime as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58807,"byte_end":58810,"line_start":193,"line_end":193,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Datetime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59283,"byte_end":59286,"line_start":211,"line_end":211,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59456,"byte_end":59459,"line_start":217,"line_end":217,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59807,"byte_end":59810,"line_start":228,"line_end":228,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Offset as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":60108,"byte_end":60116,"line_start":239,"line_end":239,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Datetime as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Datetime, DatetimeParseError>","parent":{"krate":2,"index":12774},"children":[],"decl_id":{"krate":2,"index":12776},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66136,"byte_end":66145,"line_start":428,"line_end":428,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Datetime as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":20,"index":2128},"children":[],"decl_id":{"krate":20,"index":2129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66475,"byte_end":66486,"line_start":441,"line_end":441,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Datetime as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Datetime, D::Error> where D: de::Deserializer","parent":{"krate":20,"index":1588},"children":[],"decl_id":{"krate":20,"index":1590},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":69330,"byte_end":69333,"line_start":539,"line_end":539,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DatetimeParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":624},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":1837},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":657},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":659},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":661},{"krate":0,"index":1894},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":666},{"krate":0,"index":673},{"krate":0,"index":684},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":761},{"krate":0,"index":769},{"krate":0,"index":777},{"krate":0,"index":785},{"krate":0,"index":793},{"krate":0,"index":803},{"krate":0,"index":811},{"krate":0,"index":816},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":915},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":973},{"krate":0,"index":980},{"krate":0,"index":987},{"krate":0,"index":994},{"krate":0,"index":1001},{"krate":0,"index":1010}],"decl_id":null,"docs":" Serializing Rust structures into TOML.","sig":null,"attributes":[{"value":"/ Serializing Rust structures into TOML.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69482,"byte_end":69524,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69525,"byte_end":69528,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for serializing Rust structures","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69529,"byte_end":69607,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ into TOML documents (as strings). Note that some top-level functions here","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69608,"byte_end":69685,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ are also provided at the top of the crate.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69686,"byte_end":69732,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69733,"byte_end":69736,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that the TOML format has a restriction that if a table itself contains","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69737,"byte_end":69816,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tables, all keys with non-table values must be emitted first. This is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69817,"byte_end":69890,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ typically easy to ensure happens when you're defining a `struct` as you can","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69891,"byte_end":69970,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reorder the fields manually, but when working with maps (such as `BTreeMap`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":69971,"byte_end":70050,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ or `HashMap`) this can lead to serialization errors. In those situations you","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70051,"byte_end":70131,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ may use the `tables_last` function in this module like so:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70132,"byte_end":70194,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70195,"byte_end":70198,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70199,"byte_end":70210,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70211,"byte_end":70245,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70246,"byte_end":70282,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70283,"byte_end":70307,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70308,"byte_end":70329,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70330,"byte_end":70355,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70356,"byte_end":70415,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70416,"byte_end":70466,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70467,"byte_end":70472,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70473,"byte_end":70501,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70502,"byte_end":70533,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70534,"byte_end":70552,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70553,"byte_end":70560,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":650},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71006,"byte_end":71012,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"fn to_vec<T>(&T) -> Result<Vec<u8>, Error> where T: ?Sized, T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a TOML byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a TOML byte vector.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70701,"byte_end":70762,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70763,"byte_end":70766,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70767,"byte_end":70843,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70844,"byte_end":70919,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":70920,"byte_end":70998,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72054,"byte_end":72063,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"fn to_string<T>(&T) -> Result<String, Error> where T: ?Sized,\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of TOML.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71140,"byte_end":71199,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71200,"byte_end":71203,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71204,"byte_end":71280,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71281,"byte_end":71356,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71357,"byte_end":71435,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71436,"byte_end":71439,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71440,"byte_end":71454,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71455,"byte_end":71458,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71459,"byte_end":71466,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71467,"byte_end":71499,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71500,"byte_end":71503,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71504,"byte_end":71528,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71529,"byte_end":71548,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/     database: Database,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71549,"byte_end":71576,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71577,"byte_end":71582,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71583,"byte_end":71586,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71587,"byte_end":71611,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ struct Database {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71612,"byte_end":71633,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/     ip: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71634,"byte_end":71653,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     port: Vec<u16>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71654,"byte_end":71677,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     connection_max: u32,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71678,"byte_end":71706,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     enabled: bool,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71707,"byte_end":71729,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71730,"byte_end":71735,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71736,"byte_end":71739,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let config = Config {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71740,"byte_end":71765,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     database: Database {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71766,"byte_end":71794,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/         ip: \"192.168.1.1\".to_string(),","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71795,"byte_end":71837,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/         port: vec![8001, 8002, 8003],","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71838,"byte_end":71879,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/         connection_max: 5000,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71880,"byte_end":71913,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/         enabled: false,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71914,"byte_end":71941,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/     },","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71942,"byte_end":71952,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71953,"byte_end":71959,"line_start":80,"line_end":80,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71960,"byte_end":71963,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":71964,"byte_end":72013,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/ println!(\"{}\", toml)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72014,"byte_end":72038,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72039,"byte_end":72046,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":655},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72474,"byte_end":72490,"line_start":98,"line_end":98,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"fn to_string_pretty<T>(&T) -> Result<String, Error> where T: ?Sized,\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a \"pretty\" String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a \"pretty\" String of TOML.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72257,"byte_end":72325,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72326,"byte_end":72329,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This is identical to `to_string` except the output string has a more","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72330,"byte_end":72402,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"/ \"pretty\" output. See `Serializer::pretty` for more details.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72403,"byte_end":72466,"line_start":97,"line_end":97,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73042,"byte_end":73057,"line_start":116,"line_end":116,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::ser::Error::UnsupportedType","value":"Error::UnsupportedType","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" Indicates that a Rust type was requested to be serialized but it was not\n supported.","sig":null,"attributes":[{"value":"/ Indicates that a Rust type was requested to be serialized but it was not","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72816,"byte_end":72892,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72897,"byte_end":72911,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72916,"byte_end":72919,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Currently the TOML format does not support serializing types such as","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72924,"byte_end":72996,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/ enums, tuples and tuple structs.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73001,"byte_end":73037,"line_start":115,"line_end":115,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73195,"byte_end":73207,"line_start":120,"line_end":120,"column_start":5,"column_end":17},"name":"KeyNotString","qualname":"::ser::Error::KeyNotString","value":"Error::KeyNotString","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" The key of all TOML maps must be strings, but serialization was\n attempted where the key of a map was not a string.\n","sig":null,"attributes":[{"value":"/ The key of all TOML maps must be strings, but serialization was","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73064,"byte_end":73131,"line_start":118,"line_end":118,"column_start":5,"column_end":72}},{"value":"/ attempted where the key of a map was not a string.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73136,"byte_end":73190,"line_start":119,"line_end":119,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73306,"byte_end":73316,"line_start":124,"line_end":124,"column_start":5,"column_end":15},"name":"KeyNewline","qualname":"::ser::Error::KeyNewline","value":"Error::KeyNewline","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" An error that we never omit but keep for backwards compatibility\n","sig":null,"attributes":[{"value":"/ An error that we never omit but keep for backwards compatibility","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73214,"byte_end":73282,"line_start":122,"line_end":122,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73425,"byte_end":73439,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"ArrayMixedType","qualname":"::ser::Error::ArrayMixedType","value":"Error::ArrayMixedType","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" An array had to be homogeneous, but now it is allowed to be heterogeneous.\n","sig":null,"attributes":[{"value":"/ An array had to be homogeneous, but now it is allowed to be heterogeneous.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73323,"byte_end":73401,"line_start":126,"line_end":126,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73616,"byte_end":73631,"line_start":133,"line_end":133,"column_start":5,"column_end":20},"name":"ValueAfterTable","qualname":"::ser::Error::ValueAfterTable","value":"Error::ValueAfterTable","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" All values in a TOML table must be emitted before further tables are\n emitted. If a value is emitted *after* a table then this error is\n generated.\n","sig":null,"attributes":[{"value":"/ All values in a TOML table must be emitted before further tables are","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73446,"byte_end":73518,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ emitted. If a value is emitted *after* a table then this error is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73523,"byte_end":73592,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ generated.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73597,"byte_end":73611,"line_start":132,"line_end":132,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73677,"byte_end":73688,"line_start":136,"line_end":136,"column_start":5,"column_end":16},"name":"DateInvalid","qualname":"::ser::Error::DateInvalid","value":"Error::DateInvalid","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" A serialized date was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized date was invalid.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73638,"byte_end":73672,"line_start":135,"line_end":135,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73736,"byte_end":73749,"line_start":139,"line_end":139,"column_start":5,"column_end":18},"name":"NumberInvalid","qualname":"::ser::Error::NumberInvalid","value":"Error::NumberInvalid","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" A serialized number was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized number was invalid.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73695,"byte_end":73731,"line_start":138,"line_end":138,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73825,"byte_end":73840,"line_start":142,"line_end":142,"column_start":5,"column_end":20},"name":"UnsupportedNone","qualname":"::ser::Error::UnsupportedNone","value":"Error::UnsupportedNone","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" None was attempted to be serialized, but it's not supported.\n","sig":null,"attributes":[{"value":"/ None was attempted to be serialized, but it's not supported.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73756,"byte_end":73820,"line_start":141,"line_end":141,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73939,"byte_end":73945,"line_start":146,"line_end":146,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ser::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" A custom error which could be generated when serializing a particular\n type.\n","sig":null,"attributes":[{"value":"/ A custom error which could be generated when serializing a particular","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73847,"byte_end":73920,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73925,"byte_end":73934,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":73946,"byte_end":73952,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"0","qualname":"::ser::Error::Custom::0","value":"std::string::String","parent":{"krate":0,"index":1854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72804,"byte_end":72809,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Error","value":"enum Error {\n    UnsupportedType,\n    KeyNotString,\n    KeyNewline,\n    ArrayMixedType,\n    ValueAfterTable,\n    DateInvalid,\n    NumberInvalid,\n    UnsupportedNone,\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854}],"decl_id":null,"docs":" Errors that can occur when serializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72687,"byte_end":72737,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":72777,"byte_end":72794,"line_start":109,"line_end":109,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75176,"byte_end":75186,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" Serialization implementation for TOML.","sig":null,"attributes":[{"value":"/ Serialization implementation for TOML.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74703,"byte_end":74745,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74746,"byte_end":74749,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ This structure implements serialization support for TOML to serialize an","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74750,"byte_end":74826,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ arbitrary type to TOML. Note that the TOML format does not support all","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74827,"byte_end":74901,"line_start":188,"line_end":188,"column_start":1,"column_end":75}},{"value":"/ datatypes in Rust, such as enums, tuples, and tuple structs. These types","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74902,"byte_end":74978,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ will generate an error when serialized.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74979,"byte_end":75022,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75023,"byte_end":75026,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Currently a serializer always writes its output to an in-memory `String`,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75027,"byte_end":75104,"line_start":192,"line_end":192,"column_start":1,"column_end":78}},{"value":"/ which is passed in when creating the serializer itself.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75105,"byte_end":75164,"line_start":193,"line_end":193,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75731,"byte_end":75743,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq {  }","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":676},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75927,"byte_end":75935,"line_start":233,"line_end":233,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::ser::SerializeTable::Datetime","value":"SerializeTable::Datetime(&'b mut Serializer)","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75936,"byte_end":75958,"line_start":233,"line_end":233,"column_start":14,"column_end":36},"name":"0","qualname":"::ser::SerializeTable::Datetime::0","value":"&'b mut ser::Serializer<'a>","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":679},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75965,"byte_end":75970,"line_start":234,"line_end":234,"column_start":5,"column_end":10},"name":"Table","qualname":"::ser::SerializeTable::Table","value":"SerializeTable::Table { ser, key, first, table_emitted }","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75981,"byte_end":75984,"line_start":235,"line_end":235,"column_start":9,"column_end":12},"name":"ser","qualname":"::ser::SerializeTable::Table::ser","value":"&'b mut ser::Serializer<'a>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":681},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76018,"byte_end":76021,"line_start":236,"line_end":236,"column_start":9,"column_end":12},"name":"key","qualname":"::ser::SerializeTable::Table::key","value":"std::string::String","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76039,"byte_end":76044,"line_start":237,"line_end":237,"column_start":9,"column_end":14},"name":"first","qualname":"::ser::SerializeTable::Table::first","value":"std::cell::Cell<bool>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76066,"byte_end":76079,"line_start":238,"line_end":238,"column_start":9,"column_end":22},"name":"table_emitted","qualname":"::ser::SerializeTable::Table::table_emitted","value":"std::cell::Cell<bool>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":673},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":75898,"byte_end":75912,"line_start":232,"line_end":232,"column_start":10,"column_end":24},"name":"SerializeTable","qualname":"::ser::SerializeTable","value":"enum SerializeTable<'a, 'b> {\n    Datetime(&'b mut Serializer),\n    Table {\n            ser: &'b mut Serializer,\n            key: String,\n            first: Cell<bool>,\n            table_emitted: Cell<bool>,\n        },\n}","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76343,"byte_end":76346,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"fn new(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer which will emit TOML into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a new serializer which will emit TOML into the buffer provided.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76133,"byte_end":76208,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76213,"byte_end":76216,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The serializer can then be used to serialize a type after which the data","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76221,"byte_end":76297,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ will be present in `dst`.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76302,"byte_end":76331,"line_start":246,"line_end":246,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76905,"byte_end":76911,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer>::pretty","value":"fn pretty(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a \"pretty\" formatter","sig":null,"attributes":[{"value":"/ Instantiate a \"pretty\" formatter","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76530,"byte_end":76566,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76571,"byte_end":76574,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ By default this will use:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76579,"byte_end":76608,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76613,"byte_end":76616,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ - pretty strings: strings with newlines will use the `'''` syntax. See","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76621,"byte_end":76695,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/   `Serializer::pretty_string`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76700,"byte_end":76733,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ - pretty arrays: each item in arrays will be on a newline, have an indentation of 4 and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76738,"byte_end":76829,"line_start":261,"line_end":261,"column_start":5,"column_end":96}},{"value":"/   have a trailing comma. See `Serializer::pretty_array`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76834,"byte_end":76893,"line_start":262,"line_end":262,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77740,"byte_end":77753,"line_start":297,"line_end":297,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Serializer>::pretty_string","value":"fn pretty_string(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable pretty strings","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77210,"byte_end":77246,"line_start":274,"line_end":274,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77251,"byte_end":77254,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77259,"byte_end":77334,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77339,"byte_end":77409,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77414,"byte_end":77417,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77422,"byte_end":77436,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77441,"byte_end":77444,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77449,"byte_end":77464,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77469,"byte_end":77472,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77477,"byte_end":77495,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77500,"byte_end":77526,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77531,"byte_end":77556,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77561,"byte_end":77568,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77573,"byte_end":77576,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77581,"byte_end":77599,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77604,"byte_end":77607,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77612,"byte_end":77630,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ single = 'no newlines'","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77635,"byte_end":77661,"line_start":291,"line_end":291,"column_start":5,"column_end":31}},{"value":"/ text = '''","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77666,"byte_end":77680,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77685,"byte_end":77692,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77697,"byte_end":77704,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ '''","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77709,"byte_end":77716,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77721,"byte_end":77728,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78649,"byte_end":78670,"line_start":332,"line_end":332,"column_start":12,"column_end":33},"name":"pretty_string_literal","qualname":"<Serializer>::pretty_string_literal","value":"fn pretty_string_literal(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable Literal strings for pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable Literal strings for pretty strings","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":77974,"byte_end":78030,"line_start":306,"line_end":306,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78035,"byte_end":78038,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78043,"byte_end":78118,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78123,"byte_end":78193,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78198,"byte_end":78201,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ If disabled, literal strings will NEVER be used and strings with one or","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78206,"byte_end":78281,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ more newlines will use `\"\"\"`","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78286,"byte_end":78318,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78323,"byte_end":78326,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78331,"byte_end":78345,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78350,"byte_end":78353,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78358,"byte_end":78373,"line_start":316,"line_end":316,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78378,"byte_end":78381,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78386,"byte_end":78404,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78409,"byte_end":78435,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78440,"byte_end":78465,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78470,"byte_end":78477,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78482,"byte_end":78485,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78490,"byte_end":78508,"line_start":323,"line_end":323,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78513,"byte_end":78516,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78521,"byte_end":78539,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78544,"byte_end":78570,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ text = \"\"\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78575,"byte_end":78589,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78594,"byte_end":78601,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78606,"byte_end":78613,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ \"\"\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78618,"byte_end":78625,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":78630,"byte_end":78637,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79831,"byte_end":79843,"line_start":375,"line_end":375,"column_start":12,"column_end":24},"name":"pretty_array","qualname":"<Serializer>::pretty_array","value":"fn pretty_array(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty arrays","sig":null,"attributes":[{"value":"/ Enable or Disable pretty arrays","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79132,"byte_end":79167,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79172,"byte_end":79175,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If enabled, arrays will always have each item on their own line.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79180,"byte_end":79248,"line_start":350,"line_end":350,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79253,"byte_end":79256,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Some specific features can be controlled via other builder methods:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79261,"byte_end":79332,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79337,"byte_end":79340,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ - `Serializer::pretty_array_indent`: set the indent to a value other","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79345,"byte_end":79417,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/   than 4.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79422,"byte_end":79435,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/ - `Serializer::pretty_array_trailing_comma`: enable/disable the trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79440,"byte_end":79516,"line_start":356,"line_end":356,"column_start":5,"column_end":81}},{"value":"/   comma on the last item.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79521,"byte_end":79550,"line_start":357,"line_end":357,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79555,"byte_end":79558,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79563,"byte_end":79577,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79582,"byte_end":79585,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79590,"byte_end":79605,"line_start":361,"line_end":361,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79610,"byte_end":79613,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79618,"byte_end":79636,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ array = [\"foo\", \"bar\"]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79641,"byte_end":79667,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79672,"byte_end":79679,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79684,"byte_end":79687,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79692,"byte_end":79710,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79715,"byte_end":79718,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79723,"byte_end":79741,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ array = [","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79746,"byte_end":79759,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/     \"foo\",","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79764,"byte_end":79778,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/     \"bar\",","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79783,"byte_end":79797,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/ ]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79802,"byte_end":79807,"line_start":373,"line_end":373,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":79812,"byte_end":79819,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80175,"byte_end":80194,"line_start":387,"line_end":387,"column_start":12,"column_end":31},"name":"pretty_array_indent","qualname":"<Serializer>::pretty_array_indent","value":"fn pretty_array_indent(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the indent for pretty arrays","sig":null,"attributes":[{"value":"/ Set the indent for pretty arrays","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80062,"byte_end":80098,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80103,"byte_end":80106,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80111,"byte_end":80163,"line_start":386,"line_end":386,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80800,"byte_end":80827,"line_start":406,"line_end":406,"column_start":12,"column_end":39},"name":"pretty_array_trailing_comma","qualname":"<Serializer>::pretty_array_trailing_comma","value":"fn pretty_array_trailing_comma(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether to use a trailing comma when serializing pretty arrays","sig":null,"attributes":[{"value":"/ Specify whether to use a trailing comma when serializing pretty arrays","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80649,"byte_end":80723,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80728,"byte_end":80731,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":80736,"byte_end":80788,"line_start":405,"line_end":405,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94059,"byte_end":94073,"line_start":783,"line_end":783,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2141},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94177,"byte_end":94189,"line_start":787,"line_end":787,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2142},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94291,"byte_end":94304,"line_start":791,"line_end":791,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94407,"byte_end":94420,"line_start":795,"line_end":795,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2144},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94523,"byte_end":94536,"line_start":799,"line_end":799,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2145},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94639,"byte_end":94651,"line_start":803,"line_end":803,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2146},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94753,"byte_end":94766,"line_start":807,"line_end":807,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2147},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94869,"byte_end":94882,"line_start":811,"line_end":811,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2148},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":94985,"byte_end":94998,"line_start":815,"line_end":815,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2149},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95101,"byte_end":95114,"line_start":819,"line_end":819,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95206,"byte_end":95219,"line_start":823,"line_end":823,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2151},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95311,"byte_end":95325,"line_start":827,"line_end":827,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2152},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95466,"byte_end":95479,"line_start":832,"line_end":832,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_str","value":"fn serialize_str(Self, &str) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2153},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95733,"byte_end":95748,"line_start":841,"line_end":841,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_bytes","value":"fn serialize_bytes(Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2154},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95877,"byte_end":95891,"line_start":846,"line_end":846,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2155},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":95977,"byte_end":95991,"line_start":850,"line_end":850,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_some","value":"fn serialize_some<T>(Self, &T) -> Result<(), Self::Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2156},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":96134,"byte_end":96148,"line_start":857,"line_end":857,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":96234,"byte_end":96255,"line_start":861,"line_end":861,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2159},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":96362,"byte_end":96384,"line_start":865,"line_end":865,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &'static str, u32, &'static str)\n-> Result<(), Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2160},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":96574,"byte_end":96598,"line_start":874,"line_end":874,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<T>(Self, &'static str, &T)\n-> Result<(), Self::Error> where T: ?Sized, T: ser::Serialize","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2161},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":96793,"byte_end":96818,"line_start":885,"line_end":885,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<T>(Self, &'static str, u32, &'static str, &T)\n-> Result<(), Self::Error> where T: ?Sized, T: ser::Serialize","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2163},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":97081,"byte_end":97094,"line_start":898,"line_end":898,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>)\n-> Result<Self::SerializeSeq, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":97376,"byte_end":97391,"line_start":908,"line_end":908,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2166},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":97509,"byte_end":97531,"line_start":912,"line_end":912,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":97707,"byte_end":97730,"line_start":920,"line_end":920,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":97968,"byte_end":97981,"line_start":930,"line_end":930,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>)\n-> Result<Self::SerializeMap, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2169},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":98305,"byte_end":98321,"line_start":940,"line_end":940,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2170},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":98880,"byte_end":98904,"line_start":959,"line_end":959,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'b mut Serializer as serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant, Self::Error>","parent":{"krate":20,"index":2131},"children":[],"decl_id":{"krate":20,"index":2171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":99245,"byte_end":99262,"line_start":974,"line_end":974,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<SerializeSeq as serde::ser::SerializeSeq>::serialize_element","value":"fn serialize_element<T>(&mut Self, &T) -> Result<(), Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2181},"children":[],"decl_id":{"krate":20,"index":2184},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":99754,"byte_end":99757,"line_start":992,"line_end":992,"column_start":8,"column_end":11},"name":"end","qualname":"<SerializeSeq as serde::ser::SerializeSeq>::end","value":"fn end(Self) -> Result<(), Error>","parent":{"krate":20,"index":2181},"children":[],"decl_id":{"krate":20,"index":2186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":100742,"byte_end":100759,"line_start":1023,"line_end":1023,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<SerializeSeq as serde::ser::SerializeTuple>::serialize_element","value":"fn serialize_element<T>(&mut Self, &T) -> Result<(), Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2187},"children":[],"decl_id":{"krate":20,"index":2190},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":100929,"byte_end":100932,"line_start":1030,"line_end":1030,"column_start":8,"column_end":11},"name":"end","qualname":"<SerializeSeq as serde::ser::SerializeTuple>::end","value":"fn end(Self) -> Result<(), Error>","parent":{"krate":20,"index":2187},"children":[],"decl_id":{"krate":20,"index":2192},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101125,"byte_end":101140,"line_start":1039,"line_end":1039,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<SerializeSeq as serde::ser::SerializeTupleVariant>::serialize_field","value":"fn serialize_field<T>(&mut Self, &T) -> Result<(), Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2199},"children":[],"decl_id":{"krate":20,"index":2202},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101310,"byte_end":101313,"line_start":1046,"line_end":1046,"column_start":8,"column_end":11},"name":"end","qualname":"<SerializeSeq as serde::ser::SerializeTupleVariant>::end","value":"fn end(Self) -> Result<(), Error>","parent":{"krate":20,"index":2199},"children":[],"decl_id":{"krate":20,"index":2204},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101505,"byte_end":101520,"line_start":1055,"line_end":1055,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<SerializeSeq as serde::ser::SerializeTupleStruct>::serialize_field","value":"fn serialize_field<T>(&mut Self, &T) -> Result<(), Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2193},"children":[],"decl_id":{"krate":20,"index":2196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101690,"byte_end":101693,"line_start":1062,"line_end":1062,"column_start":8,"column_end":11},"name":"end","qualname":"<SerializeSeq as serde::ser::SerializeTupleStruct>::end","value":"fn end(Self) -> Result<(), Error>","parent":{"krate":20,"index":2193},"children":[],"decl_id":{"krate":20,"index":2198},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101879,"byte_end":101892,"line_start":1071,"line_end":1071,"column_start":8,"column_end":21},"name":"serialize_key","qualname":"<SerializeTable as serde::ser::SerializeMap>::serialize_key","value":"fn serialize_key<T>(&mut Self, &T) -> Result<(), Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2205},"children":[],"decl_id":{"krate":20,"index":2208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":102293,"byte_end":102308,"line_start":1085,"line_end":1085,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"<SerializeTable as serde::ser::SerializeMap>::serialize_value","value":"fn serialize_value<T>(&mut Self, &T) -> Result<(), Error> where T: ?Sized,\nT: ser::Serialize","parent":{"krate":20,"index":2205},"children":[],"decl_id":{"krate":20,"index":2210},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":103322,"byte_end":103325,"line_start":1118,"line_end":1118,"column_start":8,"column_end":11},"name":"end","qualname":"<SerializeTable as serde::ser::SerializeMap>::end","value":"fn end(Self) -> Result<(), Error>","parent":{"krate":20,"index":2205},"children":[],"decl_id":{"krate":20,"index":2215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":103827,"byte_end":103842,"line_start":1136,"line_end":1136,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<SerializeTable as serde::ser::SerializeStruct>::serialize_field","value":"fn serialize_field<T>(&mut Self, &'static str, &T) -> Result<(), Error> where\nT: ?Sized, T: ser::Serialize","parent":{"krate":20,"index":2216},"children":[],"decl_id":{"krate":20,"index":2219},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":105040,"byte_end":105043,"line_start":1174,"line_end":1174,"column_start":8,"column_end":11},"name":"end","qualname":"<SerializeTable as serde::ser::SerializeStruct>::end","value":"fn end(Self) -> Result<(), Error>","parent":{"krate":20,"index":2216},"children":[],"decl_id":{"krate":20,"index":2222},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":114554,"byte_end":114557,"line_start":1530,"line_end":1530,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115314,"byte_end":115320,"line_start":1548,"line_end":1548,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as serde::ser::Error>::custom","value":"fn custom<T>(T) -> Error where T: fmt::Display","parent":{"krate":20,"index":9671},"children":[],"decl_id":{"krate":20,"index":9672},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116117,"byte_end":116128,"line_start":1579,"line_end":1579,"column_start":8,"column_end":19},"name":"tables_last","qualname":"::ser::tables_last","value":"fn tables_last<'a, I, K, V, S>(&'a I, S) -> Result<S::Ok, S::Error> where\n&'a I: IntoIterator<Item = (K, V)>, K: ser::Serialize, V: ser::Serialize,\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to serialize items in a map in an order valid with\n TOML.","sig":null,"attributes":[{"value":"/ Convenience function to serialize items in a map in an order valid with","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115461,"byte_end":115536,"line_start":1559,"line_end":1559,"column_start":1,"column_end":76}},{"value":"/ TOML.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115537,"byte_end":115546,"line_start":1560,"line_end":1560,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115547,"byte_end":115550,"line_start":1561,"line_end":1561,"column_start":1,"column_end":4}},{"value":"/ TOML carries the restriction that keys in a table must be serialized last if","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115551,"byte_end":115631,"line_start":1562,"line_end":1562,"column_start":1,"column_end":81}},{"value":"/ their value is a table itself. This isn't always easy to guarantee, so this","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115632,"byte_end":115711,"line_start":1563,"line_end":1563,"column_start":1,"column_end":80}},{"value":"/ helper can be used like so:","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115712,"byte_end":115743,"line_start":1564,"line_end":1564,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115744,"byte_end":115747,"line_start":1565,"line_end":1565,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115748,"byte_end":115759,"line_start":1566,"line_end":1566,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115760,"byte_end":115794,"line_start":1567,"line_end":1567,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115795,"byte_end":115831,"line_start":1568,"line_end":1568,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115832,"byte_end":115856,"line_start":1569,"line_end":1569,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115857,"byte_end":115878,"line_start":1570,"line_end":1570,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115879,"byte_end":115904,"line_start":1571,"line_end":1571,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115905,"byte_end":115964,"line_start":1572,"line_end":1572,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115965,"byte_end":116015,"line_start":1573,"line_end":1573,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116016,"byte_end":116021,"line_start":1574,"line_end":1574,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116022,"byte_end":116050,"line_start":1575,"line_end":1575,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116051,"byte_end":116082,"line_start":1576,"line_end":1576,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116083,"byte_end":116101,"line_start":1577,"line_end":1577,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116102,"byte_end":116109,"line_start":1578,"line_end":1578,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":1094},{"krate":0,"index":1100},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1130},{"krate":0,"index":1144},{"krate":0,"index":1161},{"krate":0,"index":1174},{"krate":0,"index":1188},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1207},{"krate":0,"index":1211},{"krate":0,"index":1215},{"krate":0,"index":1232},{"krate":0,"index":1237},{"krate":0,"index":1242},{"krate":0,"index":1246},{"krate":0,"index":1253},{"krate":0,"index":1261},{"krate":0,"index":1265},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1279},{"krate":0,"index":1283},{"krate":0,"index":1290},{"krate":0,"index":1294},{"krate":0,"index":1301},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1324},{"krate":0,"index":1393},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1421},{"krate":0,"index":1427},{"krate":0,"index":2293},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2327},{"krate":0,"index":1431}],"decl_id":null,"docs":" Deserializing TOML into Rust structures.","sig":null,"attributes":[{"value":"/ Deserializing TOML into Rust structures.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123177,"byte_end":123221,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123222,"byte_end":123225,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for deserializing TOML documents","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123226,"byte_end":123305,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into Rust structures. Note that some top-level functions here are also","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123306,"byte_end":123380,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ provided at the top of the crate.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123381,"byte_end":123418,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124071,"byte_end":124081,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"fn from_slice<'de, T>(&'de [u8]) -> Result<T, Error> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into a type.","sig":null,"attributes":[{"value":"/ Deserializes a byte slice into a type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123889,"byte_end":123931,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123932,"byte_end":123935,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `bytes` as UTF-8 data and then","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":123936,"byte_end":124010,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ deserialize `T` from the TOML document provided.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124011,"byte_end":124063,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124943,"byte_end":124951,"line_start":73,"line_end":73,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"fn from_str<'de, T>(&'de str) -> Result<T, Error> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a string into a type.","sig":null,"attributes":[{"value":"/ Deserializes a string into a type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124297,"byte_end":124335,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124336,"byte_end":124339,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `s` as a TOML document and","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124340,"byte_end":124410,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ deserialize `T` from the document.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124411,"byte_end":124449,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124450,"byte_end":124453,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124454,"byte_end":124468,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124469,"byte_end":124472,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124473,"byte_end":124480,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124481,"byte_end":124515,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124516,"byte_end":124519,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124520,"byte_end":124546,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124547,"byte_end":124566,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     title: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124567,"byte_end":124589,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/     owner: Owner,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124590,"byte_end":124611,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124612,"byte_end":124617,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124618,"byte_end":124621,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124622,"byte_end":124648,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/ struct Owner {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124649,"byte_end":124667,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124668,"byte_end":124689,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124690,"byte_end":124695,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124696,"byte_end":124699,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let config: Config = toml::from_str(r#\"","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124700,"byte_end":124743,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/     title = 'TOML Example'","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124744,"byte_end":124774,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124775,"byte_end":124778,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     [owner]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124779,"byte_end":124794,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/     name = 'Lisa'","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124795,"byte_end":124816,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/ \"#).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124817,"byte_end":124834,"line_start":68,"line_end":68,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124835,"byte_end":124838,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(config.title, \"TOML Example\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124839,"byte_end":124884,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(config.owner.name, \"Lisa\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124885,"byte_end":124927,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":124928,"byte_end":124935,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":125239,"byte_end":125244,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1937}],"decl_id":null,"docs":" Errors that can occur when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when deserializing a type.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":125136,"byte_end":125188,"line_start":83,"line_end":83,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":128207,"byte_end":128219,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"decl_id":null,"docs":" Deserialization implementation for TOML.\n","sig":null,"attributes":[{"value":"/ Deserialization implementation for TOML.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":128151,"byte_end":128195,"line_start":197,"line_end":197,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":128461,"byte_end":128476,"line_start":208,"line_end":208,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'b mut Deserializer as serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value, Error> where V: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":129854,"byte_end":129870,"line_start":243,"line_end":243,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<&'b mut Deserializer as serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value, Error> where V: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1665},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":131447,"byte_end":131465,"line_start":289,"line_end":289,"column_start":8,"column_end":26},"name":"deserialize_struct","qualname":"<&'b mut Deserializer as serde::Deserializer>::deserialize_struct","value":"fn deserialize_struct<V>(Self, &'static str, &'static [&'static str], V)\n-> Result<V::Value, Error> where V: de::Visitor","parent":{"krate":20,"index":1610},"children":[],"decl_id":{"krate":20,"index":1663},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":153929,"byte_end":153946,"line_start":971,"line_end":971,"column_start":8,"column_end":25},"name":"into_deserializer","qualname":"<&'b mut Deserializer as serde::de::IntoDeserializer>::into_deserializer","value":"fn into_deserializer(Self) -> Self::Deserializer","parent":{"krate":20,"index":1806},"children":[],"decl_id":{"krate":20,"index":1810},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163122,"byte_end":163125,"line_start":1265,"line_end":1265,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"fn new(&'a str) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new deserializer which will be deserializing the string\n provided.\n","sig":null,"attributes":[{"value":"/ Creates a new deserializer which will be deserializing the string","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163023,"byte_end":163092,"line_start":1263,"line_end":1263,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163097,"byte_end":163110,"line_start":1264,"line_end":1264,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163632,"byte_end":163635,"line_start":1278,"line_end":1278,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"fn end(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been\n fully deserialized.  This allows the `Deserializer` to validate that the\n input stream is at the end or that it only has trailing\n whitespace/comments.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163372,"byte_end":163446,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ fully deserialized.  This allows the `Deserializer` to validate that the","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163451,"byte_end":163527,"line_start":1275,"line_end":1275,"column_start":5,"column_end":81}},{"value":"/ input stream is at the end or that it only has trailing","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163532,"byte_end":163591,"line_start":1276,"line_end":1276,"column_start":5,"column_end":64}},{"value":"/ whitespace/comments.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163596,"byte_end":163620,"line_start":1277,"line_end":1277,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164049,"byte_end":164080,"line_start":1288,"line_end":1288,"column_start":12,"column_end":43},"name":"set_require_newline_after_table","qualname":"<Deserializer>::set_require_newline_after_table","value":"fn set_require_newline_after_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a newline after a\n table definition, but the TOML spec requires a newline after a table\n definition header.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a newline after a","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163696,"byte_end":163769,"line_start":1282,"line_end":1282,"column_start":5,"column_end":78}},{"value":"/ table definition, but the TOML spec requires a newline after a table","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163774,"byte_end":163846,"line_start":1283,"line_end":1283,"column_start":5,"column_end":77}},{"value":"/ definition header.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163851,"byte_end":163873,"line_start":1284,"line_end":1284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163878,"byte_end":163881,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `false` (the default is `true`) to emulate","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163886,"byte_end":163958,"line_start":1286,"line_end":1286,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163963,"byte_end":164037,"line_start":1287,"line_end":1287,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164549,"byte_end":164587,"line_start":1298,"line_end":1298,"column_start":12,"column_end":50},"name":"set_allow_duplicate_after_longer_table","qualname":"<Deserializer>::set_allow_duplicate_after_longer_table","value":"fn set_allow_duplicate_after_longer_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a duplicate table\n header after a longer table header was previously defined. This is\n invalid according to the TOML spec, however.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a duplicate table","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164172,"byte_end":164245,"line_start":1292,"line_end":1292,"column_start":5,"column_end":78}},{"value":"/ header after a longer table header was previously defined. This is","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164250,"byte_end":164320,"line_start":1293,"line_end":1293,"column_start":5,"column_end":75}},{"value":"/ invalid according to the TOML spec, however.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164325,"byte_end":164373,"line_start":1294,"line_end":1294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164378,"byte_end":164381,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `true` (the default is `false`) to emulate","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164386,"byte_end":164458,"line_start":1296,"line_end":1296,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":164463,"byte_end":164537,"line_start":1297,"line_end":1297,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":189774,"byte_end":189782,"line_start":2023,"line_end":2023,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Error>::line_col","value":"fn line_col(&Self) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Produces a (line, column) pair of the position of the error if available","sig":null,"attributes":[{"value":"/ Produces a (line, column) pair of the position of the error if available","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":189645,"byte_end":189721,"line_start":2020,"line_end":2020,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":189726,"byte_end":189729,"line_start":2021,"line_end":2021,"column_start":5,"column_end":8}},{"value":"/ All indexes are 0-based.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":189734,"byte_end":189762,"line_start":2022,"line_end":2022,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":191262,"byte_end":191266,"line_start":2081,"line_end":2081,"column_start":8,"column_end":12},"name":"from","qualname":"<std::io::Error as std::convert::From>::from","value":"fn from(Error) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":191409,"byte_end":191412,"line_start":2087,"line_end":2087,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10124},"children":[],"decl_id":{"krate":2,"index":10125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":194863,"byte_end":194869,"line_start":2171,"line_end":2171,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as serde::de::Error>::custom","value":"fn custom<T>(T) -> Error where T: fmt::Display","parent":{"krate":20,"index":9056},"children":[],"decl_id":{"krate":20,"index":9057},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197210,"byte_end":197214,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Span","qualname":"::tokens::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332}],"decl_id":null,"docs":" A span, designating a range of bytes where a token is located.\n","sig":null,"attributes":[{"value":"/ A span, designating a range of bytes where a token is located.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197087,"byte_end":197153,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197257,"byte_end":197262,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::tokens::Span::start","value":"usize","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197221,"byte_end":197248,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197321,"byte_end":197324,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"end","qualname":"::tokens::Span::end","value":"usize","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":" The end of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The end of the range (exclusive).","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197275,"byte_end":197312,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":197380,"byte_end":197384,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"from","qualname":"<(usize, usize) as std::convert::From>::from","value":"fn from(Span) -> (usize, usize)","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/macros.rs","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/macros.rs","byte_start":239914,"byte_end":239925,"line_start":411,"line_end":411,"column_start":8,"column_end":19},"name":"insert_toml","qualname":"::macros::insert_toml","value":"fn insert_toml(&mut Value, &[&str], Value)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/macros.rs","byte_start":240125,"byte_end":240134,"line_start":417,"line_end":417,"column_start":8,"column_end":17},"name":"push_toml","qualname":"::macros::push_toml","value":"fn push_toml(&mut Value, &[&str])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242298,"byte_end":242305,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned {  }","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466}],"decl_id":null,"docs":" A spanned value, indicating the range at which it is defined in the source.","sig":null,"attributes":[{"value":"/ A spanned value, indicating the range at which it is defined in the source.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241771,"byte_end":241850,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241851,"byte_end":241854,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241855,"byte_end":241862,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241863,"byte_end":241897,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ use toml::Spanned;","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241898,"byte_end":241920,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241921,"byte_end":241924,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241925,"byte_end":241951,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ struct Value {","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241952,"byte_end":241970,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/     s: Spanned<String>,","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241971,"byte_end":241998,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":241999,"byte_end":242004,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242005,"byte_end":242008,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let t = \"s = \\\"value\\\"\\n\";","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242009,"byte_end":242039,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242040,"byte_end":242043,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let u: Value = toml::from_str(t).unwrap();","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242044,"byte_end":242090,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242091,"byte_end":242094,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(u.s.start(), 4);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242095,"byte_end":242126,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(u.s.end(), 11);","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242127,"byte_end":242157,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(u.s.get_ref(), \"value\");","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242158,"byte_end":242197,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(u.s.into_inner(), String::from(\"value\"));","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242198,"byte_end":242254,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242255,"byte_end":242262,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242542,"byte_end":242547,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"start","qualname":"<Spanned<T>>::start","value":"fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the start of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the start of the span of the contained value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242474,"byte_end":242530,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242662,"byte_end":242665,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"end","qualname":"<Spanned<T>>::end","value":"fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the end of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the end of the span of the contained value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242596,"byte_end":242650,"line_start":48,"line_end":48,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242764,"byte_end":242768,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"span","qualname":"<Spanned<T>>::span","value":"fn span(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Get the span of the contained value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242712,"byte_end":242752,"line_start":53,"line_end":53,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242913,"byte_end":242923,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spanned<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the spanned value and returns the contained value.\n","sig":null,"attributes":[{"value":"/ Consumes the spanned value and returns the contained value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242838,"byte_end":242901,"line_start":58,"line_end":58,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243026,"byte_end":243033,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spanned<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242967,"byte_end":243014,"line_start":63,"line_end":63,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243147,"byte_end":243154,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spanned<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value.","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243080,"byte_end":243135,"line_start":68,"line_end":68,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243257,"byte_end":243263,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Spanned<String> as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &str","parent":{"krate":2,"index":2776},"children":[],"decl_id":{"krate":2,"index":2778},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243366,"byte_end":243368,"line_start":81,"line_end":81,"column_start":8,"column_end":10},"name":"eq","qualname":"<Spanned<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243522,"byte_end":243526,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"hash","qualname":"<Spanned<T> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10331},"children":[],"decl_id":{"krate":2,"index":10332},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243658,"byte_end":243669,"line_start":95,"line_end":95,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Spanned<T> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243808,"byte_end":243811,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Spanned<T> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243986,"byte_end":243997,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Spanned<T> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Spanned<T>, D::Error> where D: de::Deserializer","parent":{"krate":20,"index":1588},"children":[],"decl_id":{"krate":20,"index":1590},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":245604,"byte_end":245613,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Spanned<T> as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":20,"index":2128},"children":[],"decl_id":{"krate":20,"index":2129},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5893,"byte_end":5896,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10531,"byte_end":10534,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10674,"byte_end":10677,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10826,"byte_end":10829,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11075,"byte_end":11078,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11400,"byte_end":11403,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11618,"byte_end":11621,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11800,"byte_end":11803,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":12226,"byte_end":12229,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":12440,"byte_end":12447,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":13337,"byte_end":13340,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":13574,"byte_end":13577,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15815,"byte_end":15820,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16848,"byte_end":16859,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17293,"byte_end":17306,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19784,"byte_end":19787,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22390,"byte_end":22395,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28356,"byte_end":28361,"line_start":233,"line_end":233,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28540,"byte_end":28545,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28712,"byte_end":28717,"line_start":253,"line_end":253,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28857,"byte_end":28862,"line_start":260,"line_end":260,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":29039,"byte_end":29044,"line_start":266,"line_end":266,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":29285,"byte_end":29290,"line_start":274,"line_end":274,"column_start":75,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30722,"byte_end":30728,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31575,"byte_end":31581,"line_start":360,"line_end":360,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32092,"byte_end":32097,"line_start":383,"line_end":383,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32304,"byte_end":32309,"line_start":391,"line_end":391,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32460,"byte_end":32465,"line_start":398,"line_end":398,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":34200,"byte_end":34205,"line_start":445,"line_end":445,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":34393,"byte_end":34405,"line_start":452,"line_end":452,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":37700,"byte_end":37705,"line_start":545,"line_end":545,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":40414,"byte_end":40429,"line_start":633,"line_end":633,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":40583,"byte_end":40598,"line_start":641,"line_end":641,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":41243,"byte_end":41258,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":41445,"byte_end":41460,"line_start":676,"line_end":676,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":42587,"byte_end":42592,"line_start":714,"line_end":714,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":42734,"byte_end":42744,"line_start":724,"line_end":724,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":48078,"byte_end":48090,"line_start":914,"line_end":914,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":48483,"byte_end":48495,"line_start":931,"line_end":931,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":48891,"byte_end":48903,"line_start":947,"line_end":947,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":49298,"byte_end":49310,"line_start":963,"line_end":963,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":49696,"byte_end":49708,"line_start":979,"line_end":979,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":50717,"byte_end":50729,"line_start":1015,"line_end":1015,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":51290,"byte_end":51305,"line_start":1040,"line_end":1040,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":51551,"byte_end":51566,"line_start":1051,"line_end":1051,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58649,"byte_end":58657,"line_start":186,"line_end":186,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58789,"byte_end":58797,"line_start":192,"line_end":192,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59269,"byte_end":59273,"line_start":210,"line_end":210,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59442,"byte_end":59446,"line_start":216,"line_end":216,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59791,"byte_end":59797,"line_start":227,"line_end":227,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":60054,"byte_end":60062,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66118,"byte_end":66126,"line_start":427,"line_end":427,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66457,"byte_end":66465,"line_start":440,"line_end":440,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66659,"byte_end":66674,"line_start":447,"line_end":447,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":67516,"byte_end":67527,"line_start":474,"line_end":474,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":67721,"byte_end":67733,"line_start":481,"line_end":481,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":68443,"byte_end":68461,"line_start":509,"line_end":509,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":68657,"byte_end":68664,"line_start":516,"line_end":516,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":69302,"byte_end":69320,"line_start":538,"line_end":538,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":69459,"byte_end":69477,"line_start":544,"line_end":544,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74113,"byte_end":74126,"line_start":156,"line_end":156,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74421,"byte_end":74435,"line_start":172,"line_end":172,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76112,"byte_end":76122,"line_start":242,"line_end":242,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":99172,"byte_end":99184,"line_start":970,"line_end":970,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":100669,"byte_end":100681,"line_start":1019,"line_end":1019,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101052,"byte_end":101064,"line_start":1035,"line_end":1035,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101432,"byte_end":101444,"line_start":1051,"line_end":1051,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101804,"byte_end":101818,"line_start":1067,"line_end":1067,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":103752,"byte_end":103766,"line_start":1132,"line_end":1132,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":105489,"byte_end":105503,"line_start":1190,"line_end":1190,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":109981,"byte_end":109996,"line_start":1361,"line_end":1361,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":114539,"byte_end":114544,"line_start":1529,"line_end":1529,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115269,"byte_end":115274,"line_start":1545,"line_end":1545,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115299,"byte_end":115304,"line_start":1547,"line_end":1547,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116930,"byte_end":116940,"line_start":1609,"line_end":1609,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":117058,"byte_end":117068,"line_start":1615,"line_end":1615,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":121162,"byte_end":121172,"line_start":1770,"line_end":1770,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":121478,"byte_end":121488,"line_start":1783,"line_end":1783,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":121801,"byte_end":121811,"line_start":1796,"line_end":1796,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":122121,"byte_end":122131,"line_start":1809,"line_end":1809,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":122433,"byte_end":122443,"line_start":1822,"line_end":1822,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":122866,"byte_end":122876,"line_start":1839,"line_end":1839,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":135409,"byte_end":135419,"line_start":396,"line_end":396,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":140696,"byte_end":140706,"line_start":538,"line_end":538,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":142626,"byte_end":142636,"line_start":598,"line_end":598,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":145755,"byte_end":145770,"line_start":708,"line_end":708,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":146100,"byte_end":146115,"line_start":720,"line_end":720,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":146266,"byte_end":146281,"line_start":728,"line_end":728,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":147628,"byte_end":147645,"line_start":775,"line_end":775,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":147967,"byte_end":147984,"line_start":789,"line_end":789,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1222},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":153667,"byte_end":153677,"line_start":960,"line_end":960,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":154046,"byte_end":154051,"line_start":976,"line_end":976,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":154431,"byte_end":154450,"line_start":991,"line_end":991,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":155797,"byte_end":155817,"line_start":1036,"line_end":1036,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":156416,"byte_end":156441,"line_start":1060,"line_end":1060,"column_start":37,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":157013,"byte_end":157036,"line_start":1082,"line_end":1082,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":157585,"byte_end":157608,"line_start":1101,"line_end":1101,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":158326,"byte_end":158349,"line_start":1125,"line_end":1125,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":159285,"byte_end":159306,"line_start":1156,"line_end":1156,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163000,"byte_end":163012,"line_start":1262,"line_end":1262,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":189633,"byte_end":189638,"line_start":2019,"line_end":2019,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":191247,"byte_end":191252,"line_start":2080,"line_end":2080,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":191394,"byte_end":191399,"line_start":2086,"line_end":2086,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":194819,"byte_end":194824,"line_start":2168,"line_end":2168,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":194848,"byte_end":194853,"line_start":2170,"line_end":2170,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":195250,"byte_end":195256,"line_start":2192,"line_end":2192,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":196530,"byte_end":196531,"line_start":2243,"line_end":2243,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":198525,"byte_end":198534,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":212247,"byte_end":212255,"line_start":485,"line_end":485,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":212680,"byte_end":212691,"line_start":502,"line_end":502,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":213585,"byte_end":213590,"line_start":536,"line_end":536,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242457,"byte_end":242464,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243232,"byte_end":243239,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243346,"byte_end":243353,"line_start":80,"line_end":80,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243464,"byte_end":243471,"line_start":86,"line_end":86,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243502,"byte_end":243509,"line_start":88,"line_end":88,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243638,"byte_end":243645,"line_start":94,"line_end":94,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243788,"byte_end":243795,"line_start":100,"line_end":100,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243931,"byte_end":243938,"line_start":106,"line_end":106,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":244208,"byte_end":244222,"line_start":116,"line_end":116,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":245584,"byte_end":245591,"line_start":159,"line_end":159,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4140,"byte_end":4143,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4153,"byte_end":4158,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4230,"byte_end":4233,"line_start":158,"line_end":158,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":624}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4332,"byte_end":4334,"line_start":161,"line_end":161,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1030}},{"kind":"Mod","span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/lib.rs","byte_start":4447,"byte_end":4453,"line_start":167,"line_end":167,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1514}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":5893,"byte_end":5896,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10531,"byte_end":10534,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10674,"byte_end":10677,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":10826,"byte_end":10829,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11075,"byte_end":11078,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3483}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11400,"byte_end":11403,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3487}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11618,"byte_end":11621,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":11800,"byte_end":11803,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":40},"to":{"krate":20,"index":2128}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":12226,"byte_end":12229,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":40},"to":{"krate":20,"index":1588}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":12440,"byte_end":12447,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":13337,"byte_end":13340,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":8282}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":13574,"byte_end":13577,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":8295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":15815,"byte_end":15820,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":16848,"byte_end":16859,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":17293,"byte_end":17306,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/map.rs","byte_start":19784,"byte_end":19787,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":8286}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":22390,"byte_end":22395,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28356,"byte_end":28361,"line_start":233,"line_end":233,"column_start":27,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3483}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28540,"byte_end":28545,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3487}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28712,"byte_end":28717,"line_start":253,"line_end":253,"column_start":28,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":28857,"byte_end":28862,"line_start":260,"line_end":260,"column_start":39,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":29039,"byte_end":29044,"line_start":266,"line_end":266,"column_start":64,"column_end":69},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":29285,"byte_end":29290,"line_start":274,"line_end":274,"column_start":75,"column_end":80},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30315,"byte_end":30321,"line_start":312,"line_end":312,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":313},"to":{"krate":0,"index":308}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":30722,"byte_end":30728,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":8341},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":31575,"byte_end":31581,"line_start":360,"line_end":360,"column_start":16,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":8341},"to":{"krate":0,"index":308}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32092,"byte_end":32097,"line_start":383,"line_end":383,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32304,"byte_end":32309,"line_start":391,"line_end":391,"column_start":18,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":12774}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":32460,"byte_end":32465,"line_start":398,"line_end":398,"column_start":25,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1674},"to":{"krate":20,"index":2128}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":34200,"byte_end":34205,"line_start":445,"line_end":445,"column_start":36,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1674},"to":{"krate":20,"index":1588}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":34393,"byte_end":34405,"line_start":452,"line_end":452,"column_start":40,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":361},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":37700,"byte_end":37705,"line_start":545,"line_end":545,"column_start":37,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1674},"to":{"krate":20,"index":1610}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":40414,"byte_end":40429,"line_start":633,"line_end":633,"column_start":6,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":40583,"byte_end":40598,"line_start":641,"line_end":641,"column_start":34,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":400},"to":{"krate":20,"index":1730}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":41243,"byte_end":41258,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":41445,"byte_end":41460,"line_start":676,"line_end":676,"column_start":34,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":410},"to":{"krate":20,"index":1748}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":42587,"byte_end":42592,"line_start":714,"line_end":714,"column_start":59,"column_end":64},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1674},"to":{"krate":20,"index":1806}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":42734,"byte_end":42744,"line_start":724,"line_end":724,"column_start":26,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":428},"to":{"krate":20,"index":2131}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":48078,"byte_end":48090,"line_start":914,"line_end":914,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2181}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":48483,"byte_end":48495,"line_start":931,"line_end":931,"column_start":30,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2187}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":48891,"byte_end":48903,"line_start":947,"line_end":947,"column_start":36,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2193}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":49298,"byte_end":49310,"line_start":963,"line_end":963,"column_start":37,"column_end":49},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":472},"to":{"krate":20,"index":2199}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":49696,"byte_end":49708,"line_start":979,"line_end":979,"column_start":28,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":474},"to":{"krate":20,"index":2205}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":50717,"byte_end":50729,"line_start":1015,"line_end":1015,"column_start":31,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":474},"to":{"krate":20,"index":2216}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":51290,"byte_end":51305,"line_start":1040,"line_end":1040,"column_start":44,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":515},"to":{"krate":20,"index":1599}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/value.rs","byte_start":51551,"byte_end":51566,"line_start":1051,"line_end":1051,"column_start":36,"column_end":51},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":515},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58649,"byte_end":58657,"line_start":186,"line_end":186,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":58789,"byte_end":58797,"line_start":192,"line_end":192,"column_start":23,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59269,"byte_end":59273,"line_start":210,"line_end":210,"column_start":23,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1795},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59442,"byte_end":59446,"line_start":216,"line_end":216,"column_start":23,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":59791,"byte_end":59797,"line_start":227,"line_end":227,"column_start":23,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1822},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":60054,"byte_end":60062,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1776},"to":{"krate":2,"index":12774}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66118,"byte_end":66126,"line_start":427,"line_end":427,"column_start":25,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1776},"to":{"krate":20,"index":2128}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66457,"byte_end":66465,"line_start":440,"line_end":440,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1776},"to":{"krate":20,"index":1588}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":66659,"byte_end":66674,"line_start":447,"line_end":447,"column_start":40,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":583},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":67516,"byte_end":67527,"line_start":474,"line_end":474,"column_start":36,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":593},"to":{"krate":20,"index":1588}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":67721,"byte_end":67733,"line_start":481,"line_end":481,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":599},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":68443,"byte_end":68461,"line_start":509,"line_end":509,"column_start":36,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":607},"to":{"krate":20,"index":1588}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":68657,"byte_end":68664,"line_start":516,"line_end":516,"column_start":40,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":613},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":69302,"byte_end":69320,"line_start":538,"line_end":538,"column_start":23,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1789},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/datetime.rs","byte_start":69459,"byte_end":69477,"line_start":544,"line_end":544,"column_start":23,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74113,"byte_end":74126,"line_start":156,"line_end":156,"column_start":6,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":74421,"byte_end":74435,"line_start":172,"line_end":172,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":76112,"byte_end":76122,"line_start":242,"line_end":242,"column_start":10,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":99172,"byte_end":99184,"line_start":970,"line_end":970,"column_start":36,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2181}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":100669,"byte_end":100681,"line_start":1019,"line_end":1019,"column_start":38,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2187}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101052,"byte_end":101064,"line_start":1035,"line_end":1035,"column_start":45,"column_end":57},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2199}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101432,"byte_end":101444,"line_start":1051,"line_end":1051,"column_start":44,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":666},"to":{"krate":20,"index":2193}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":101804,"byte_end":101818,"line_start":1067,"line_end":1067,"column_start":36,"column_end":50},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":673},"to":{"krate":20,"index":2205}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":103752,"byte_end":103766,"line_start":1132,"line_end":1132,"column_start":39,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":673},"to":{"krate":20,"index":2216}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":105489,"byte_end":105503,"line_start":1190,"line_end":1190,"column_start":34,"column_end":48},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":811},"to":{"krate":20,"index":2131}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":109981,"byte_end":109996,"line_start":1361,"line_end":1361,"column_start":26,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":859},"to":{"krate":20,"index":2131}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":114539,"byte_end":114544,"line_start":1529,"line_end":1529,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1837},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115269,"byte_end":115274,"line_start":1545,"line_end":1545,"column_start":23,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1837},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":115299,"byte_end":115304,"line_start":1547,"line_end":1547,"column_start":21,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1837},"to":{"krate":20,"index":9671}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":116930,"byte_end":116940,"line_start":1609,"line_end":1609,"column_start":9,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":117058,"byte_end":117068,"line_start":1615,"line_end":1615,"column_start":41,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2131}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":121162,"byte_end":121172,"line_start":1770,"line_end":1770,"column_start":43,"column_end":53},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2181}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":121478,"byte_end":121488,"line_start":1783,"line_end":1783,"column_start":45,"column_end":55},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2187}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":121801,"byte_end":121811,"line_start":1796,"line_end":1796,"column_start":52,"column_end":62},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2199}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":122121,"byte_end":122131,"line_start":1809,"line_end":1809,"column_start":51,"column_end":61},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2193}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":122433,"byte_end":122443,"line_start":1822,"line_end":1822,"column_start":43,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2205}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/ser.rs","byte_start":122866,"byte_end":122876,"line_start":1839,"line_end":1839,"column_start":46,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":924},"to":{"krate":20,"index":2216}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":135409,"byte_end":135419,"line_start":396,"line_end":396,"column_start":38,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1748}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":140696,"byte_end":140706,"line_start":538,"line_end":538,"column_start":38,"column_end":48},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1730}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":142626,"byte_end":142636,"line_start":598,"line_end":598,"column_start":41,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1610}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":145755,"byte_end":145770,"line_start":708,"line_end":708,"column_start":10,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":146100,"byte_end":146115,"line_start":720,"line_end":720,"column_start":46,"column_end":61},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1188},"to":{"krate":20,"index":1806}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":146266,"byte_end":146281,"line_start":728,"line_end":728,"column_start":37,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1188},"to":{"krate":20,"index":1610}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":147628,"byte_end":147645,"line_start":775,"line_end":775,"column_start":10,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":147967,"byte_end":147984,"line_start":789,"line_end":789,"column_start":37,"column_end":54},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1207},"to":{"krate":20,"index":1610}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":153667,"byte_end":153677,"line_start":960,"line_end":960,"column_start":52,"column_end":62},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1130},"to":{"krate":20,"index":1806}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":154046,"byte_end":154051,"line_start":976,"line_end":976,"column_start":48,"column_end":53},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2293},"to":{"krate":20,"index":1806}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":154431,"byte_end":154450,"line_start":991,"line_end":991,"column_start":37,"column_end":56},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1246},"to":{"krate":20,"index":1748}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":155797,"byte_end":155817,"line_start":1036,"line_end":1036,"column_start":34,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1261},"to":{"krate":20,"index":1748}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":156416,"byte_end":156441,"line_start":1060,"line_end":1060,"column_start":37,"column_end":62},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1272},"to":{"krate":20,"index":1610}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":157013,"byte_end":157036,"line_start":1082,"line_end":1082,"column_start":35,"column_end":58},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1279},"to":{"krate":20,"index":1786}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":157585,"byte_end":157608,"line_start":1101,"line_end":1101,"column_start":34,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1290},"to":{"krate":20,"index":1748}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":158326,"byte_end":158349,"line_start":1125,"line_end":1125,"column_start":35,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1290},"to":{"krate":20,"index":1786}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":159285,"byte_end":159306,"line_start":1156,"line_end":1156,"column_start":38,"column_end":59},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1308},"to":{"krate":20,"index":1794}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":163000,"byte_end":163012,"line_start":1262,"line_end":1262,"column_start":10,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":189633,"byte_end":189638,"line_start":2019,"line_end":2019,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":191247,"byte_end":191252,"line_start":2080,"line_end":2080,"column_start":45,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":3959},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":191394,"byte_end":191399,"line_start":2086,"line_end":2086,"column_start":23,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1936},"to":{"krate":2,"index":10124}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":194819,"byte_end":194824,"line_start":2168,"line_end":2168,"column_start":23,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1936},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":194848,"byte_end":194853,"line_start":2170,"line_end":2170,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1936},"to":{"krate":20,"index":9056}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":195250,"byte_end":195256,"line_start":2192,"line_end":2192,"column_start":10,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/de.rs","byte_start":196530,"byte_end":196531,"line_start":2243,"line_end":2243,"column_start":10,"column_end":11},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":198525,"byte_end":198534,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":212247,"byte_end":212255,"line_start":485,"line_end":485,"column_start":23,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":8481}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":212680,"byte_end":212691,"line_start":502,"line_end":502,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/tokens.rs","byte_start":213585,"byte_end":213590,"line_start":536,"line_end":536,"column_start":10,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":242457,"byte_end":242464,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243232,"byte_end":243239,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2462},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243346,"byte_end":243353,"line_start":80,"line_end":80,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2462},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243464,"byte_end":243471,"line_start":86,"line_end":86,"column_start":20,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2462},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243502,"byte_end":243509,"line_start":88,"line_end":88,"column_start":24,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2462},"to":{"krate":2,"index":10331}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243638,"byte_end":243645,"line_start":94,"line_end":94,"column_start":36,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2462},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243788,"byte_end":243795,"line_start":100,"line_end":100,"column_start":22,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2462},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":243931,"byte_end":243938,"line_start":106,"line_end":106,"column_start":39,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2462},"to":{"krate":20,"index":1588}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":244208,"byte_end":244222,"line_start":116,"line_end":116,"column_start":43,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1596},"to":{"krate":20,"index":1674}},{"span":{"file_name":"/Users/alexbilson/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.10/src/spanned.rs","byte_start":245584,"byte_end":245591,"line_start":159,"line_end":159,"column_start":44,"column_end":51},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2462},"to":{"krate":20,"index":2128}}]}